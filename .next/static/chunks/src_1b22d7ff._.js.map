{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,IAAA,4HAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vendors/vendor-card.tsx"],"sourcesContent":["'use client';\n\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardFooter,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Mail, Phone, Wrench } from 'lucide-react';\nimport type { Vendor } from './schema';\nimport Link from 'next/link';\n\ninterface VendorCardProps {\n  vendor: Vendor;\n}\n\nexport function VendorCard({ vendor }: VendorCardProps) {\n\n  return (\n    <Card className=\"flex flex-col\">\n       <CardHeader className=\"flex-row items-start gap-4 space-y-0\">\n          <div className=\"flex-shrink-0\">\n              <div className=\"w-12 h-12 flex items-center justify-center bg-secondary rounded-lg\">\n                  <Wrench className=\"h-6 w-6 text-secondary-foreground\" />\n              </div>\n          </div>\n          <div className=\"flex-1\">\n              <CardDescription>{vendor.code}</CardDescription>\n              <CardTitle className=\"text-lg\">{vendor.name}</CardTitle>\n          </div>\n      </CardHeader>\n      <CardContent className=\"space-y-3 flex-grow\">\n        {vendor.mobile && (\n             <div className=\"flex items-center text-sm\">\n                <Phone className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                <span className=\"font-medium\">{vendor.mobile}</span>\n            </div>\n        )}\n        {vendor.email && (\n            <div className=\"flex items-center text-sm\">\n                <Mail className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                <span className=\"font-medium truncate\">{vendor.email}</span>\n            </div>\n        )}\n      </CardContent>\n      <CardFooter>\n        <Button asChild variant=\"outline\" className=\"w-full\">\n          <Link href={`/vendors/add?code=${vendor.code}`}>View Details</Link>\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAQA;AACA;AAAA;AAAA;AAEA;AAbA;;;;;;AAmBO,SAAS,WAAW,KAA2B;QAA3B,EAAE,MAAM,EAAmB,GAA3B;IAEzB,qBACE,6LAAC,2IAAI;QAAC,WAAU;;0BACb,6LAAC,iJAAU;gBAAC,WAAU;;kCACnB,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;4BAAI,WAAU;sCACX,cAAA,6LAAC,mNAAM;gCAAC,WAAU;;;;;;;;;;;;;;;;kCAG1B,6LAAC;wBAAI,WAAU;;0CACX,6LAAC,sJAAe;0CAAE,OAAO,IAAI;;;;;;0CAC7B,6LAAC,gJAAS;gCAAC,WAAU;0CAAW,OAAO,IAAI;;;;;;;;;;;;;;;;;;0BAGnD,6LAAC,kJAAW;gBAAC,WAAU;;oBACpB,OAAO,MAAM,kBACT,6LAAC;wBAAI,WAAU;;0CACZ,6LAAC,gNAAK;gCAAC,WAAU;;;;;;0CACjB,6LAAC;gCAAK,WAAU;0CAAe,OAAO,MAAM;;;;;;;;;;;;oBAGnD,OAAO,KAAK,kBACT,6LAAC;wBAAI,WAAU;;0CACX,6LAAC,6MAAI;gCAAC,WAAU;;;;;;0CAChB,6LAAC;gCAAK,WAAU;0CAAwB,OAAO,KAAK;;;;;;;;;;;;;;;;;;0BAI9D,6LAAC,iJAAU;0BACT,cAAA,6LAAC,+IAAM;oBAAC,OAAO;oBAAC,SAAQ;oBAAU,WAAU;8BAC1C,cAAA,6LAAC,0KAAI;wBAAC,MAAM,AAAC,qBAAgC,OAAZ,OAAO,IAAI;kCAAI;;;;;;;;;;;;;;;;;;;;;;AAK1D;KApCgB","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vendors/vendor-grid.tsx"],"sourcesContent":["'use client';\n\nimport { VendorCard } from './vendor-card';\nimport { type Vendor } from './schema';\n\ninterface VendorGridProps {\n  vendors: Vendor[];\n}\n\nexport function VendorGrid({ vendors }: VendorGridProps) {\n  if (vendors.length === 0) {\n    return (\n      <div className=\"text-center py-10 text-muted-foreground\">\n        <p>No vendors found.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\">\n      {vendors.map(vendor => (\n        <VendorCard key={vendor.code} vendor={vendor} />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AASO,SAAS,WAAW,KAA4B;QAA5B,EAAE,OAAO,EAAmB,GAA5B;IACzB,IAAI,QAAQ,MAAM,KAAK,GAAG;QACxB,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;0BAAE;;;;;;;;;;;IAGT;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACZ,QAAQ,GAAG,CAAC,CAAA,uBACX,6LAAC,yJAAU;gBAAmB,QAAQ;eAArB,OAAO,IAAI;;;;;;;;;;AAIpC;KAhBgB","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAG5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAM,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,2KAAgB,OAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,6DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,2KAAgB,QAGnC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vendors/data-table.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\nimport { FileText, FileSpreadsheet } from 'lucide-react';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    []\n  );\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    onSortingChange: setSorting,\n    getSortedRowModel: getSortedRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n    const exportableColumns = columns.filter(col => col.id !== 'select' && col.id !== 'actions' && col.id !== 'attachments' && 'accessorKey' in col);\n    \n    const head = [exportableColumns.map(col => {\n        if (typeof col.header === 'string') return col.header;\n        // @ts-ignore\n        return col.accessorKey as string || '';\n    })];\n\n    const body = table.getRowModel().rows.map(row => \n        exportableColumns.map(col => {\n            // @ts-ignore\n            const value = row.original[col.accessorKey as keyof TData];\n            return String(value ?? '');\n        })\n    );\n\n    doc.text(\"Vendors List\", 14, 16);\n    (doc as any).autoTable({\n        head: head,\n        body: body,\n        startY: 20,\n    });\n    doc.save('vendors-list.pdf');\n  };\n\n  const handleExportExcel = () => {\n    const dataToExport = table.getRowModel().rows.map(row => {\n        let obj: any = {};\n         columns.filter(col => col.id !== 'select' && col.id !== 'actions' && col.id !== 'attachments' && 'accessorKey' in col).forEach(col => {\n            const headerText = (typeof col.header === 'string' ? col.header : col.accessorKey) as string;\n            // @ts-ignore\n            obj[headerText] = row.original[col.accessorKey as keyof TData];\n         })\n         return obj;\n    });\n\n    const ws = XLSX.utils.json_to_sheet(dataToExport);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Vendors\");\n    XLSX.writeFile(wb, \"vendors-list.xlsx\");\n  };\n\n  return (\n    <div>\n      <div className=\"flex items-center py-4\">\n        <Input\n          placeholder=\"Filter by name...\"\n          value={(table.getColumn('name')?.getFilterValue() as string) ?? ''}\n          onChange={(event) =>\n            table.getColumn('name')?.setFilterValue(event.target.value)\n          }\n          className=\"max-w-sm\"\n        />\n         <div className=\"ml-auto flex items-center gap-2\">\n            <Button variant=\"outline\" size=\"sm\" onClick={handleExportPDF}>\n                <FileText className=\"mr-2 h-4 w-4\" /> Export PDF\n            </Button>\n            <Button variant=\"outline\" size=\"sm\" onClick={handleExportExcel}>\n                <FileSpreadsheet className=\"mr-2 h-4 w-4\" /> Export Excel\n            </Button>\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"outline\">\n                  Columns\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\">\n                {table\n                  .getAllColumns()\n                  .filter((column) => column.getCanHide())\n                  .map((column) => {\n                    return (\n                      <DropdownMenuCheckboxItem\n                        key={column.id}\n                        className=\"capitalize\"\n                        checked={column.getIsVisible()}\n                        onCheckedChange={(value) =>\n                          column.toggleVisibility(!!value)\n                        }\n                      >\n                        {column.id}\n                      </DropdownMenuCheckboxItem>\n                    );\n                  })}\n              </DropdownMenuContent>\n            </DropdownMenu>\n        </div>\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && 'selected'}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <div className=\"flex-1 text-sm text-muted-foreground\">\n          {table.getFilteredSelectedRowModel().rows.length} of{' '}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n        >\n          Previous\n        </Button>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n        >\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 778, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,2KAAgB,MAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,+KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,oLAA2B;YAC1B,WAAW,IAAA,4HAAE,EAAC;sBAEd,cAAA,6LAAC,gNAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,+KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 832, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,sLAAyB;AAE7C,MAAM,qBAAqB,yLAA4B;AAEvD,MAAM,oBAAoB,wLAA2B;AAErD,MAAM,mCAAqB,2KAAgB,CAGzC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,yLAA4B;QAC3B,WAAW,IAAA,4HAAE,EACX,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;;KAVH;AAaN,mBAAmB,WAAW,GAAG,yLAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,2KAAgB,OAGzC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,yLAA4B;gBAC3B,KAAK;gBACL,WAAW,IAAA,4HAAE,EACX,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,yLAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB;QAAC,EACzB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,oDACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB;QAAC,EACzB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,2KAAgB,OAGvC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,uLAA0B;QACzB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;;;AAGb,iBAAiB,WAAW,GAAG,uLAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,2KAAgB,OAG7C,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,6LAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,uBAAuB,WAAW,GAChC,6LAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,2KAAgB,OAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,wLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,IAAA,uJAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,wLAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,2KAAgB,QAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,wLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,IAAA,uJAAc,EAAC;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,wLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1017, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,6KAAoB;AAEnC,MAAM,gBAAgB,gLAAuB;AAE7C,MAAM,eAAe,+KAAsB;AAE3C,MAAM,cAAc,8KAAqB;AAEzC,MAAM,8BAAgB,2KAAgB,CAGpC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,gLAAuB;QACtB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,2KAAgB,OAGpC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,gLAAuB;gBACtB,KAAK;gBACL,WAAW,IAAA,4HAAE,EACX,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,8KAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,oMAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,8KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,qDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,8KAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,2KAAgB,OAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,oLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,oLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1194, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vendors/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport { type Payment } from '../finance/payment/schema';\nimport { z } from 'zod';\nimport { vendorSchema, type Vendor } from './schema';\n\nconst vendorsFilePath = path.join(process.cwd(), 'src/app/vendors/vendors-data.json');\nconst paymentsFilePath = path.join(process.cwd(), 'src/app/finance/payment/payments-data.json');\n\n\nasync function getVendors() {\n    try {\n        await fs.access(vendorsFilePath);\n        const data = await fs.readFile(vendorsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return []; // Return empty array if file doesn't exist\n        }\n        throw error;\n    }\n}\n\nasync function writeVendors(data: any) {\n    await fs.writeFile(vendorsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\n\nexport async function getAllVendors() {\n    const vendors = await getVendors();\n    // The list page expects a flat structure for each vendor, plus attachments.\n    return vendors.map((v: any) => ({\n        ...v.vendorData,\n        attachments: v.attachments || []\n    }));\n}\n\nasync function getNextVendorCode() {\n    const allVendors = await getVendors();\n    let maxNum = 0;\n    allVendors.forEach((v: any) => {\n        const code = v.vendorData.code || '';\n        const match = code.match(/^V(\\d+)$/);\n        if(match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `V${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\nexport async function saveVendorData(dataToSave: any, isNewRecord: boolean, isAutoCode: boolean) {\n  try {\n    const allVendors = await getVendors();\n    let vendorData = dataToSave.vendorData;\n    let savedVendor;\n    \n    if (isNewRecord) {\n        if (isAutoCode) {\n            vendorData.code = await getNextVendorCode();\n        }\n        const { code } = vendorData;\n        const vendorExists = allVendors.some((v: any) => v.vendorData.code === code);\n        if (vendorExists) {\n            return { success: false, error: `Vendor with code \"${code}\" already exists.` };\n        }\n        const newVendor = {\n            id: `V-${Date.now()}`,\n            ...dataToSave,\n            vendorData\n        };\n        allVendors.push(newVendor);\n        savedVendor = newVendor;\n    } else {\n        const { code } = vendorData;\n        const index = allVendors.findIndex((v: any) => v.vendorData.code === code);\n\n        if (index !== -1) {\n            allVendors[index] = {\n                ...allVendors[index],\n                ...dataToSave,\n                id: allVendors[index].id // Preserve original ID\n            };\n            savedVendor = allVendors[index];\n        } else {\n            return { success: false, error: `Vendor with code \"${code}\" not found.` };\n        }\n    }\n    \n    await writeVendors(allVendors);\n    revalidatePath('/vendors');\n\n    return { success: true, data: savedVendor.vendorData };\n  } catch (error) {\n    console.error('Failed to save vendor data:', error);\n    return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n  }\n}\n\nexport async function findVendorData(vendorCode: string) {\n  try {\n    const allVendors = await getVendors();\n    \n    if (vendorCode === 'new') {\n        const newVendorCode = await getNextVendorCode();\n        return { success: true, data: { vendorData: { code: newVendorCode } } };\n    }\n\n    const vendor = allVendors.find((v: any) => v.vendorData.code === vendorCode);\n\n    if (vendor) {\n       return { success: true, data: vendor };\n    } else {\n       return { success: false, error: \"Not Found\" };\n    }\n  } catch (error) {\n    console.error('Failed to find vendor data:', error);\n    return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n  }\n}\n\nexport async function deleteVendorData(vendorCode: string) {\n    try {\n        const allVendors = await getVendors();\n        const updatedVendors = allVendors.filter((v: any) => v.vendorData.code !== vendorCode);\n\n        if (allVendors.length === updatedVendors.length) {\n            return { success: false, error: 'Vendor not found.' };\n        }\n\n        await writeVendors(updatedVendors);\n        revalidatePath('/vendors');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to delete vendor data:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n\nasync function readPayments(): Promise<Payment[]> {\n    try {\n        const paymentsData = await fs.readFile(paymentsFilePath, 'utf-8');\n        return JSON.parse(paymentsData);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        console.error('Failed to read payments file:', error);\n        return [];\n    }\n}\n\nexport async function getPaymentsForVendor(vendorCode: string): Promise<Payment[]> {\n    try {\n        const allPayments = await readPayments();\n        // Vendors are identified by code. Fetch both Payments to and Receipts (refunds) from them.\n        const vendorPayments = allPayments.filter(p => p.partyName === vendorCode && p.partyType === 'Vendor');\n        return vendorPayments.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    } catch (error) {\n        console.error('Failed to get payments for vendor:', error);\n        return [];\n    }\n}\n\nconst importVendorSchema = vendorSchema.omit({ id: true, attachments: true });\n\nexport async function importVendors(data: unknown) {\n  const validation = z.array(importVendorSchema).safeParse(data);\n  if (!validation.success) {\n    return { success: false, error: \"Invalid data format.\" };\n  }\n\n  try {\n    const allVendors = await getVendors();\n    let updatedCount = 0;\n    let addedCount = 0;\n\n    validation.data.forEach(importedVendor => {\n      const existingVendorIndex = allVendors.findIndex(\n        (v: any) => v.vendorData.code === importedVendor.code\n      );\n\n      if (existingVendorIndex > -1) {\n        // Update existing vendor\n        allVendors[existingVendorIndex].vendorData = {\n          ...allVendors[existingVendorIndex].vendorData,\n          ...importedVendor,\n        };\n        updatedCount++;\n      } else {\n        // Add new vendor\n        allVendors.push({\n          id: `V-${Date.now()}-${Math.random()}`.replace('.', ''),\n          vendorData: importedVendor,\n          attachments: [],\n        });\n        addedCount++;\n      }\n    });\n\n    await writeVendors(allVendors);\n    revalidatePath('/vendors');\n    return { success: true, added: addedCount, updated: updatedCount };\n  } catch (error) {\n    return { success: false, error: \"Failed to import vendors.\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;;IAgIsB,mBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 1209, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vendors/columns.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { ColumnDef } from '@tanstack/react-table';\nimport { ArrowUpDown, Pencil, Trash2, MoreHorizontal, Paperclip, Link as LinkIcon, File } from 'lucide-react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\n\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { useToast } from '@/hooks/use-toast';\nimport { deleteVendorData } from './actions';\nimport { Vendor } from './schema';\n\nconst ActionsCell = ({ row }: { row: { original: Vendor } }) => {\n  const vendor = row.original;\n  const router = useRouter();\n  const { toast } = useToast();\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const handleDelete = async () => {\n    setIsDeleting(true);\n    try {\n      const result = await deleteVendorData(vendor.code);\n      if (result.success) {\n        toast({\n          title: 'Success',\n          description: `Vendor \"${vendor.name}\" deleted successfully.`,\n        });\n        router.refresh();\n      } else {\n        throw new Error(result.error || 'An unknown error occurred');\n      }\n    } catch (error) {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: (error as Error).message || 'Failed to delete vendor.',\n      });\n    } finally {\n      setIsDeleting(false);\n      setIsDeleteDialogOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n            <AlertDialogDescription>\n              This action cannot be undone. This will permanently delete the\n              vendor \"{vendor.name}\" and all associated data.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={handleDelete}\n              disabled={isDeleting}\n              className=\"bg-destructive hover:bg-destructive/90\"\n            >\n              {isDeleting ? 'Deleting...' : 'Delete'}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      <div className=\"text-right\">\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n              <span className=\"sr-only\">Open menu</span>\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n            <DropdownMenuItem asChild>\n              <Link href={`/vendors/add?code=${vendor.code}`}>\n                <Pencil className=\"mr-2 h-4 w-4\" />\n                Edit\n              </Link>\n            </DropdownMenuItem>\n            <DropdownMenuItem\n              className=\"text-destructive\"\n              onSelect={() => setIsDeleteDialogOpen(true)}\n            >\n              <Trash2 className=\"mr-2 h-4 w-4\" />\n              Delete\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n    </>\n  );\n};\n\ntype Attachment = {\n  id: number;\n  name: string;\n  file: string | null;\n  remarks: string;\n  isLink: boolean;\n};\n\n\nconst AttachmentsCell = ({ row }: { row: { original: Vendor } }) => {\n    const vendor = row.original;\n    const attachments: Attachment[] = vendor.attachments || [];\n\n    if (attachments.length === 0) {\n        return <span className=\"text-muted-foreground text-xs\">No attachments</span>;\n    }\n\n    return (\n        <Dialog>\n            <DialogTrigger asChild>\n                <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-2\">\n                    <Paperclip className=\"h-4 w-4\" />\n                    <span>{attachments.length}</span>\n                </Button>\n            </DialogTrigger>\n            <DialogContent>\n                <DialogHeader>\n                    <DialogTitle>Attachments for {vendor.name}</DialogTitle>\n                    <DialogDescription>\n                        List of all attached files and links.\n                    </DialogDescription>\n                </DialogHeader>\n                <div className=\"max-h-80 overflow-y-auto\">\n                    <ul className=\"space-y-2\">\n                       {attachments.map(att => (\n                           <li key={att.id} className=\"flex items-center justify-between p-2 border rounded-md\">\n                               <div className=\"flex items-center gap-3\">\n                                   {att.isLink ? <LinkIcon className=\"h-5 w-5 text-primary\"/> : <File className=\"h-5 w-5 text-primary\"/>}\n                                   <div className=\"flex flex-col\">\n                                     <span className=\"font-medium\">{att.name}</span>\n                                     <span className=\"text-xs text-muted-foreground\">{att.remarks || (att.isLink ? 'Link' : 'File')}</span>\n                                   </div>\n                               </div>\n                                {att.isLink && typeof att.file === 'string' ? (\n                                    <Button variant=\"link\" asChild size=\"sm\">\n                                        <a href={att.file} target=\"_blank\" rel=\"noopener noreferrer\">View Link</a>\n                                    </Button>\n                                ) : (\n                                    <span className=\"text-sm text-muted-foreground italic\">{att.file}</span>\n                                )}\n                           </li>\n                       ))}\n                    </ul>\n                </div>\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport const columns: ColumnDef<Vendor>[] = [\n  {\n    id: 'select',\n    header: ({ table }) => (\n      <Checkbox\n        checked={table.getIsAllPageRowsSelected()}\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: 'code',\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n        >\n          Code\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => {\n        const vendor = row.original;\n        return (\n            <Button asChild variant=\"link\" className=\"p-0 h-auto font-normal\">\n                <Link href={`/vendors/add?code=${vendor.code}`}>{vendor.code}</Link>\n            </Button>\n        )\n    }\n  },\n  {\n    accessorKey: 'name',\n    header: 'Name',\n  },\n  {\n    accessorKey: 'mobile',\n    header: 'Mobile',\n  },\n  {\n    accessorKey: 'email',\n    header: 'Email',\n  },\n  {\n    accessorKey: 'bankName',\n    header: 'Bank',\n  },\n   {\n    id: 'attachments',\n    header: 'Attachments',\n    cell: ({ row }) => <AttachmentsCell row={row} />,\n  },\n  {\n    id: 'actions',\n    cell: ({ row }) => <ActionsCell row={row} />,\n  },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1775, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vendors/vendor-content.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { LayoutGrid, List } from 'lucide-react';\nimport { VendorGrid } from './vendor-grid';\nimport { DataTable } from './data-table';\nimport { columns } from './columns';\nimport { Vendor } from './schema';\n\nexport function VendorContent({ vendors }: { vendors: Vendor[] }) {\n  const [viewMode, setViewMode] = React.useState<'grid' | 'list'>('list');\n  const [filter, setFilter] = React.useState('');\n\n  const filteredVendors = React.useMemo(() => {\n    if (!filter) {\n      return vendors;\n    }\n    return vendors.filter(vendor =>\n      vendor.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }, [vendors, filter]);\n\n  return (\n    <>\n      <div className=\"flex justify-between items-center mb-4\">\n        <Input\n          placeholder=\"Filter by name...\"\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)}\n          className=\"max-w-sm\"\n        />\n        <div className=\"flex items-center rounded-md bg-muted p-1\">\n          <Button\n            variant={viewMode === 'list' ? 'secondary' : 'ghost'}\n            size=\"icon\"\n            onClick={() => setViewMode('list')}\n          >\n            <List className=\"h-5 w-5\" />\n          </Button>\n          <Button\n            variant={viewMode === 'grid' ? 'secondary' : 'ghost'}\n            size=\"icon\"\n            onClick={() => setViewMode('grid')}\n          >\n            <LayoutGrid className=\"h-5 w-5\" />\n          </Button>\n        </div>\n      </div>\n      {viewMode === 'list' ? (\n        <DataTable columns={columns} data={filteredVendors} />\n      ) : (\n        <VendorGrid vendors={filteredVendors} />\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AARA;;;;;;;;AAWO,SAAS,cAAc,KAAkC;QAAlC,EAAE,OAAO,EAAyB,GAAlC;;IAC5B,MAAM,CAAC,UAAU,YAAY,GAAG,yKAAc,CAAkB;IAChE,MAAM,CAAC,QAAQ,UAAU,GAAG,yKAAc,CAAC;IAE3C,MAAM,kBAAkB,wKAAa;kDAAC;YACpC,IAAI,CAAC,QAAQ;gBACX,OAAO;YACT;YACA,OAAO,QAAQ,MAAM;0DAAC,CAAA,SACpB,OAAO,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,WAAW;;QAEzD;iDAAG;QAAC;QAAS;KAAO;IAEpB,qBACE;;0BACE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,6IAAK;wBACJ,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;wBACzC,WAAU;;;;;;kCAEZ,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,+IAAM;gCACL,SAAS,aAAa,SAAS,cAAc;gCAC7C,MAAK;gCACL,SAAS,IAAM,YAAY;0CAE3B,cAAA,6LAAC,6MAAI;oCAAC,WAAU;;;;;;;;;;;0CAElB,6LAAC,+IAAM;gCACL,SAAS,aAAa,SAAS,cAAc;gCAC7C,MAAK;gCACL,SAAS,IAAM,YAAY;0CAE3B,cAAA,6LAAC,mOAAU;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;YAI3B,aAAa,uBACZ,6LAAC,uJAAS;gBAAC,SAAS,+IAAO;gBAAE,MAAM;;;;;qCAEnC,6LAAC,yJAAU;gBAAC,SAAS;;;;;;;;AAI7B;GA9CgB;KAAA","debugId":null}},
    {"offset": {"line": 1906, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vendors/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport { type Payment } from '../finance/payment/schema';\nimport { z } from 'zod';\nimport { vendorSchema, type Vendor } from './schema';\n\nconst vendorsFilePath = path.join(process.cwd(), 'src/app/vendors/vendors-data.json');\nconst paymentsFilePath = path.join(process.cwd(), 'src/app/finance/payment/payments-data.json');\n\n\nasync function getVendors() {\n    try {\n        await fs.access(vendorsFilePath);\n        const data = await fs.readFile(vendorsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return []; // Return empty array if file doesn't exist\n        }\n        throw error;\n    }\n}\n\nasync function writeVendors(data: any) {\n    await fs.writeFile(vendorsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\n\nexport async function getAllVendors() {\n    const vendors = await getVendors();\n    // The list page expects a flat structure for each vendor, plus attachments.\n    return vendors.map((v: any) => ({\n        ...v.vendorData,\n        attachments: v.attachments || []\n    }));\n}\n\nasync function getNextVendorCode() {\n    const allVendors = await getVendors();\n    let maxNum = 0;\n    allVendors.forEach((v: any) => {\n        const code = v.vendorData.code || '';\n        const match = code.match(/^V(\\d+)$/);\n        if(match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `V${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\nexport async function saveVendorData(dataToSave: any, isNewRecord: boolean, isAutoCode: boolean) {\n  try {\n    const allVendors = await getVendors();\n    let vendorData = dataToSave.vendorData;\n    let savedVendor;\n    \n    if (isNewRecord) {\n        if (isAutoCode) {\n            vendorData.code = await getNextVendorCode();\n        }\n        const { code } = vendorData;\n        const vendorExists = allVendors.some((v: any) => v.vendorData.code === code);\n        if (vendorExists) {\n            return { success: false, error: `Vendor with code \"${code}\" already exists.` };\n        }\n        const newVendor = {\n            id: `V-${Date.now()}`,\n            ...dataToSave,\n            vendorData\n        };\n        allVendors.push(newVendor);\n        savedVendor = newVendor;\n    } else {\n        const { code } = vendorData;\n        const index = allVendors.findIndex((v: any) => v.vendorData.code === code);\n\n        if (index !== -1) {\n            allVendors[index] = {\n                ...allVendors[index],\n                ...dataToSave,\n                id: allVendors[index].id // Preserve original ID\n            };\n            savedVendor = allVendors[index];\n        } else {\n            return { success: false, error: `Vendor with code \"${code}\" not found.` };\n        }\n    }\n    \n    await writeVendors(allVendors);\n    revalidatePath('/vendors');\n\n    return { success: true, data: savedVendor.vendorData };\n  } catch (error) {\n    console.error('Failed to save vendor data:', error);\n    return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n  }\n}\n\nexport async function findVendorData(vendorCode: string) {\n  try {\n    const allVendors = await getVendors();\n    \n    if (vendorCode === 'new') {\n        const newVendorCode = await getNextVendorCode();\n        return { success: true, data: { vendorData: { code: newVendorCode } } };\n    }\n\n    const vendor = allVendors.find((v: any) => v.vendorData.code === vendorCode);\n\n    if (vendor) {\n       return { success: true, data: vendor };\n    } else {\n       return { success: false, error: \"Not Found\" };\n    }\n  } catch (error) {\n    console.error('Failed to find vendor data:', error);\n    return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n  }\n}\n\nexport async function deleteVendorData(vendorCode: string) {\n    try {\n        const allVendors = await getVendors();\n        const updatedVendors = allVendors.filter((v: any) => v.vendorData.code !== vendorCode);\n\n        if (allVendors.length === updatedVendors.length) {\n            return { success: false, error: 'Vendor not found.' };\n        }\n\n        await writeVendors(updatedVendors);\n        revalidatePath('/vendors');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to delete vendor data:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n\nasync function readPayments(): Promise<Payment[]> {\n    try {\n        const paymentsData = await fs.readFile(paymentsFilePath, 'utf-8');\n        return JSON.parse(paymentsData);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        console.error('Failed to read payments file:', error);\n        return [];\n    }\n}\n\nexport async function getPaymentsForVendor(vendorCode: string): Promise<Payment[]> {\n    try {\n        const allPayments = await readPayments();\n        // Vendors are identified by code. Fetch both Payments to and Receipts (refunds) from them.\n        const vendorPayments = allPayments.filter(p => p.partyName === vendorCode && p.partyType === 'Vendor');\n        return vendorPayments.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    } catch (error) {\n        console.error('Failed to get payments for vendor:', error);\n        return [];\n    }\n}\n\nconst importVendorSchema = vendorSchema.omit({ id: true, attachments: true });\n\nexport async function importVendors(data: unknown) {\n  const validation = z.array(importVendorSchema).safeParse(data);\n  if (!validation.success) {\n    return { success: false, error: \"Invalid data format.\" };\n  }\n\n  try {\n    const allVendors = await getVendors();\n    let updatedCount = 0;\n    let addedCount = 0;\n\n    validation.data.forEach(importedVendor => {\n      const existingVendorIndex = allVendors.findIndex(\n        (v: any) => v.vendorData.code === importedVendor.code\n      );\n\n      if (existingVendorIndex > -1) {\n        // Update existing vendor\n        allVendors[existingVendorIndex].vendorData = {\n          ...allVendors[existingVendorIndex].vendorData,\n          ...importedVendor,\n        };\n        updatedCount++;\n      } else {\n        // Add new vendor\n        allVendors.push({\n          id: `V-${Date.now()}-${Math.random()}`.replace('.', ''),\n          vendorData: importedVendor,\n          attachments: [],\n        });\n        addedCount++;\n      }\n    });\n\n    await writeVendors(allVendors);\n    revalidatePath('/vendors');\n    return { success: true, added: addedCount, updated: updatedCount };\n  } catch (error) {\n    return { success: false, error: \"Failed to import vendors.\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;;IA6KsB,gBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 1921, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollBar orientation=\"horizontal\" />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,2KAAgB,MAGjC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC,qLAAwB;QACvB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,yLAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC;gBAAU,aAAY;;;;;;0BACvB,6LAAC,uLAA0B;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,qLAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,2KAAgB,CAGhC,QAAoD;QAAnD,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO;yBAClD,6LAAC,oMAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,IAAA,4HAAE,EACX,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,gMAAmC;YAAC,WAAU;;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,oMAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2011, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vendors/import-vendors-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useRef } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useToast } from '@/hooks/use-toast';\nimport { FileUp, Loader2, TableIcon } from 'lucide-react';\nimport * as XLSX from 'xlsx';\nimport { type Vendor } from './schema';\nimport { importVendors } from './actions';\nimport { useRouter } from 'next/navigation';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { ScrollArea } from '@/components/ui/scroll-area';\n\ninterface ImportVendorsDialogProps {\n  onImportSuccess: () => void;\n}\n\nconst requiredHeaders = ['code', 'name'];\nconst displayHeaders = ['code', 'name', 'mobile', 'email', 'address', 'bankName', 'accountNumber', 'iban'];\n\nexport function ImportVendorsDialog({ onImportSuccess }: ImportVendorsDialogProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [parsedData, setParsedData] = useState<Omit<Vendor, 'id' | 'attachments'>[]>([]);\n  const [fileName, setFileName] = useState('');\n  const { toast } = useToast();\n  const router = useRouter();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setFileName(file.name);\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const data = new Uint8Array(e.target?.result as ArrayBuffer);\n        const workbook = XLSX.read(data, { type: 'array' });\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[sheetName];\n        const json = XLSX.utils.sheet_to_json(worksheet) as any[];\n        \n        if (json.length > 0) {\n            const headers = Object.keys(json[0]);\n            const missingHeaders = requiredHeaders.filter(h => !headers.includes(h));\n            if (missingHeaders.length > 0) {\n                toast({ variant: 'destructive', title: 'Invalid File Format', description: `Missing required columns: ${missingHeaders.join(', ')}`});\n                return;\n            }\n        }\n\n        setParsedData(json);\n      } catch (error) {\n        toast({ variant: 'destructive', title: 'Error Parsing File', description: 'Please ensure the file is a valid Excel spreadsheet.'});\n      }\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  const handleImport = async () => {\n    if (parsedData.length === 0) {\n        toast({ variant: 'destructive', title: 'No Data', description: 'No data to import.'});\n        return;\n    }\n    \n    setIsSaving(true);\n    const result = await importVendors(parsedData);\n\n    if (result.success) {\n      toast({\n        title: 'Import Successful',\n        description: `${result.added} vendors added, ${result.updated} vendors updated.`,\n      });\n      onImportSuccess();\n      setIsOpen(false);\n      setParsedData([]);\n      setFileName('');\n      router.refresh();\n    } else {\n      toast({\n        variant: 'destructive',\n        title: 'Error During Import',\n        description: result.error,\n      });\n    }\n    setIsSaving(false);\n  };\n  \n  const handleOpenChange = (open: boolean) => {\n    if(!open) {\n        setParsedData([]);\n        setFileName('');\n    }\n    setIsOpen(open);\n  }\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleOpenChange}>\n      <DialogTrigger asChild>\n        <Button variant=\"outline\">\n          <FileUp className=\"mr-2 h-4 w-4\" /> Import Vendors\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-4xl\">\n          <DialogHeader>\n            <DialogTitle>Import Vendors from Excel</DialogTitle>\n            <DialogDescription>\n              Select an Excel file to bulk-add or update vendors.\n              Required columns: {requiredHeaders.join(', ')}.\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"grid gap-4 py-4\">\n              <div className=\"flex items-center gap-4\">\n                <Button onClick={() => fileInputRef.current?.click()}>Select File</Button>\n                <Input ref={fileInputRef} type=\"file\" onChange={handleFileChange} className=\"hidden\" accept=\".xlsx, .xls, .csv\" />\n                {fileName && <span className=\"text-sm text-muted-foreground\">{fileName}</span>}\n              </div>\n\n              <p className=\"text-sm text-muted-foreground\">\n                Preview of data to be imported ({parsedData.length} rows):\n              </p>\n              \n              <ScrollArea className=\"h-72 rounded-md border\">\n                 <Table>\n                    <TableHeader>\n                        <TableRow>\n                            {displayHeaders.map(h => <TableHead key={h}>{h}</TableHead>)}\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                        {parsedData.slice(0, 20).map((row: any, index) => (\n                            <TableRow key={index}>\n                                {displayHeaders.map(h => <TableCell key={h}>{String(row[h] ?? '')}</TableCell>)}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                {parsedData.length === 0 && (\n                    <div className=\"flex flex-col items-center justify-center h-full text-muted-foreground p-10\">\n                        <TableIcon className=\"h-10 w-10 mb-4\" />\n                        <p>No data to preview.</p>\n                        <p className=\"text-xs\">Select a file to see a preview of the data.</p>\n                    </div>\n                )}\n              </ScrollArea>\n          </div>\n          <DialogFooter>\n            <DialogClose asChild>\n              <Button type=\"button\" variant=\"outline\">\n                Cancel\n              </Button>\n            </DialogClose>\n            <Button onClick={handleImport} disabled={isSaving || parsedData.length === 0}>\n              {isSaving && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n              Import Data\n            </Button>\n          </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2420, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vendors/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport { type Payment } from '../finance/payment/schema';\nimport { z } from 'zod';\nimport { vendorSchema, type Vendor } from './schema';\n\nconst vendorsFilePath = path.join(process.cwd(), 'src/app/vendors/vendors-data.json');\nconst paymentsFilePath = path.join(process.cwd(), 'src/app/finance/payment/payments-data.json');\n\n\nasync function getVendors() {\n    try {\n        await fs.access(vendorsFilePath);\n        const data = await fs.readFile(vendorsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return []; // Return empty array if file doesn't exist\n        }\n        throw error;\n    }\n}\n\nasync function writeVendors(data: any) {\n    await fs.writeFile(vendorsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\n\nexport async function getAllVendors() {\n    const vendors = await getVendors();\n    // The list page expects a flat structure for each vendor, plus attachments.\n    return vendors.map((v: any) => ({\n        ...v.vendorData,\n        attachments: v.attachments || []\n    }));\n}\n\nasync function getNextVendorCode() {\n    const allVendors = await getVendors();\n    let maxNum = 0;\n    allVendors.forEach((v: any) => {\n        const code = v.vendorData.code || '';\n        const match = code.match(/^V(\\d+)$/);\n        if(match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `V${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\nexport async function saveVendorData(dataToSave: any, isNewRecord: boolean, isAutoCode: boolean) {\n  try {\n    const allVendors = await getVendors();\n    let vendorData = dataToSave.vendorData;\n    let savedVendor;\n    \n    if (isNewRecord) {\n        if (isAutoCode) {\n            vendorData.code = await getNextVendorCode();\n        }\n        const { code } = vendorData;\n        const vendorExists = allVendors.some((v: any) => v.vendorData.code === code);\n        if (vendorExists) {\n            return { success: false, error: `Vendor with code \"${code}\" already exists.` };\n        }\n        const newVendor = {\n            id: `V-${Date.now()}`,\n            ...dataToSave,\n            vendorData\n        };\n        allVendors.push(newVendor);\n        savedVendor = newVendor;\n    } else {\n        const { code } = vendorData;\n        const index = allVendors.findIndex((v: any) => v.vendorData.code === code);\n\n        if (index !== -1) {\n            allVendors[index] = {\n                ...allVendors[index],\n                ...dataToSave,\n                id: allVendors[index].id // Preserve original ID\n            };\n            savedVendor = allVendors[index];\n        } else {\n            return { success: false, error: `Vendor with code \"${code}\" not found.` };\n        }\n    }\n    \n    await writeVendors(allVendors);\n    revalidatePath('/vendors');\n\n    return { success: true, data: savedVendor.vendorData };\n  } catch (error) {\n    console.error('Failed to save vendor data:', error);\n    return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n  }\n}\n\nexport async function findVendorData(vendorCode: string) {\n  try {\n    const allVendors = await getVendors();\n    \n    if (vendorCode === 'new') {\n        const newVendorCode = await getNextVendorCode();\n        return { success: true, data: { vendorData: { code: newVendorCode } } };\n    }\n\n    const vendor = allVendors.find((v: any) => v.vendorData.code === vendorCode);\n\n    if (vendor) {\n       return { success: true, data: vendor };\n    } else {\n       return { success: false, error: \"Not Found\" };\n    }\n  } catch (error) {\n    console.error('Failed to find vendor data:', error);\n    return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n  }\n}\n\nexport async function deleteVendorData(vendorCode: string) {\n    try {\n        const allVendors = await getVendors();\n        const updatedVendors = allVendors.filter((v: any) => v.vendorData.code !== vendorCode);\n\n        if (allVendors.length === updatedVendors.length) {\n            return { success: false, error: 'Vendor not found.' };\n        }\n\n        await writeVendors(updatedVendors);\n        revalidatePath('/vendors');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to delete vendor data:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n\nasync function readPayments(): Promise<Payment[]> {\n    try {\n        const paymentsData = await fs.readFile(paymentsFilePath, 'utf-8');\n        return JSON.parse(paymentsData);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        console.error('Failed to read payments file:', error);\n        return [];\n    }\n}\n\nexport async function getPaymentsForVendor(vendorCode: string): Promise<Payment[]> {\n    try {\n        const allPayments = await readPayments();\n        // Vendors are identified by code. Fetch both Payments to and Receipts (refunds) from them.\n        const vendorPayments = allPayments.filter(p => p.partyName === vendorCode && p.partyType === 'Vendor');\n        return vendorPayments.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    } catch (error) {\n        console.error('Failed to get payments for vendor:', error);\n        return [];\n    }\n}\n\nconst importVendorSchema = vendorSchema.omit({ id: true, attachments: true });\n\nexport async function importVendors(data: unknown) {\n  const validation = z.array(importVendorSchema).safeParse(data);\n  if (!validation.success) {\n    return { success: false, error: \"Invalid data format.\" };\n  }\n\n  try {\n    const allVendors = await getVendors();\n    let updatedCount = 0;\n    let addedCount = 0;\n\n    validation.data.forEach(importedVendor => {\n      const existingVendorIndex = allVendors.findIndex(\n        (v: any) => v.vendorData.code === importedVendor.code\n      );\n\n      if (existingVendorIndex > -1) {\n        // Update existing vendor\n        allVendors[existingVendorIndex].vendorData = {\n          ...allVendors[existingVendorIndex].vendorData,\n          ...importedVendor,\n        };\n        updatedCount++;\n      } else {\n        // Add new vendor\n        allVendors.push({\n          id: `V-${Date.now()}-${Math.random()}`.replace('.', ''),\n          vendorData: importedVendor,\n          attachments: [],\n        });\n        addedCount++;\n      }\n    });\n\n    await writeVendors(allVendors);\n    revalidatePath('/vendors');\n    return { success: true, added: addedCount, updated: updatedCount };\n  } catch (error) {\n    return { success: false, error: \"Failed to import vendors.\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;;IAiCsB,gBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 2435, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vendors/vendors-client.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Plus } from 'lucide-react';\nimport { VendorContent } from './vendor-content';\nimport { ImportVendorsDialog } from './import-vendors-dialog';\nimport { getAllVendors } from './actions';\nimport { type Vendor } from './schema';\n\nexport function VendorsClient({ initialVendors }: { initialVendors: Vendor[] }) {\n  const [vendors, setVendors] = useState(initialVendors);\n\n  const handleImportSuccess = async () => {\n    const updatedVendors = await getAllVendors();\n    setVendors(updatedVendors);\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <div>\n            <h1 className=\"text-3xl font-bold font-headline\">Vendors</h1>\n            <p className=\"text-muted-foreground\">Manage your list of suppliers and service providers.</p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n            <ImportVendorsDialog onImportSuccess={handleImportSuccess} />\n            <Button asChild>\n            <Link href=\"/vendors/add\">\n                <Plus className=\"mr-2 h-4 w-4\" /> Add New Vendor\n            </Link>\n            </Button>\n        </div>\n      </div>\n      <VendorContent vendors={vendors} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;AAWO,SAAS,cAAc,KAAgD;QAAhD,EAAE,cAAc,EAAgC,GAAhD;;IAC5B,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IAEvC,MAAM,sBAAsB;QAC1B,MAAM,iBAAiB,MAAM,IAAA,iLAAa;QAC1C,WAAW;IACb;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACG,6LAAC;gCAAG,WAAU;0CAAmC;;;;;;0CACjD,6LAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;kCAEzC,6LAAC;wBAAI,WAAU;;0CACX,6LAAC,+KAAmB;gCAAC,iBAAiB;;;;;;0CACtC,6LAAC,+IAAM;gCAAC,OAAO;0CACf,cAAA,6LAAC,0KAAI;oCAAC,MAAK;;sDACP,6LAAC,6MAAI;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;;;;;;;;;;;;;0BAK3C,6LAAC,+JAAa;gBAAC,SAAS;;;;;;;;;;;;AAG9B;GA3BgB;KAAA","debugId":null}}]
}