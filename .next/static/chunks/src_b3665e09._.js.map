{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,2KAAgB,MAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,+KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,oLAA2B;YAC1B,WAAW,IAAA,4HAAE,EAAC;sBAEd,cAAA,6LAAC,gNAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,+KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,sLAAyB;AAE7C,MAAM,qBAAqB,yLAA4B;AAEvD,MAAM,oBAAoB,wLAA2B;AAErD,MAAM,mCAAqB,2KAAgB,CAGzC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,yLAA4B;QAC3B,WAAW,IAAA,4HAAE,EACX,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;;KAVH;AAaN,mBAAmB,WAAW,GAAG,yLAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,2KAAgB,OAGzC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,yLAA4B;gBAC3B,KAAK;gBACL,WAAW,IAAA,4HAAE,EACX,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,yLAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB;QAAC,EACzB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,oDACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB;QAAC,EACzB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,2KAAgB,OAGvC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,uLAA0B;QACzB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;;;AAGb,iBAAiB,WAAW,GAAG,uLAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,2KAAgB,OAG7C,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,6LAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,uBAAuB,WAAW,GAChC,6LAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,2KAAgB,OAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,wLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,IAAA,uJAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,wLAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,2KAAgB,QAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,wLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,IAAA,uJAAc,EAAC;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,wLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/property/rooms/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { roomSchema, type Room } from './schema';\nimport { type Unit } from '@/app/property/units/schema';\nimport { type Contract } from '@/app/tenancy/contract/schema';\nimport { type Tenant } from '@/app/tenancy/tenants/schema';\n\nconst roomsFilePath = path.join(process.cwd(), 'src/app/property/rooms/rooms-data.json');\nconst contractsFilePath = path.join(process.cwd(), 'src/app/tenancy/contract/contracts-data.json');\nconst tenantsFilePath = path.join(process.cwd(), 'src/app/tenancy/tenants/tenants-data.json');\n\n\nasync function readData<T>(filePath: string): Promise<any[]> {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function readRooms(): Promise<Room[]> {\n    return await readData(roomsFilePath);\n}\n\nasync function writeRooms(data: Room[]) {\n    await fs.writeFile(roomsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getRooms() {\n    const allRooms = await readRooms();\n    const contractsData = await fs.readFile(contractsFilePath, 'utf-8').catch(() => '[]');\n    const allContracts: Contract[] = JSON.parse(contractsData);\n    const allTenants: {tenantData: Tenant}[] = await readData(tenantsFilePath);\n\n    const activeContracts = allContracts.filter(c => c.status === 'New' || c.status === 'Renew');\n    const occupiedRoomCodesFromContracts = new Set(activeContracts.filter(c => c.roomCode).map(c => c.roomCode!));\n    \n    const subscribedRoomCodes = new Set(\n      allTenants\n        .filter(t => t.tenantData.isSubscriptionActive && t.tenantData.roomCode)\n        .map(t => t.tenantData.roomCode!)\n    );\n    \n    const allOccupiedRoomCodes = new Set([...occupiedRoomCodesFromContracts, ...subscribedRoomCodes]);\n\n    return allRooms.map(room => ({\n        ...room,\n        occupancyStatus: allOccupiedRoomCodes.has(room.roomCode) ? 'Occupied' : 'Vacant',\n    }));\n}\n\nexport async function getRoomsForProperty(propertyCode: string) {\n    try {\n        const allRooms = await getRooms();\n        const propertyRooms = allRooms.filter(r => r.propertyCode === propertyCode);\n        return { success: true, data: propertyRooms };\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n\nconst addRoomFormSchema = roomSchema.omit({ id: true, occupancyStatus: true });\n\nexport async function addRoom(data: z.infer<typeof addRoomFormSchema>) {\n    const validation = addRoomFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allRooms = await readRooms();\n        const roomExists = allRooms.some(r => r.roomCode === data.roomCode && r.propertyCode === data.propertyCode);\n        if (roomExists) {\n            return { success: false, error: `Room with code \"${data.roomCode}\" already exists in this property.` };\n        }\n\n        const newRoom: Room = {\n            ...validation.data,\n            id: `ROOM-${Date.now()}`,\n        };\n\n        allRooms.push(newRoom);\n        await writeRooms(allRooms);\n        \n        revalidatePath(`/property/properties`);\n        revalidatePath(`/property/properties/add`);\n        revalidatePath(`/property/properties/list`);\n        revalidatePath(`/property/rooms/list`);\n        if (data.propertyCode) {\n            revalidatePath(`/property/properties?code=${data.propertyCode}`);\n        }\n        return { success: true, data: newRoom };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nconst updateRoomFormSchema = roomSchema.partial();\n\nexport async function updateRoom(data: z.infer<typeof updateRoomFormSchema>) {\n     const validation = updateRoomFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n    \n    const { id, ...dataToUpdate } = validation.data;\n\n    try {\n        const allRooms = await readRooms();\n        const roomIndex = allRooms.findIndex(r => r.id === id);\n        if (roomIndex === -1) {\n            return { success: false, error: 'Room not found.' };\n        }\n        \n        allRooms[roomIndex] = { ...allRooms[roomIndex], ...dataToUpdate };\n        \n        await writeRooms(allRooms);\n        \n        revalidatePath(`/property/properties`);\n        revalidatePath(`/property/properties/add`);\n        revalidatePath(`/property/properties/list`);\n        revalidatePath(`/property/rooms/list`);\n        if (allRooms[roomIndex].propertyCode) {\n            revalidatePath(`/property/properties?code=${allRooms[roomIndex].propertyCode}`);\n        }\n        return { success: true, data: allRooms[roomIndex] };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteRoom(roomId: string) {\n    if (!roomId) {\n        return { success: false, error: \"Room ID is required.\" };\n    }\n\n    try {\n        const allRooms = await readRooms();\n        const roomToDelete = allRooms.find(r => r.id === roomId);\n        \n        if (!roomToDelete) {\n             return { success: false, error: 'Room not found.' };\n        }\n\n        const updatedRooms = allRooms.filter(r => r.id !== roomId);\n        \n        await writeRooms(updatedRooms);\n        revalidatePath(`/property/properties`);\n        revalidatePath(`/property/properties/add`);\n        revalidatePath(`/property/properties/list`);\n        revalidatePath(`/property/rooms/list`);\n        if (roomToDelete.propertyCode) {\n           revalidatePath(`/property/properties?code=${roomToDelete.propertyCode}`);\n        }\n        return { success: true };\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nasync function readUnits(): Promise<Unit[]> {\n    try {\n        const data = await fs.readFile(path.join(process.cwd(), 'src/app/property/units/units-data.json'), 'utf-8');\n        return JSON.parse(data);\n    } catch (e) {\n        return [];\n    }\n}\n\n\nexport async function getRoomLookups(propertyCode: string) {\n    const units = await readUnits();\n    return {\n        units: units.filter((u: any) => u.propertyCode === propertyCode).map((u:any) => ({ value: u.unitCode, label: u.unitCode })),\n    }\n}\n\nconst importRoomSchema = roomSchema.omit({ id: true, occupancyStatus: true });\nconst importRoomsSchema = z.array(importRoomSchema);\n\nexport async function importRooms(roomsData: unknown) {\n    const validation = importRoomsSchema.safeParse(roomsData);\n    if (!validation.success) {\n        console.error(\"Import validation error:\", validation.error.format());\n        return { success: false, error: 'Invalid data format for one or more rows.' };\n    }\n    \n    try {\n        const allRooms = await readRooms();\n        let updatedCount = 0;\n        let addedCount = 0;\n        let propertyCodeForRevalidation = '';\n\n        validation.data.forEach(importedRoom => {\n            if (importedRoom.propertyCode) {\n                 propertyCodeForRevalidation = importedRoom.propertyCode;\n            }\n\n            const existingRoomIndex = allRooms.findIndex(r => r.roomCode === importedRoom.roomCode && r.propertyCode === importedRoom.propertyCode);\n            \n            if (existingRoomIndex > -1) {\n                // Update existing room\n                allRooms[existingRoomIndex] = { ...allRooms[existingRoomIndex], ...importedRoom };\n                updatedCount++;\n            } else {\n                // Add new room\n                const newRoom: Room = {\n                    ...importedRoom,\n                    id: `ROOM-${Date.now()}-${Math.random()}`.replace('.', ''),\n                };\n                allRooms.push(newRoom);\n                addedCount++;\n            }\n        });\n\n        await writeRooms(allRooms);\n        \n        if (propertyCodeForRevalidation) {\n            revalidatePath(`/property/properties?code=${propertyCodeForRevalidation}`);\n        }\n        \n        return { success: true, added: addedCount, updated: updatedCount };\n\n    } catch (error) {\n        console.error(\"Error importing rooms:\", error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred during import.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAiJsB,aAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,6KAAoB;AAEnC,MAAM,gBAAgB,gLAAuB;AAE7C,MAAM,eAAe,+KAAsB;AAE3C,MAAM,cAAc,8KAAqB;AAEzC,MAAM,8BAAgB,2KAAgB,CAGpC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,gLAAuB;QACtB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,2KAAgB,OAGpC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,gLAAuB;gBACtB,KAAK;gBACL,WAAW,IAAA,4HAAE,EACX,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,8KAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,oMAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,8KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,qDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,8KAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,2KAAgB,OAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,oLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,oLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,IAAA,4HAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,IAAA,0KAAG,EACvB;AAGF,MAAM,sBAAQ,2KAAgB,MAI5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,4KAAmB;QAClB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;;AAGb,MAAM,WAAW,GAAG,4KAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/property/rooms/schema.ts"],"sourcesContent":["\n\nimport { z } from 'zod';\n\nexport const roomSchema = z.object({\n  id: z.string(),\n  roomCode: z.string().min(1, \"Room code is required.\"),\n  propertyCode: z.string().min(1, \"Property code is required.\"),\n  unitCode: z.string().optional(),\n  roomName: z.string().optional(),\n  roomType: z.string().optional(),\n  rentAmount: z.number().optional(),\n  rentFrequency: z.enum(['Monthly', 'Yearly']).optional(),\n  occupancyStatus: z.enum(['Vacant', 'Occupied']).optional(),\n});\n\nexport type Room = z.infer<typeof roomSchema>;\n"],"names":[],"mappings":";;;;AAEA;;AAEO,MAAM,aAAa,0KAAC,CAAC,MAAM,CAAC;IACjC,IAAI,0KAAC,CAAC,MAAM;IACZ,UAAU,0KAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,cAAc,0KAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,UAAU,0KAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,UAAU,0KAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,UAAU,0KAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,YAAY,0KAAC,CAAC,MAAM,GAAG,QAAQ;IAC/B,eAAe,0KAAC,CAAC,IAAI,CAAC;QAAC;QAAW;KAAS,EAAE,QAAQ;IACrD,iBAAiB,0KAAC,CAAC,IAAI,CAAC;QAAC;QAAU;KAAW,EAAE,QAAQ;AAC1D","debugId":null}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/property/rooms/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { roomSchema, type Room } from './schema';\nimport { type Unit } from '@/app/property/units/schema';\nimport { type Contract } from '@/app/tenancy/contract/schema';\nimport { type Tenant } from '@/app/tenancy/tenants/schema';\n\nconst roomsFilePath = path.join(process.cwd(), 'src/app/property/rooms/rooms-data.json');\nconst contractsFilePath = path.join(process.cwd(), 'src/app/tenancy/contract/contracts-data.json');\nconst tenantsFilePath = path.join(process.cwd(), 'src/app/tenancy/tenants/tenants-data.json');\n\n\nasync function readData<T>(filePath: string): Promise<any[]> {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function readRooms(): Promise<Room[]> {\n    return await readData(roomsFilePath);\n}\n\nasync function writeRooms(data: Room[]) {\n    await fs.writeFile(roomsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getRooms() {\n    const allRooms = await readRooms();\n    const contractsData = await fs.readFile(contractsFilePath, 'utf-8').catch(() => '[]');\n    const allContracts: Contract[] = JSON.parse(contractsData);\n    const allTenants: {tenantData: Tenant}[] = await readData(tenantsFilePath);\n\n    const activeContracts = allContracts.filter(c => c.status === 'New' || c.status === 'Renew');\n    const occupiedRoomCodesFromContracts = new Set(activeContracts.filter(c => c.roomCode).map(c => c.roomCode!));\n    \n    const subscribedRoomCodes = new Set(\n      allTenants\n        .filter(t => t.tenantData.isSubscriptionActive && t.tenantData.roomCode)\n        .map(t => t.tenantData.roomCode!)\n    );\n    \n    const allOccupiedRoomCodes = new Set([...occupiedRoomCodesFromContracts, ...subscribedRoomCodes]);\n\n    return allRooms.map(room => ({\n        ...room,\n        occupancyStatus: allOccupiedRoomCodes.has(room.roomCode) ? 'Occupied' : 'Vacant',\n    }));\n}\n\nexport async function getRoomsForProperty(propertyCode: string) {\n    try {\n        const allRooms = await getRooms();\n        const propertyRooms = allRooms.filter(r => r.propertyCode === propertyCode);\n        return { success: true, data: propertyRooms };\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n\nconst addRoomFormSchema = roomSchema.omit({ id: true, occupancyStatus: true });\n\nexport async function addRoom(data: z.infer<typeof addRoomFormSchema>) {\n    const validation = addRoomFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allRooms = await readRooms();\n        const roomExists = allRooms.some(r => r.roomCode === data.roomCode && r.propertyCode === data.propertyCode);\n        if (roomExists) {\n            return { success: false, error: `Room with code \"${data.roomCode}\" already exists in this property.` };\n        }\n\n        const newRoom: Room = {\n            ...validation.data,\n            id: `ROOM-${Date.now()}`,\n        };\n\n        allRooms.push(newRoom);\n        await writeRooms(allRooms);\n        \n        revalidatePath(`/property/properties`);\n        revalidatePath(`/property/properties/add`);\n        revalidatePath(`/property/properties/list`);\n        revalidatePath(`/property/rooms/list`);\n        if (data.propertyCode) {\n            revalidatePath(`/property/properties?code=${data.propertyCode}`);\n        }\n        return { success: true, data: newRoom };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nconst updateRoomFormSchema = roomSchema.partial();\n\nexport async function updateRoom(data: z.infer<typeof updateRoomFormSchema>) {\n     const validation = updateRoomFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n    \n    const { id, ...dataToUpdate } = validation.data;\n\n    try {\n        const allRooms = await readRooms();\n        const roomIndex = allRooms.findIndex(r => r.id === id);\n        if (roomIndex === -1) {\n            return { success: false, error: 'Room not found.' };\n        }\n        \n        allRooms[roomIndex] = { ...allRooms[roomIndex], ...dataToUpdate };\n        \n        await writeRooms(allRooms);\n        \n        revalidatePath(`/property/properties`);\n        revalidatePath(`/property/properties/add`);\n        revalidatePath(`/property/properties/list`);\n        revalidatePath(`/property/rooms/list`);\n        if (allRooms[roomIndex].propertyCode) {\n            revalidatePath(`/property/properties?code=${allRooms[roomIndex].propertyCode}`);\n        }\n        return { success: true, data: allRooms[roomIndex] };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteRoom(roomId: string) {\n    if (!roomId) {\n        return { success: false, error: \"Room ID is required.\" };\n    }\n\n    try {\n        const allRooms = await readRooms();\n        const roomToDelete = allRooms.find(r => r.id === roomId);\n        \n        if (!roomToDelete) {\n             return { success: false, error: 'Room not found.' };\n        }\n\n        const updatedRooms = allRooms.filter(r => r.id !== roomId);\n        \n        await writeRooms(updatedRooms);\n        revalidatePath(`/property/properties`);\n        revalidatePath(`/property/properties/add`);\n        revalidatePath(`/property/properties/list`);\n        revalidatePath(`/property/rooms/list`);\n        if (roomToDelete.propertyCode) {\n           revalidatePath(`/property/properties?code=${roomToDelete.propertyCode}`);\n        }\n        return { success: true };\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nasync function readUnits(): Promise<Unit[]> {\n    try {\n        const data = await fs.readFile(path.join(process.cwd(), 'src/app/property/units/units-data.json'), 'utf-8');\n        return JSON.parse(data);\n    } catch (e) {\n        return [];\n    }\n}\n\n\nexport async function getRoomLookups(propertyCode: string) {\n    const units = await readUnits();\n    return {\n        units: units.filter((u: any) => u.propertyCode === propertyCode).map((u:any) => ({ value: u.unitCode, label: u.unitCode })),\n    }\n}\n\nconst importRoomSchema = roomSchema.omit({ id: true, occupancyStatus: true });\nconst importRoomsSchema = z.array(importRoomSchema);\n\nexport async function importRooms(roomsData: unknown) {\n    const validation = importRoomsSchema.safeParse(roomsData);\n    if (!validation.success) {\n        console.error(\"Import validation error:\", validation.error.format());\n        return { success: false, error: 'Invalid data format for one or more rows.' };\n    }\n    \n    try {\n        const allRooms = await readRooms();\n        let updatedCount = 0;\n        let addedCount = 0;\n        let propertyCodeForRevalidation = '';\n\n        validation.data.forEach(importedRoom => {\n            if (importedRoom.propertyCode) {\n                 propertyCodeForRevalidation = importedRoom.propertyCode;\n            }\n\n            const existingRoomIndex = allRooms.findIndex(r => r.roomCode === importedRoom.roomCode && r.propertyCode === importedRoom.propertyCode);\n            \n            if (existingRoomIndex > -1) {\n                // Update existing room\n                allRooms[existingRoomIndex] = { ...allRooms[existingRoomIndex], ...importedRoom };\n                updatedCount++;\n            } else {\n                // Add new room\n                const newRoom: Room = {\n                    ...importedRoom,\n                    id: `ROOM-${Date.now()}-${Math.random()}`.replace('.', ''),\n                };\n                allRooms.push(newRoom);\n                addedCount++;\n            }\n        });\n\n        await writeRooms(allRooms);\n        \n        if (propertyCodeForRevalidation) {\n            revalidatePath(`/property/properties?code=${propertyCodeForRevalidation}`);\n        }\n        \n        return { success: true, added: addedCount, updated: updatedCount };\n\n    } catch (error) {\n        console.error(\"Error importing rooms:\", error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred during import.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IA+GsB,aAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/property/rooms/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { roomSchema, type Room } from './schema';\nimport { type Unit } from '@/app/property/units/schema';\nimport { type Contract } from '@/app/tenancy/contract/schema';\nimport { type Tenant } from '@/app/tenancy/tenants/schema';\n\nconst roomsFilePath = path.join(process.cwd(), 'src/app/property/rooms/rooms-data.json');\nconst contractsFilePath = path.join(process.cwd(), 'src/app/tenancy/contract/contracts-data.json');\nconst tenantsFilePath = path.join(process.cwd(), 'src/app/tenancy/tenants/tenants-data.json');\n\n\nasync function readData<T>(filePath: string): Promise<any[]> {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function readRooms(): Promise<Room[]> {\n    return await readData(roomsFilePath);\n}\n\nasync function writeRooms(data: Room[]) {\n    await fs.writeFile(roomsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getRooms() {\n    const allRooms = await readRooms();\n    const contractsData = await fs.readFile(contractsFilePath, 'utf-8').catch(() => '[]');\n    const allContracts: Contract[] = JSON.parse(contractsData);\n    const allTenants: {tenantData: Tenant}[] = await readData(tenantsFilePath);\n\n    const activeContracts = allContracts.filter(c => c.status === 'New' || c.status === 'Renew');\n    const occupiedRoomCodesFromContracts = new Set(activeContracts.filter(c => c.roomCode).map(c => c.roomCode!));\n    \n    const subscribedRoomCodes = new Set(\n      allTenants\n        .filter(t => t.tenantData.isSubscriptionActive && t.tenantData.roomCode)\n        .map(t => t.tenantData.roomCode!)\n    );\n    \n    const allOccupiedRoomCodes = new Set([...occupiedRoomCodesFromContracts, ...subscribedRoomCodes]);\n\n    return allRooms.map(room => ({\n        ...room,\n        occupancyStatus: allOccupiedRoomCodes.has(room.roomCode) ? 'Occupied' : 'Vacant',\n    }));\n}\n\nexport async function getRoomsForProperty(propertyCode: string) {\n    try {\n        const allRooms = await getRooms();\n        const propertyRooms = allRooms.filter(r => r.propertyCode === propertyCode);\n        return { success: true, data: propertyRooms };\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n\nconst addRoomFormSchema = roomSchema.omit({ id: true, occupancyStatus: true });\n\nexport async function addRoom(data: z.infer<typeof addRoomFormSchema>) {\n    const validation = addRoomFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allRooms = await readRooms();\n        const roomExists = allRooms.some(r => r.roomCode === data.roomCode && r.propertyCode === data.propertyCode);\n        if (roomExists) {\n            return { success: false, error: `Room with code \"${data.roomCode}\" already exists in this property.` };\n        }\n\n        const newRoom: Room = {\n            ...validation.data,\n            id: `ROOM-${Date.now()}`,\n        };\n\n        allRooms.push(newRoom);\n        await writeRooms(allRooms);\n        \n        revalidatePath(`/property/properties`);\n        revalidatePath(`/property/properties/add`);\n        revalidatePath(`/property/properties/list`);\n        revalidatePath(`/property/rooms/list`);\n        if (data.propertyCode) {\n            revalidatePath(`/property/properties?code=${data.propertyCode}`);\n        }\n        return { success: true, data: newRoom };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nconst updateRoomFormSchema = roomSchema.partial();\n\nexport async function updateRoom(data: z.infer<typeof updateRoomFormSchema>) {\n     const validation = updateRoomFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n    \n    const { id, ...dataToUpdate } = validation.data;\n\n    try {\n        const allRooms = await readRooms();\n        const roomIndex = allRooms.findIndex(r => r.id === id);\n        if (roomIndex === -1) {\n            return { success: false, error: 'Room not found.' };\n        }\n        \n        allRooms[roomIndex] = { ...allRooms[roomIndex], ...dataToUpdate };\n        \n        await writeRooms(allRooms);\n        \n        revalidatePath(`/property/properties`);\n        revalidatePath(`/property/properties/add`);\n        revalidatePath(`/property/properties/list`);\n        revalidatePath(`/property/rooms/list`);\n        if (allRooms[roomIndex].propertyCode) {\n            revalidatePath(`/property/properties?code=${allRooms[roomIndex].propertyCode}`);\n        }\n        return { success: true, data: allRooms[roomIndex] };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteRoom(roomId: string) {\n    if (!roomId) {\n        return { success: false, error: \"Room ID is required.\" };\n    }\n\n    try {\n        const allRooms = await readRooms();\n        const roomToDelete = allRooms.find(r => r.id === roomId);\n        \n        if (!roomToDelete) {\n             return { success: false, error: 'Room not found.' };\n        }\n\n        const updatedRooms = allRooms.filter(r => r.id !== roomId);\n        \n        await writeRooms(updatedRooms);\n        revalidatePath(`/property/properties`);\n        revalidatePath(`/property/properties/add`);\n        revalidatePath(`/property/properties/list`);\n        revalidatePath(`/property/rooms/list`);\n        if (roomToDelete.propertyCode) {\n           revalidatePath(`/property/properties?code=${roomToDelete.propertyCode}`);\n        }\n        return { success: true };\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nasync function readUnits(): Promise<Unit[]> {\n    try {\n        const data = await fs.readFile(path.join(process.cwd(), 'src/app/property/units/units-data.json'), 'utf-8');\n        return JSON.parse(data);\n    } catch (e) {\n        return [];\n    }\n}\n\n\nexport async function getRoomLookups(propertyCode: string) {\n    const units = await readUnits();\n    return {\n        units: units.filter((u: any) => u.propertyCode === propertyCode).map((u:any) => ({ value: u.unitCode, label: u.unitCode })),\n    }\n}\n\nconst importRoomSchema = roomSchema.omit({ id: true, occupancyStatus: true });\nconst importRoomsSchema = z.array(importRoomSchema);\n\nexport async function importRooms(roomsData: unknown) {\n    const validation = importRoomsSchema.safeParse(roomsData);\n    if (!validation.success) {\n        console.error(\"Import validation error:\", validation.error.format());\n        return { success: false, error: 'Invalid data format for one or more rows.' };\n    }\n    \n    try {\n        const allRooms = await readRooms();\n        let updatedCount = 0;\n        let addedCount = 0;\n        let propertyCodeForRevalidation = '';\n\n        validation.data.forEach(importedRoom => {\n            if (importedRoom.propertyCode) {\n                 propertyCodeForRevalidation = importedRoom.propertyCode;\n            }\n\n            const existingRoomIndex = allRooms.findIndex(r => r.roomCode === importedRoom.roomCode && r.propertyCode === importedRoom.propertyCode);\n            \n            if (existingRoomIndex > -1) {\n                // Update existing room\n                allRooms[existingRoomIndex] = { ...allRooms[existingRoomIndex], ...importedRoom };\n                updatedCount++;\n            } else {\n                // Add new room\n                const newRoom: Room = {\n                    ...importedRoom,\n                    id: `ROOM-${Date.now()}-${Math.random()}`.replace('.', ''),\n                };\n                allRooms.push(newRoom);\n                addedCount++;\n            }\n        });\n\n        await writeRooms(allRooms);\n        \n        if (propertyCodeForRevalidation) {\n            revalidatePath(`/property/properties?code=${propertyCodeForRevalidation}`);\n        }\n        \n        return { success: true, added: addedCount, updated: updatedCount };\n\n    } catch (error) {\n        console.error(\"Error importing rooms:\", error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred during import.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAwLsB,iBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/command.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\ninterface CommandDialogProps extends DialogProps {}\n\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none aria-selected:bg-accent aria-selected:text-accent-foreground data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAEA;AAEA;AACA;AAEA;AACA;AARA;;;;;;;AAUA,MAAM,wBAAU,2KAAgB,CAG9B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,oJAAgB;QACf,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,6FACA;QAED,GAAG,KAAK;;;;;;;KAVP;AAaN,QAAQ,WAAW,GAAG,oJAAgB,CAAC,WAAW;AAIlD,MAAM,gBAAgB;QAAC,EAAE,QAAQ,EAAE,GAAG,OAA2B;IAC/D,qBACE,6LAAC,+IAAM;QAAE,GAAG,KAAK;kBACf,cAAA,6LAAC,sJAAa;YAAC,WAAU;sBACvB,cAAA,6LAAC;gBAAQ,WAAU;0BAChB;;;;;;;;;;;;;;;;AAKX;MAVM;AAYN,MAAM,6BAAe,2KAAgB,OAGnC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,WAAU;QAAkC,sBAAmB;;0BAClE,6LAAC,mNAAM;gBAAC,WAAU;;;;;;0BAClB,6LAAC,oJAAgB,CAAC,KAAK;gBACrB,KAAK;gBACL,WAAW,IAAA,4HAAE,EACX,0JACA;gBAED,GAAG,KAAK;;;;;;;;;;;;;;AAKf,aAAa,WAAW,GAAG,oJAAgB,CAAC,KAAK,CAAC,WAAW;AAE7D,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,oJAAgB,CAAC,IAAI;QACpB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,mDAAmD;QAChE,GAAG,KAAK;;;;;;;;AAIb,YAAY,WAAW,GAAG,oJAAgB,CAAC,IAAI,CAAC,WAAW;AAE3D,MAAM,6BAAe,2KAAgB,OAGnC,CAAC,OAAO,oBACR,6LAAC,oJAAgB,CAAC,KAAK;QACrB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;;;;;;;AAIb,aAAa,WAAW,GAAG,oJAAgB,CAAC,KAAK,CAAC,WAAW;AAE7D,MAAM,6BAAe,2KAAgB,OAGnC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,oJAAgB,CAAC,KAAK;QACrB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,0NACA;QAED,GAAG,KAAK;;;;;;;;AAIb,aAAa,WAAW,GAAG,oJAAgB,CAAC,KAAK,CAAC,WAAW;AAE7D,MAAM,iCAAmB,2KAAgB,QAGvC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,oJAAgB,CAAC,SAAS;QACzB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,wBAAwB;QACrC,GAAG,KAAK;;;;;;;;AAGb,iBAAiB,WAAW,GAAG,oJAAgB,CAAC,SAAS,CAAC,WAAW;AAErE,MAAM,4BAAc,2KAAgB,QAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,oJAAgB,CAAC,IAAI;QACpB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,2OACA;QAED,GAAG,KAAK;;;;;;;;AAIb,YAAY,WAAW,GAAG,oJAAgB,CAAC,IAAI,CAAC,WAAW;AAE3D,MAAM,kBAAkB;QAAC,EACvB,SAAS,EACT,GAAG,OACmC;IACtC,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,yDACA;QAED,GAAG,KAAK;;;;;;AAGf;OAbM;AAcN,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 780, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,8KAAqB;AAErC,MAAM,iBAAiB,iLAAwB;AAE/C,MAAM,+BAAiB,2KAAgB,MAGrC,QAA4D;QAA3D,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO;yBAC1D,6LAAC,gLAAuB;kBACtB,cAAA,6LAAC,iLAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,IAAA,4HAAE,EACX,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,iLAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 832, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/combobox.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport { Check, ChevronsUpDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"\nimport { Input } from \"./input\"\n\ntype ComboboxProps = {\n    options?: { value: string; label: string }[];\n    value: string;\n    onSelect: (value: string, label?: string) => void;\n    placeholder?: string;\n    disabled?: boolean;\n}\n\nexport function Combobox({ options = [], value, onSelect, placeholder, disabled }: ComboboxProps) {\n  const [open, setOpen] = React.useState(false)\n  const [inputValue, setInputValue] = React.useState(\"\")\n\n  const selectedOption = options.find((option) => \n    (option.value?.toLowerCase() === value?.toLowerCase())\n  );\n  \n  React.useEffect(() => {\n    setInputValue(selectedOption?.label || value || '')\n  }, [value, selectedOption])\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"outline\"\n          role=\"combobox\"\n          aria-expanded={open}\n          className=\"w-full justify-between font-normal\"\n          disabled={disabled}\n        >\n          <span className=\"truncate\">\n            {selectedOption?.label || value || placeholder || \"Select option...\"}\n          </span>\n          <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[--radix-popover-trigger-width] p-0\">\n        <Command>\n          <CommandInput \n            placeholder=\"Search or enter new...\"\n            value={inputValue}\n            onValueChange={setInputValue}\n           />\n          <CommandList>\n            <CommandEmpty onSelect={() => {\n                onSelect(inputValue, inputValue)\n                setOpen(false)\n            }}>\n                <div \n                    className=\"py-2 px-4 text-sm cursor-pointer hover:bg-accent\"\n                    onClick={() => {\n                         onSelect(inputValue, inputValue)\n                         setOpen(false)\n                    }}\n                >\n                    Add new: \"{inputValue}\"\n                </div>\n            </CommandEmpty>\n            <CommandGroup>\n              {options.map((option, index) => (\n                <CommandItem\n                  key={`${option.value}-${index}`}\n                  value={option.label}\n                  onSelect={(currentLabel) => {\n                    const selected = options.find(opt => opt.label.toLowerCase() === currentLabel.toLowerCase())\n                    onSelect(selected?.value || currentLabel, selected?.label || currentLabel)\n                    setOpen(false)\n                  }}\n                >\n                  <Check\n                    className={cn(\n                      \"mr-2 h-4 w-4\",\n                      value === option.value ? \"opacity-100\" : \"opacity-0\"\n                    )}\n                  />\n                  {option.label}\n                </CommandItem>\n              ))}\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  )\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAAA;AAEA;AACA;AACA;AAQA;;;AAfA;;;;;;;AA8BO,SAAS,SAAS,KAAuE;QAAvE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAiB,GAAvE;;IACvB,MAAM,CAAC,MAAM,QAAQ,GAAG,yKAAc,CAAC;IACvC,MAAM,CAAC,YAAY,cAAc,GAAG,yKAAc,CAAC;IAEnD,MAAM,iBAAiB,QAAQ,IAAI,CAAC,CAAC;YAClC;eAAA,EAAA,gBAAA,OAAO,KAAK,cAAZ,oCAAA,cAAc,WAAW,SAAO,kBAAA,4BAAA,MAAO,WAAW;;IAGrD,0KAAe;8BAAC;YACd,cAAc,CAAA,2BAAA,qCAAA,eAAgB,KAAK,KAAI,SAAS;QAClD;6BAAG;QAAC;QAAO;KAAe;IAE1B,qBACE,6LAAC,iJAAO;QAAC,MAAM;QAAM,cAAc;;0BACjC,6LAAC,wJAAc;gBAAC,OAAO;0BACrB,cAAA,6LAAC,+IAAM;oBACL,SAAQ;oBACR,MAAK;oBACL,iBAAe;oBACf,WAAU;oBACV,UAAU;;sCAEV,6LAAC;4BAAK,WAAU;sCACb,CAAA,2BAAA,qCAAA,eAAgB,KAAK,KAAI,SAAS,eAAe;;;;;;sCAEpD,6LAAC,mPAAc;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAG9B,6LAAC,wJAAc;gBAAC,WAAU;0BACxB,cAAA,6LAAC,iJAAO;;sCACN,6LAAC,sJAAY;4BACX,aAAY;4BACZ,OAAO;4BACP,eAAe;;;;;;sCAEjB,6LAAC,qJAAW;;8CACV,6LAAC,sJAAY;oCAAC,UAAU;wCACpB,SAAS,YAAY;wCACrB,QAAQ;oCACZ;8CACI,cAAA,6LAAC;wCACG,WAAU;wCACV,SAAS;4CACJ,SAAS,YAAY;4CACrB,QAAQ;wCACb;;4CACH;4CACc;4CAAW;;;;;;;;;;;;8CAG9B,6LAAC,sJAAY;8CACV,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,6LAAC,qJAAW;4CAEV,OAAO,OAAO,KAAK;4CACnB,UAAU,CAAC;gDACT,MAAM,WAAW,QAAQ,IAAI,CAAC,CAAA,MAAO,IAAI,KAAK,CAAC,WAAW,OAAO,aAAa,WAAW;gDACzF,SAAS,CAAA,qBAAA,+BAAA,SAAU,KAAK,KAAI,cAAc,CAAA,qBAAA,+BAAA,SAAU,KAAK,KAAI;gDAC7D,QAAQ;4CACV;;8DAEA,6LAAC,gNAAK;oDACJ,WAAW,kIACT,gBACA,UAAU,OAAO,KAAK,GAAG,gBAAgB;;;;;;gDAG5C,OAAO,KAAK;;2CAdR,AAAC,GAAkB,OAAhB,OAAO,KAAK,EAAC,KAAS,OAAN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuB1C;GA5EgB;KAAA","debugId":null}},
    {"offset": {"line": 1013, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/property/rooms/edit-room-dialog.tsx"],"sourcesContent":["\n\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { z } from 'zod';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';\nimport { Loader2 } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { roomSchema, type Room } from './schema';\nimport { updateRoom, getRoomLookups } from './actions';\nimport { Combobox } from '@/components/ui/combobox';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\n\nconst roomFormSchema = roomSchema.omit({ propertyCode: true });\n\ninterface EditRoomDialogProps {\n  room: Room,\n  isOpen: boolean,\n  setIsOpen: (open: boolean) => void,\n  onRoomUpdated?: () => void;\n}\n\nexport function EditRoomDialog({ room, isOpen, setIsOpen, onRoomUpdated }: EditRoomDialogProps) {\n  const [isSaving, setIsSaving] = useState(false);\n  const { toast } = useToast();\n  const router = useRouter();\n  const [lookups, setLookups] = useState<{ units: {value: string, label: string}[] }>({ units: [] });\n\n  useEffect(() => {\n      if(isOpen) {\n          getRoomLookups(room.propertyCode).then(setLookups);\n      }\n  }, [isOpen, room.propertyCode]);\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    formState: { errors, isDirty },\n  } = useForm<z.infer<typeof roomFormSchema>>({\n    resolver: zodResolver(roomFormSchema),\n  });\n\n  useEffect(() => {\n    if(isOpen) {\n        reset(room);\n    }\n  }, [room, reset, isOpen]);\n\n  const onSubmit = async (data: z.infer<typeof roomFormSchema>) => {\n    setIsSaving(true);\n    const result = await updateRoom({ ...data, propertyCode: room.propertyCode });\n\n    if (result.success) {\n      toast({\n        title: 'Room Updated',\n        description: `Successfully updated room.`,\n      });\n      setIsOpen(false);\n      if (onRoomUpdated) onRoomUpdated();\n      router.refresh();\n    } else {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: result.error,\n      });\n    }\n    setIsSaving(false);\n  };\n  \n  const handleOpenChange = (open: boolean) => {\n    if (!open) {\n        reset();\n    }\n    setIsOpen(open);\n  }\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleOpenChange}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <DialogHeader>\n            <DialogTitle>Edit Room</DialogTitle>\n            <DialogDescription>\n                Update the details for {room.roomCode}. Click save when you're done.\n            </DialogDescription>\n            </DialogHeader>\n             <div className=\"grid gap-4 py-4\">\n                <Input type=\"hidden\" {...register('id')} />\n                <div className=\"space-y-2\">\n                    <Label htmlFor=\"roomCode\">Room Code</Label>\n                    <Input id=\"roomCode\" {...register('roomCode')} />\n                    {errors.roomCode && <p className=\"text-destructive text-xs mt-1\">{errors.roomCode.message}</p>}\n                </div>\n                <div className=\"space-y-2\">\n                    <Label htmlFor=\"unitCode\">Unit</Label>\n                    <Controller\n                        name=\"unitCode\"\n                        control={control}\n                        render={({ field }) => (\n                           <Combobox\n                                options={lookups.units}\n                                value={field.value || ''}\n                                onSelect={field.onChange}\n                                placeholder=\"Select a unit\"\n                           />\n                        )}\n                    />\n                    {errors.unitCode && <p className=\"text-destructive text-xs mt-1\">{errors.unitCode.message}</p>}\n                </div>\n                 <div className=\"space-y-2\">\n                    <Label htmlFor=\"roomType\">Room Type</Label>\n                    <Controller\n                        name=\"roomType\"\n                        control={control}\n                        render={({ field }) => (\n                            <Select onValueChange={field.onChange} value={field.value}>\n                                <SelectTrigger>\n                                    <SelectValue placeholder=\"Select a room type\" />\n                                </SelectTrigger>\n                                <SelectContent>\n                                    <SelectItem value=\"Master Bed\">Master Bed</SelectItem>\n                                    <SelectItem value=\"Standard\">Standard</SelectItem>\n                                    <SelectItem value=\"Partition\">Partition</SelectItem>\n                                </SelectContent>\n                            </Select>\n                        )}\n                    />\n                    {errors.roomType && <p className=\"text-destructive text-xs mt-1\">{errors.roomType.message}</p>}\n                </div>\n            </div>\n            <DialogFooter>\n                <DialogClose asChild>\n                    <Button type=\"button\" variant=\"outline\">Cancel</Button>\n                </DialogClose>\n                <Button type=\"submit\" disabled={isSaving || !isDirty}>\n                    {isSaving && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                    Save Changes\n                </Button>\n            </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1412, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 1461, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/property/rooms/columns.tsx"],"sourcesContent":["\n\n'use client';\n\nimport { useState } from 'react';\nimport { ColumnDef } from '@tanstack/react-table';\nimport { ArrowUpDown, Pencil, Trash2, MoreHorizontal, FilePlus2 } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\n\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '@/components/ui/dropdown-menu';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { useToast } from '@/hooks/use-toast';\nimport { deleteRoom } from './actions';\nimport { EditRoomDialog } from './edit-room-dialog';\nimport { Room } from './schema';\nimport { Badge } from '@/components/ui/badge';\nimport { cn } from '@/lib/utils';\nimport Link from 'next/link';\n\nconst ActionsCell = ({ row }: { row: { original: Room } }) => {\n    const room = row.original;\n    const router = useRouter();\n    const { toast } = useToast();\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n    const [isDeleting, setIsDeleting] = useState(false);\n    const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n    const isVacant = room.occupancyStatus === 'Vacant';\n\n    const handleDelete = async () => {\n        setIsDeleting(true);\n        const result = await deleteRoom(room.id);\n        if (result.success) {\n            toast({\n                title: 'Room Deleted',\n                description: `Room \"${room.roomName}\" has been deleted.`,\n            });\n            router.refresh();\n        } else {\n            toast({\n                variant: 'destructive',\n                title: 'Error',\n                description: result.error,\n            });\n        }\n        setIsDeleting(false);\n        setIsDeleteDialogOpen(false);\n    };\n\n    return (\n        <>\n            <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n                        <AlertDialogDescription>\n                            This action cannot be undone. This will permanently delete the room \"{room.roomName}\".\n                        </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel>Cancel</AlertDialogCancel>\n                        <AlertDialogAction onClick={handleDelete} disabled={isDeleting} className=\"bg-destructive hover:bg-destructive/90\">\n                            {isDeleting ? 'Deleting...' : 'Delete'}\n                        </AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n            \n            <EditRoomDialog \n              room={room} \n              isOpen={isEditDialogOpen} \n              setIsOpen={setIsEditDialogOpen}\n            />\n\n            <div className=\"text-right\">\n                <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                            <span className=\"sr-only\">Open menu</span>\n                            <MoreHorizontal className=\"h-4 w-4\" />\n                        </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align=\"end\">\n                        <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                        {isVacant && (\n                             <DropdownMenuItem asChild>\n                               <Link href={`/tenancy/contract?propertyCode=${room.propertyCode}&unitCode=${room.unitCode}&roomCode=${room.roomCode}`}>\n                                    <FilePlus2 className=\"mr-2 h-4 w-4\" />\n                                    Create Tenancy\n                                </Link>\n                            </DropdownMenuItem>\n                        )}\n                        <DropdownMenuItem onSelect={() => setIsEditDialogOpen(true)}>\n                            <Pencil className=\"mr-2 h-4 w-4\" />\n                            Edit\n                        </DropdownMenuItem>\n                         <DropdownMenuSeparator />\n                        <DropdownMenuItem className=\"text-destructive\" onClick={() => setIsDeleteDialogOpen(true)}>\n                            <Trash2 className=\"mr-2 h-4 w-4\" />\n                            Delete\n                        </DropdownMenuItem>\n                    </DropdownMenuContent>\n                </DropdownMenu>\n            </div>\n        </>\n    );\n};\n\n\nexport const columns: ColumnDef<Room>[] = [\n  {\n    id: 'select',\n    header: ({ table }) => (\n      <Checkbox\n        checked={table.getIsAllPageRowsSelected()}\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: 'roomCode',\n    header: ({ column }) => (\n      <Button\n        variant=\"ghost\"\n        onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n      >\n        Room Code\n        <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n      </Button>\n    ),\n  },\n  {\n    accessorKey: 'unitCode',\n    header: 'Unit Code',\n  },\n  {\n    accessorKey: 'roomType',\n    header: 'Room Type',\n  },\n  {\n    accessorKey: 'occupancyStatus',\n    header: 'Occupancy Status',\n    cell: ({ row }) => {\n      const status = row.original.occupancyStatus;\n      const variant = status === 'Occupied' ? 'destructive' : 'default';\n      return <Badge variant={variant} className={cn(status === 'Vacant' ? 'bg-green-500/20 text-green-700' : 'bg-red-500/20 text-red-700', 'border-transparent')}>{status}</Badge>;\n    },\n  },\n  {\n    id: 'actions',\n    cell: ActionsCell,\n  },\n];\n"],"names":[],"mappings":";;;;;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAQA;AAUA;AACA;AACA;AAEA;AACA;AACA;;;AAjCA;;;;;;;;;;;;;;AAmCA,MAAM,cAAc;QAAC,EAAE,GAAG,EAA+B;;IACrD,MAAM,OAAO,IAAI,QAAQ;IACzB,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,EAAE,KAAK,EAAE,GAAG,IAAA,2IAAQ;IAC1B,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,IAAA,yKAAQ,EAAC;IAC7D,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,yKAAQ,EAAC;IAC7C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,yKAAQ,EAAC;IACzD,MAAM,WAAW,KAAK,eAAe,KAAK;IAE1C,MAAM,eAAe;QACjB,cAAc;QACd,MAAM,SAAS,MAAM,IAAA,wLAAU,EAAC,KAAK,EAAE;QACvC,IAAI,OAAO,OAAO,EAAE;YAChB,MAAM;gBACF,OAAO;gBACP,aAAa,AAAC,SAAsB,OAAd,KAAK,QAAQ,EAAC;YACxC;YACA,OAAO,OAAO;QAClB,OAAO;YACH,MAAM;gBACF,SAAS;gBACT,OAAO;gBACP,aAAa,OAAO,KAAK;YAC7B;QACJ;QACA,cAAc;QACd,sBAAsB;IAC1B;IAEA,qBACI;;0BACI,6LAAC,6JAAW;gBAAC,MAAM;gBAAoB,cAAc;0BACjD,cAAA,6LAAC,oKAAkB;;sCACf,6LAAC,mKAAiB;;8CACd,6LAAC,kKAAgB;8CAAC;;;;;;8CAClB,6LAAC,wKAAsB;;wCAAC;wCACkD,KAAK,QAAQ;wCAAC;;;;;;;;;;;;;sCAG5F,6LAAC,mKAAiB;;8CACd,6LAAC,mKAAiB;8CAAC;;;;;;8CACnB,6LAAC,mKAAiB;oCAAC,SAAS;oCAAc,UAAU;oCAAY,WAAU;8CACrE,aAAa,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;0BAM9C,6LAAC,+KAAc;gBACb,MAAM;gBACN,QAAQ;gBACR,WAAW;;;;;;0BAGb,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC,+JAAY;;sCACT,6LAAC,sKAAmB;4BAAC,OAAO;sCACxB,cAAA,6LAAC,+IAAM;gCAAC,SAAQ;gCAAQ,WAAU;;kDAC9B,6LAAC;wCAAK,WAAU;kDAAU;;;;;;kDAC1B,6LAAC,qOAAc;wCAAC,WAAU;;;;;;;;;;;;;;;;;sCAGlC,6LAAC,sKAAmB;4BAAC,OAAM;;8CACvB,6LAAC,oKAAiB;8CAAC;;;;;;gCAClB,0BACI,6LAAC,mKAAgB;oCAAC,OAAO;8CACvB,cAAA,6LAAC,0KAAI;wCAAC,MAAM,AAAC,kCAA+D,OAA9B,KAAK,YAAY,EAAC,cAAsC,OAA1B,KAAK,QAAQ,EAAC,cAA0B,OAAd,KAAK,QAAQ;;0DAC9G,6LAAC,oOAAS;gDAAC,WAAU;;;;;;4CAAiB;;;;;;;;;;;;8CAKlD,6LAAC,mKAAgB;oCAAC,UAAU,IAAM,oBAAoB;;sDAClD,6LAAC,mNAAM;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;8CAGtC,6LAAC,wKAAqB;;;;;8CACvB,6LAAC,mKAAgB;oCAAC,WAAU;oCAAmB,SAAS,IAAM,sBAAsB;;sDAChF,6LAAC,uNAAM;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ/D;GAtFM;;QAEa,kJAAS;QACN,2IAAQ;;;KAHxB;AAyFC,MAAM,UAA6B;IACxC;QACE,IAAI;QACJ,QAAQ;gBAAC,EAAE,KAAK,EAAE;iCAChB,6LAAC,mJAAQ;gBACP,SAAS,MAAM,wBAAwB;gBACvC,iBAAiB,CAAC,QAAU,MAAM,yBAAyB,CAAC,CAAC,CAAC;gBAC9D,cAAW;;;;;;;QAGf,MAAM;gBAAC,EAAE,GAAG,EAAE;iCACZ,6LAAC,mJAAQ;gBACP,SAAS,IAAI,aAAa;gBAC1B,iBAAiB,CAAC,QAAU,IAAI,cAAc,CAAC,CAAC,CAAC;gBACjD,cAAW;;;;;;;QAGf,eAAe;QACf,cAAc;IAChB;IACA;QACE,aAAa;QACb,QAAQ;gBAAC,EAAE,MAAM,EAAE;iCACjB,6LAAC,+IAAM;gBACL,SAAQ;gBACR,SAAS,IAAM,OAAO,aAAa,CAAC,OAAO,WAAW,OAAO;;oBAC9D;kCAEC,6LAAC,0OAAW;wBAAC,WAAU;;;;;;;;;;;;;IAG7B;IACA;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ;IACV;IACA;QACE,aAAa;QACb,QAAQ;QACR,MAAM;gBAAC,EAAE,GAAG,EAAE;YACZ,MAAM,SAAS,IAAI,QAAQ,CAAC,eAAe;YAC3C,MAAM,UAAU,WAAW,aAAa,gBAAgB;YACxD,qBAAO,6LAAC,6IAAK;gBAAC,SAAS;gBAAS,WAAW,IAAA,4HAAE,EAAC,WAAW,WAAW,mCAAmC,8BAA8B;0BAAwB;;;;;;QAC/J;IACF;IACA;QACE,IAAI;QACJ,MAAM;IACR;CACD","debugId":null}},
    {"offset": {"line": 1837, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAG5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAM,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,2KAAgB,OAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,6DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,2KAAgB,QAGnC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2005, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/property/rooms/data-table.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\n\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    onSortingChange: setSorting,\n    getSortedRowModel: getSortedRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  return (\n    <div>\n      <div className=\"flex items-center py-4\">\n        <Input\n          placeholder=\"Filter by room code...\"\n          value={(table.getColumn('roomCode')?.getFilterValue() as string) ?? ''}\n          onChange={(event) =>\n            table.getColumn('roomCode')?.setFilterValue(event.target.value)\n          }\n          className=\"max-w-sm\"\n        />\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"outline\" className=\"ml-auto\">\n              Columns\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            {table\n              .getAllColumns()\n              .filter((column) => column.getCanHide())\n              .map((column) => {\n                return (\n                  <DropdownMenuCheckboxItem\n                    key={column.id}\n                    className=\"capitalize\"\n                    checked={column.getIsVisible()}\n                    onCheckedChange={(value) =>\n                      column.toggleVisibility(!!value)\n                    }\n                  >\n                    {column.id}\n                  </DropdownMenuCheckboxItem>\n                );\n              })}\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && 'selected'}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <div className=\"flex-1 text-sm text-muted-foreground\">\n          {table.getFilteredSelectedRowModel().rows.length} of{' '}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n        >\n          Previous\n        </Button>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n        >\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}