{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAG5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAM,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,2KAAgB,OAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,6DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,2KAAgB,QAGnC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,IAAA,4HAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/assets/data-table.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\nimport { FileText, FileSpreadsheet, Printer } from 'lucide-react';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useCurrency } from '@/context/currency-context';\nimport { type Asset } from './schema';\n\n// Extend jsPDF type to include autoTable from the plugin\ndeclare module 'jspdf' {\n    interface jsPDF {\n      autoTable: (options: any) => jsPDF;\n    }\n}\n\ninterface DataTableProps<TData extends Asset, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n}\n\nexport function DataTable<TData extends Asset, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n  const { formatCurrency } = useCurrency();\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    onSortingChange: setSorting,\n    getSortedRowModel: getSortedRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    getFilteredRowModel: getFilteredRowModel(),\n    state: {\n      sorting,\n      columnFilters,\n    },\n  });\n  \n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n    const tableData = table.getFilteredRowModel().rows.map(row => row.original);\n\n    doc.text(\"Asset Register Report\", 14, 16);\n    (doc as any).autoTable({\n        head: [['Code', 'Name', 'Type', 'Purchase Date', 'Cost', 'Current Value']],\n        body: tableData.map(asset => [\n            asset.assetCode,\n            asset.assetName,\n            asset.assetType,\n            asset.purchaseDate,\n            formatCurrency(asset.purchaseCost),\n            formatCurrency(asset.currentValue || 0)\n        ]),\n        startY: 20,\n    });\n    doc.save('asset-report.pdf');\n  };\n\n  const handleExportExcel = () => {\n    const dataToExport = table.getFilteredRowModel().rows.map(row => {\n        const asset = row.original;\n        return {\n            'Asset Code': asset.assetCode,\n            'Asset Name': asset.assetName,\n            'Type': asset.assetType,\n            'Purchase Date': asset.purchaseDate,\n            'Purchase Cost': asset.purchaseCost,\n            'Current Value': asset.currentValue || 0,\n        }\n    });\n\n    const ws = XLSX.utils.json_to_sheet(dataToExport);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Assets\");\n    XLSX.writeFile(wb, \"asset-report.xlsx\");\n  };\n\n  const handlePrint = () => {\n    window.print();\n  }\n\n  return (\n    <>\n      <style jsx global>{`\n        @media print {\n          body * {\n            visibility: hidden;\n          }\n          #printable-area, #printable-area * {\n            visibility: visible;\n          }\n          #printable-area {\n            position: absolute;\n            left: 0;\n            top: 0;\n            width: 100%;\n          }\n          .no-print {\n            display: none;\n          }\n        }\n      `}</style>\n      <div className=\"rounded-md border p-4\">\n        <div className=\"flex items-center py-4 gap-4 no-print\">\n          <Input\n            placeholder=\"Filter by asset name...\"\n            value={(table.getColumn('assetName')?.getFilterValue() as string) ?? ''}\n            onChange={(event) =>\n              table.getColumn('assetName')?.setFilterValue(event.target.value)\n            }\n            className=\"max-w-sm\"\n          />\n          <Input\n            placeholder=\"Filter by asset code...\"\n            value={(table.getColumn('assetCode')?.getFilterValue() as string) ?? ''}\n            onChange={(event) =>\n              table.getColumn('assetCode')?.setFilterValue(event.target.value)\n            }\n            className=\"max-w-sm\"\n          />\n          <div className=\"ml-auto flex items-center gap-2\">\n              <Button variant=\"outline\" size=\"sm\" onClick={handlePrint}>\n                  <Printer className=\"mr-2 h-4 w-4\" /> Print Report\n              </Button>\n              <Button variant=\"outline\" size=\"sm\" onClick={handleExportPDF}>\n                  <FileText className=\"mr-2 h-4 w-4\" /> Export PDF\n              </Button>\n              <Button variant=\"outline\" size=\"sm\" onClick={handleExportExcel}>\n                  <FileSpreadsheet className=\"mr-2 h-4 w-4\" /> Export Excel\n              </Button>\n          </div>\n        </div>\n        <div className=\"rounded-md border\">\n          <Table>\n            <TableHeader>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <TableRow key={headerGroup.id}>\n                  {headerGroup.headers.map((header) => {\n                    return (\n                      <TableHead key={header.id}>\n                        {header.isPlaceholder\n                          ? null\n                          : flexRender(\n                              header.column.columnDef.header,\n                              header.getContext()\n                            )}\n                      </TableHead>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableHeader>\n            <TableBody>\n              {table.getRowModel().rows?.length ? (\n                table.getRowModel().rows.map((row) => (\n                  <TableRow\n                    key={row.id}\n                    data-state={row.getIsSelected() && 'selected'}\n                  >\n                    {row.getVisibleCells().map((cell) => (\n                      <TableCell key={cell.id}>\n                        {flexRender(\n                          cell.column.columnDef.cell,\n                          cell.getContext()\n                        )}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell\n                    colSpan={columns.length}\n                    className=\"h-24 text-center\"\n                  >\n                    No assets found.\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <div className=\"flex items-center justify-end space-x-2 py-4 no-print\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n          >\n            Previous\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,6KAAoB;AAEnC,MAAM,gBAAgB,gLAAuB;AAE7C,MAAM,eAAe,+KAAsB;AAE3C,MAAM,cAAc,8KAAqB;AAEzC,MAAM,8BAAgB,2KAAgB,CAGpC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,gLAAuB;QACtB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,2KAAgB,OAGpC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,gLAAuB;gBACtB,KAAK;gBACL,WAAW,IAAA,4HAAE,EACX,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,8KAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,oMAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,8KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,qDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,8KAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,2KAAgB,OAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,oLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,oLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 723, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,IAAA,0KAAG,EACvB;AAGF,MAAM,sBAAQ,2KAAgB,MAI5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,4KAAmB;QAClB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;;AAGb,MAAM,WAAW,GAAG,4KAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/assets/schema.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\nexport const assetHistorySchema = z.object({\n  date: z.string(),\n  status: z.string(),\n  assignedTo: z.string().optional(),\n  notes: z.string().optional(),\n});\n\nexport const assetSchema = z.object({\n  id: z.string(),\n  assetCode: z.string().min(1, 'Asset code is required.'),\n  assetName: z.string().min(1, 'Asset name is required.'),\n  assetType: z.enum(['Tangible', 'Intangible']),\n  purchaseDate: z.string().min(1, 'Purchase date is required.'),\n  purchaseCost: z.number().min(0, 'Purchase cost must be a positive number.'),\n  depreciationMethod: z.enum(['Straight-Line', 'Declining Balance']),\n  usefulLife: z.number().min(0, 'Useful life (in years) must be a positive number.'),\n  salvageValue: z.number().min(0, 'Salvage value must be a positive number.'),\n  currentValue: z.number().optional(),\n  status: z.enum(['In Stock', 'Assigned', 'Damaged', 'Out for Repair', 'Retired']).default('In Stock'),\n  assignedTo: z.string().optional(),\n  notes: z.string().optional(),\n  history: z.array(assetHistorySchema).optional(),\n});\n\nexport type Asset = z.infer<typeof assetSchema>;\nexport type AssetHistory = z.infer<typeof assetHistorySchema>;\n\n    "],"names":[],"mappings":";;;;;;AACA;;AAEO,MAAM,qBAAqB,0KAAC,CAAC,MAAM,CAAC;IACzC,MAAM,0KAAC,CAAC,MAAM;IACd,QAAQ,0KAAC,CAAC,MAAM;IAChB,YAAY,0KAAC,CAAC,MAAM,GAAG,QAAQ;IAC/B,OAAO,0KAAC,CAAC,MAAM,GAAG,QAAQ;AAC5B;AAEO,MAAM,cAAc,0KAAC,CAAC,MAAM,CAAC;IAClC,IAAI,0KAAC,CAAC,MAAM;IACZ,WAAW,0KAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,WAAW,0KAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,WAAW,0KAAC,CAAC,IAAI,CAAC;QAAC;QAAY;KAAa;IAC5C,cAAc,0KAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,cAAc,0KAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,oBAAoB,0KAAC,CAAC,IAAI,CAAC;QAAC;QAAiB;KAAoB;IACjE,YAAY,0KAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC9B,cAAc,0KAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,cAAc,0KAAC,CAAC,MAAM,GAAG,QAAQ;IACjC,QAAQ,0KAAC,CAAC,IAAI,CAAC;QAAC;QAAY;QAAY;QAAW;QAAkB;KAAU,EAAE,OAAO,CAAC;IACzF,YAAY,0KAAC,CAAC,MAAM,GAAG,QAAQ;IAC/B,OAAO,0KAAC,CAAC,MAAM,GAAG,QAAQ;IAC1B,SAAS,0KAAC,CAAC,KAAK,CAAC,oBAAoB,QAAQ;AAC/C","debugId":null}},
    {"offset": {"line": 813, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/assets/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { assetSchema, type Asset, type AssetHistory } from './schema';\n\nconst assetsFilePath = path.join(process.cwd(), 'src/app/assets/assets-data.json');\n\n\nasync function readAssets(): Promise<Asset[]> {\n    try {\n        await fs.access(assetsFilePath);\n        const data = await fs.readFile(assetsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await writeAssets([]);\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeAssets(data: Asset[]) {\n    await fs.writeFile(assetsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getAssets(): Promise<Asset[]> {\n    const assets = await readAssets();\n    // Calculate current value for each asset\n    return assets.map(asset => {\n        const depreciation = calculateDepreciation(asset);\n        return {\n            ...asset,\n            currentValue: asset.purchaseCost - depreciation,\n        };\n    });\n}\n\nconst addAssetFormSchema = assetSchema.omit({ id: true, currentValue: true, history: true });\n\nasync function getNextAssetCode() {\n    const allAssets = await readAssets();\n    let maxNum = 0;\n    allAssets.forEach(asset => {\n        const match = asset.assetCode.match(/^ASSET-(\\d+)$/);\n        if(match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `ASSET-${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\nexport async function saveAsset(data: z.infer<typeof addAssetFormSchema>, isNewRecord: boolean, isAutoCode: boolean, id?: string) {\n    const validation = addAssetFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allAssets = await readAssets();\n        let assetData = validation.data;\n\n        if (isNewRecord) { // Create new\n            if (isAutoCode) {\n                assetData.assetCode = await getNextAssetCode();\n            } else {\n                const assetExists = allAssets.some(a => a.assetCode === assetData.assetCode);\n                if(assetExists) {\n                     return { success: false, error: `Asset with code \"${assetData.assetCode}\" already exists.` };\n                }\n            }\n            const newAsset: Asset = {\n                ...assetData,\n                id: `ASSET-${Date.now()}`,\n                history: [{\n                    date: new Date().toISOString(),\n                    status: 'In Stock',\n                    assignedTo: '',\n                    notes: 'Asset created.'\n                }]\n            };\n            allAssets.push(newAsset);\n        } else { // Update existing\n            const index = allAssets.findIndex(a => a.id === id);\n            if(index === -1) return { success: false, error: 'Asset not found.'};\n            allAssets[index] = { ...allAssets[index], ...assetData };\n        }\n\n        await writeAssets(allAssets);\n        revalidatePath('/assets');\n        return { success: true, data: assetData };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteAsset(assetId: string) {\n     try {\n        const allAssets = await readAssets();\n        const updatedAssets = allAssets.filter(asset => asset.id !== assetId);\n        \n        if (allAssets.length === updatedAssets.length) {\n            return { success: false, error: 'Asset not found.' };\n        }\n\n        await writeAssets(updatedAssets);\n        revalidatePath('/assets');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nfunction calculateDepreciation(asset: Asset): number {\n    const purchaseDate = new Date(asset.purchaseDate);\n    const now = new Date();\n    const ageInYears = (now.getTime() - purchaseDate.getTime()) / (1000 * 60 * 60 * 24 * 365.25);\n\n    if (ageInYears <= 0 || asset.usefulLife <= 0) {\n        return 0;\n    }\n\n    const effectiveAge = Math.min(ageInYears, asset.usefulLife);\n    const depreciableValue = asset.purchaseCost - asset.salvageValue;\n\n    if (depreciableValue <= 0) {\n        return 0;\n    }\n\n    let totalDepreciation = 0;\n\n    if (asset.depreciationMethod === 'Straight-Line') {\n        const annualDepreciation = depreciableValue / asset.usefulLife;\n        totalDepreciation = annualDepreciation * effectiveAge;\n    } else if (asset.depreciationMethod === 'Declining Balance') {\n        const rate = (1 / asset.usefulLife) * 2; // Double-declining balance\n        let bookValue = asset.purchaseCost;\n        for (let i = 0; i < Math.floor(effectiveAge); i++) {\n            const annualDepreciation = bookValue * rate;\n            bookValue -= annualDepreciation;\n        }\n        // Prorate for the partial year\n        if (effectiveAge % 1 !== 0) {\n             const partialYearDepreciation = bookValue * rate * (effectiveAge % 1);\n             bookValue -= partialYearDepreciation;\n        }\n        totalDepreciation = asset.purchaseCost - bookValue;\n    }\n\n    return Math.min(totalDepreciation, depreciableValue);\n}\n\nconst updateStatusSchema = z.object({\n    id: z.string(),\n    status: z.enum(['In Stock', 'Assigned', 'Damaged', 'Out for Repair', 'Retired']),\n    assignedTo: z.string().optional(),\n    notes: z.string().optional(),\n});\n\nexport async function updateAssetStatus(data: z.infer<typeof updateStatusSchema>) {\n    const validation = updateStatusSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allAssets = await readAssets();\n        const index = allAssets.findIndex(a => a.id === data.id);\n        if (index === -1) {\n            return { success: false, error: 'Asset not found.' };\n        }\n\n        const newHistoryEntry: AssetHistory = {\n            date: new Date().toISOString(),\n            status: data.status,\n            assignedTo: data.assignedTo,\n            notes: data.notes,\n        };\n\n        allAssets[index] = {\n            ...allAssets[index],\n            status: data.status,\n            assignedTo: data.assignedTo,\n            history: [...(allAssets[index].history || []), newHistoryEntry],\n        };\n\n        await writeAssets(allAssets);\n        revalidatePath('/assets');\n        return { success: true, data: allAssets[index] };\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n\n    "],"names":[],"mappings":";;;;;;;IA2DsB,YAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 828, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAKA,MAAM,yBAAW,2KAAgB,MAC/B,QAAwB;QAAvB,EAAC,SAAS,EAAE,GAAG,OAAM;IACpB,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 863, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,2KAAgB,MAG7B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,6KAAqB;QACpB,WAAW,IAAA,4HAAE,EACX,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,6LAAC,8KAAsB;YACrB,WAAW,IAAA,4HAAE,EACX;;;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,6KAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 908, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/assets/add-asset-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';\nimport { Plus, Loader2 } from 'lucide-react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { assetSchema, type Asset } from './schema';\nimport { saveAsset } from './actions';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Switch } from '@/components/ui/switch';\n\nconst formSchema = assetSchema.omit({ id: true, currentValue: true, history: true });\n\ntype AssetFormData = z.infer<typeof formSchema>;\n\ninterface AddAssetDialogProps {\n    asset?: Asset;\n    onAssetAdded: () => void;\n    children?: React.ReactNode;\n    isOpen?: boolean;\n    setIsOpen?: (open: boolean) => void;\n}\n\nexport function AddAssetDialog({ asset, onAssetAdded, children, isOpen: externalOpen, setIsOpen: setExternalOpen }: AddAssetDialogProps) {\n  const [internalOpen, setInternalOpen] = useState(false);\n  const isOpen = externalOpen ?? internalOpen;\n  const setIsOpen = setExternalOpen ?? setInternalOpen;\n\n  const [isSaving, setIsSaving] = useState(false);\n  const [isAutoCode, setIsAutoCode] = useState(true);\n  const { toast } = useToast();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    formState: { errors },\n  } = useForm<AssetFormData>({\n    resolver: zodResolver(formSchema),\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n        if(asset) {\n            reset(asset);\n            setIsAutoCode(false);\n        } else {\n            reset({\n                assetCode: '',\n                assetName: '',\n                assetType: 'Tangible',\n                purchaseDate: new Date().toISOString().split('T')[0],\n                purchaseCost: 0,\n                depreciationMethod: 'Straight-Line',\n                usefulLife: 5,\n                salvageValue: 0,\n                status: 'In Stock',\n                assignedTo: '',\n                notes: '',\n            });\n            setIsAutoCode(true);\n        }\n    }\n  }, [isOpen, asset, reset]);\n\n  const onSubmit = async (data: AssetFormData) => {\n    setIsSaving(true);\n    const result = await saveAsset(data, !asset, isAutoCode, asset?.id);\n\n    if (result.success) {\n      toast({\n        title: asset ? 'Asset Updated' : 'Asset Added',\n        description: `Successfully ${asset ? 'updated' : 'added'} asset \"${data.assetName}\".`,\n      });\n      setIsOpen(false);\n      onAssetAdded();\n    } else {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: result.error,\n      });\n    }\n    setIsSaving(false);\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      {children ? (\n            <DialogTrigger asChild>{children}</DialogTrigger>\n      ) : (\n        <DialogTrigger asChild>\n            <Button>\n                <Plus className=\"mr-2 h-4 w-4\" /> Add New Asset\n            </Button>\n        </DialogTrigger>\n      )}\n      <DialogContent className=\"sm:max-w-2xl\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <DialogHeader>\n                <DialogTitle>{asset ? 'Edit Asset' : 'Add New Asset'}</DialogTitle>\n                <DialogDescription>\n                    Fill in the details below to record a new company asset.\n                </DialogDescription>\n            </DialogHeader>\n            <div className=\"grid gap-4 py-4 max-h-[70vh] overflow-y-auto pr-2\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"assetCode\">Asset Code</Label>\n                        <Input id=\"assetCode\" {...register('assetCode')} disabled={isAutoCode} />\n                        {errors.assetCode && <p className=\"text-destructive text-xs mt-1\">{errors.assetCode.message}</p>}\n                    </div>\n                     <div className=\"flex items-end space-x-2 pb-1\">\n                        <Switch\n                            id=\"auto-code-switch\"\n                            checked={isAutoCode}\n                            onCheckedChange={setIsAutoCode}\n                            disabled={!!asset}\n                        />\n                        <Label htmlFor=\"auto-code-switch\">Auto-generate Code</Label>\n                    </div>\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"assetName\">Asset Name</Label>\n                        <Input id=\"assetName\" {...register('assetName')} />\n                        {errors.assetName && <p className=\"text-destructive text-xs mt-1\">{errors.assetName.message}</p>}\n                    </div>\n                </div>\n                 <div className=\"space-y-2\">\n                    <Label htmlFor=\"assetType\">Asset Type</Label>\n                    <Controller\n                        name=\"assetType\"\n                        control={control}\n                        render={({ field }) => (\n                            <Select onValueChange={field.onChange} value={field.value}>\n                                <SelectTrigger><SelectValue/></SelectTrigger>\n                                <SelectContent>\n                                    <SelectItem value=\"Tangible\">Tangible</SelectItem>\n                                    <SelectItem value=\"Intangible\">Intangible</SelectItem>\n                                </SelectContent>\n                            </Select>\n                        )} />\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"purchaseDate\">Purchase Date</Label>\n                        <Input id=\"purchaseDate\" type=\"date\" {...register('purchaseDate')} />\n                        {errors.purchaseDate && <p className=\"text-destructive text-xs mt-1\">{errors.purchaseDate.message}</p>}\n                    </div>\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"purchaseCost\">Purchase Cost</Label>\n                        <Input id=\"purchaseCost\" type=\"number\" {...register('purchaseCost', { valueAsNumber: true })} />\n                        {errors.purchaseCost && <p className=\"text-destructive text-xs mt-1\">{errors.purchaseCost.message}</p>}\n                    </div>\n                </div>\n                <div className=\"space-y-2\">\n                    <Label>Depreciation Details</Label>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 p-4 border rounded-md\">\n                        <div className=\"space-y-2\">\n                            <Label htmlFor=\"depreciationMethod\">Method</Label>\n                             <Controller\n                                name=\"depreciationMethod\"\n                                control={control}\n                                render={({ field }) => (\n                                    <Select onValueChange={field.onChange} value={field.value}>\n                                        <SelectTrigger><SelectValue/></SelectTrigger>\n                                        <SelectContent>\n                                            <SelectItem value=\"Straight-Line\">Straight-Line</SelectItem>\n                                            <SelectItem value=\"Declining Balance\">Declining Balance</SelectItem>\n                                        </SelectContent>\n                                    </Select>\n                                )}\n                            />\n                        </div>\n                        <div className=\"space-y-2\">\n                            <Label htmlFor=\"usefulLife\">Useful Life (Years)</Label>\n                            <Input id=\"usefulLife\" type=\"number\" {...register('usefulLife', { valueAsNumber: true })} />\n                            {errors.usefulLife && <p className=\"text-destructive text-xs mt-1\">{errors.usefulLife.message}</p>}\n                        </div>\n                         <div className=\"space-y-2\">\n                            <Label htmlFor=\"salvageValue\">Salvage Value</Label>\n                            <Input id=\"salvageValue\" type=\"number\" {...register('salvageValue', { valueAsNumber: true })} />\n                            {errors.salvageValue && <p className=\"text-destructive text-xs mt-1\">{errors.salvageValue.message}</p>}\n                        </div>\n                    </div>\n                </div>\n                 <div className=\"space-y-2\">\n                    <Label htmlFor=\"notes\">Initial Notes</Label>\n                    <Textarea id=\"notes\" {...register('notes')} placeholder=\"e.g., Warranty information, initial condition...\" />\n                </div>\n            </div>\n            <DialogFooter>\n                <DialogClose asChild>\n                    <Button type=\"button\" variant=\"outline\" onClick={() => reset()}>Cancel</Button>\n                </DialogClose>\n                <Button type=\"submit\" disabled={isSaving}>\n                    {isSaving && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                    {asset ? 'Save Changes' : 'Add Asset'}\n                </Button>\n            </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1608, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,sLAAyB;AAE7C,MAAM,qBAAqB,yLAA4B;AAEvD,MAAM,oBAAoB,wLAA2B;AAErD,MAAM,mCAAqB,2KAAgB,CAGzC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,yLAA4B;QAC3B,WAAW,IAAA,4HAAE,EACX,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;;KAVH;AAaN,mBAAmB,WAAW,GAAG,yLAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,2KAAgB,OAGzC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,yLAA4B;gBAC3B,KAAK;gBACL,WAAW,IAAA,4HAAE,EACX,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,yLAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB;QAAC,EACzB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,oDACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB;QAAC,EACzB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,2KAAgB,OAGvC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,uLAA0B;QACzB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;;;AAGb,iBAAiB,WAAW,GAAG,uLAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,2KAAgB,OAG7C,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,6LAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,uBAAuB,WAAW,GAChC,6LAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,2KAAgB,OAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,wLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,IAAA,uJAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,wLAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,2KAAgB,QAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,wLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,IAAA,uJAAc,EAAC;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,wLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1793, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/assets/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { assetSchema, type Asset, type AssetHistory } from './schema';\n\nconst assetsFilePath = path.join(process.cwd(), 'src/app/assets/assets-data.json');\n\n\nasync function readAssets(): Promise<Asset[]> {\n    try {\n        await fs.access(assetsFilePath);\n        const data = await fs.readFile(assetsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await writeAssets([]);\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeAssets(data: Asset[]) {\n    await fs.writeFile(assetsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getAssets(): Promise<Asset[]> {\n    const assets = await readAssets();\n    // Calculate current value for each asset\n    return assets.map(asset => {\n        const depreciation = calculateDepreciation(asset);\n        return {\n            ...asset,\n            currentValue: asset.purchaseCost - depreciation,\n        };\n    });\n}\n\nconst addAssetFormSchema = assetSchema.omit({ id: true, currentValue: true, history: true });\n\nasync function getNextAssetCode() {\n    const allAssets = await readAssets();\n    let maxNum = 0;\n    allAssets.forEach(asset => {\n        const match = asset.assetCode.match(/^ASSET-(\\d+)$/);\n        if(match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `ASSET-${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\nexport async function saveAsset(data: z.infer<typeof addAssetFormSchema>, isNewRecord: boolean, isAutoCode: boolean, id?: string) {\n    const validation = addAssetFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allAssets = await readAssets();\n        let assetData = validation.data;\n\n        if (isNewRecord) { // Create new\n            if (isAutoCode) {\n                assetData.assetCode = await getNextAssetCode();\n            } else {\n                const assetExists = allAssets.some(a => a.assetCode === assetData.assetCode);\n                if(assetExists) {\n                     return { success: false, error: `Asset with code \"${assetData.assetCode}\" already exists.` };\n                }\n            }\n            const newAsset: Asset = {\n                ...assetData,\n                id: `ASSET-${Date.now()}`,\n                history: [{\n                    date: new Date().toISOString(),\n                    status: 'In Stock',\n                    assignedTo: '',\n                    notes: 'Asset created.'\n                }]\n            };\n            allAssets.push(newAsset);\n        } else { // Update existing\n            const index = allAssets.findIndex(a => a.id === id);\n            if(index === -1) return { success: false, error: 'Asset not found.'};\n            allAssets[index] = { ...allAssets[index], ...assetData };\n        }\n\n        await writeAssets(allAssets);\n        revalidatePath('/assets');\n        return { success: true, data: assetData };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteAsset(assetId: string) {\n     try {\n        const allAssets = await readAssets();\n        const updatedAssets = allAssets.filter(asset => asset.id !== assetId);\n        \n        if (allAssets.length === updatedAssets.length) {\n            return { success: false, error: 'Asset not found.' };\n        }\n\n        await writeAssets(updatedAssets);\n        revalidatePath('/assets');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nfunction calculateDepreciation(asset: Asset): number {\n    const purchaseDate = new Date(asset.purchaseDate);\n    const now = new Date();\n    const ageInYears = (now.getTime() - purchaseDate.getTime()) / (1000 * 60 * 60 * 24 * 365.25);\n\n    if (ageInYears <= 0 || asset.usefulLife <= 0) {\n        return 0;\n    }\n\n    const effectiveAge = Math.min(ageInYears, asset.usefulLife);\n    const depreciableValue = asset.purchaseCost - asset.salvageValue;\n\n    if (depreciableValue <= 0) {\n        return 0;\n    }\n\n    let totalDepreciation = 0;\n\n    if (asset.depreciationMethod === 'Straight-Line') {\n        const annualDepreciation = depreciableValue / asset.usefulLife;\n        totalDepreciation = annualDepreciation * effectiveAge;\n    } else if (asset.depreciationMethod === 'Declining Balance') {\n        const rate = (1 / asset.usefulLife) * 2; // Double-declining balance\n        let bookValue = asset.purchaseCost;\n        for (let i = 0; i < Math.floor(effectiveAge); i++) {\n            const annualDepreciation = bookValue * rate;\n            bookValue -= annualDepreciation;\n        }\n        // Prorate for the partial year\n        if (effectiveAge % 1 !== 0) {\n             const partialYearDepreciation = bookValue * rate * (effectiveAge % 1);\n             bookValue -= partialYearDepreciation;\n        }\n        totalDepreciation = asset.purchaseCost - bookValue;\n    }\n\n    return Math.min(totalDepreciation, depreciableValue);\n}\n\nconst updateStatusSchema = z.object({\n    id: z.string(),\n    status: z.enum(['In Stock', 'Assigned', 'Damaged', 'Out for Repair', 'Retired']),\n    assignedTo: z.string().optional(),\n    notes: z.string().optional(),\n});\n\nexport async function updateAssetStatus(data: z.infer<typeof updateStatusSchema>) {\n    const validation = updateStatusSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allAssets = await readAssets();\n        const index = allAssets.findIndex(a => a.id === data.id);\n        if (index === -1) {\n            return { success: false, error: 'Asset not found.' };\n        }\n\n        const newHistoryEntry: AssetHistory = {\n            date: new Date().toISOString(),\n            status: data.status,\n            assignedTo: data.assignedTo,\n            notes: data.notes,\n        };\n\n        allAssets[index] = {\n            ...allAssets[index],\n            status: data.status,\n            assignedTo: data.assignedTo,\n            history: [...(allAssets[index].history || []), newHistoryEntry],\n        };\n\n        await writeAssets(allAssets);\n        revalidatePath('/assets');\n        return { success: true, data: allAssets[index] };\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n\n    "],"names":[],"mappings":";;;;;;;IAyGsB,cAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 1808, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 1857, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/assets/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { assetSchema, type Asset, type AssetHistory } from './schema';\n\nconst assetsFilePath = path.join(process.cwd(), 'src/app/assets/assets-data.json');\n\n\nasync function readAssets(): Promise<Asset[]> {\n    try {\n        await fs.access(assetsFilePath);\n        const data = await fs.readFile(assetsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await writeAssets([]);\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeAssets(data: Asset[]) {\n    await fs.writeFile(assetsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getAssets(): Promise<Asset[]> {\n    const assets = await readAssets();\n    // Calculate current value for each asset\n    return assets.map(asset => {\n        const depreciation = calculateDepreciation(asset);\n        return {\n            ...asset,\n            currentValue: asset.purchaseCost - depreciation,\n        };\n    });\n}\n\nconst addAssetFormSchema = assetSchema.omit({ id: true, currentValue: true, history: true });\n\nasync function getNextAssetCode() {\n    const allAssets = await readAssets();\n    let maxNum = 0;\n    allAssets.forEach(asset => {\n        const match = asset.assetCode.match(/^ASSET-(\\d+)$/);\n        if(match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `ASSET-${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\nexport async function saveAsset(data: z.infer<typeof addAssetFormSchema>, isNewRecord: boolean, isAutoCode: boolean, id?: string) {\n    const validation = addAssetFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allAssets = await readAssets();\n        let assetData = validation.data;\n\n        if (isNewRecord) { // Create new\n            if (isAutoCode) {\n                assetData.assetCode = await getNextAssetCode();\n            } else {\n                const assetExists = allAssets.some(a => a.assetCode === assetData.assetCode);\n                if(assetExists) {\n                     return { success: false, error: `Asset with code \"${assetData.assetCode}\" already exists.` };\n                }\n            }\n            const newAsset: Asset = {\n                ...assetData,\n                id: `ASSET-${Date.now()}`,\n                history: [{\n                    date: new Date().toISOString(),\n                    status: 'In Stock',\n                    assignedTo: '',\n                    notes: 'Asset created.'\n                }]\n            };\n            allAssets.push(newAsset);\n        } else { // Update existing\n            const index = allAssets.findIndex(a => a.id === id);\n            if(index === -1) return { success: false, error: 'Asset not found.'};\n            allAssets[index] = { ...allAssets[index], ...assetData };\n        }\n\n        await writeAssets(allAssets);\n        revalidatePath('/assets');\n        return { success: true, data: assetData };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteAsset(assetId: string) {\n     try {\n        const allAssets = await readAssets();\n        const updatedAssets = allAssets.filter(asset => asset.id !== assetId);\n        \n        if (allAssets.length === updatedAssets.length) {\n            return { success: false, error: 'Asset not found.' };\n        }\n\n        await writeAssets(updatedAssets);\n        revalidatePath('/assets');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nfunction calculateDepreciation(asset: Asset): number {\n    const purchaseDate = new Date(asset.purchaseDate);\n    const now = new Date();\n    const ageInYears = (now.getTime() - purchaseDate.getTime()) / (1000 * 60 * 60 * 24 * 365.25);\n\n    if (ageInYears <= 0 || asset.usefulLife <= 0) {\n        return 0;\n    }\n\n    const effectiveAge = Math.min(ageInYears, asset.usefulLife);\n    const depreciableValue = asset.purchaseCost - asset.salvageValue;\n\n    if (depreciableValue <= 0) {\n        return 0;\n    }\n\n    let totalDepreciation = 0;\n\n    if (asset.depreciationMethod === 'Straight-Line') {\n        const annualDepreciation = depreciableValue / asset.usefulLife;\n        totalDepreciation = annualDepreciation * effectiveAge;\n    } else if (asset.depreciationMethod === 'Declining Balance') {\n        const rate = (1 / asset.usefulLife) * 2; // Double-declining balance\n        let bookValue = asset.purchaseCost;\n        for (let i = 0; i < Math.floor(effectiveAge); i++) {\n            const annualDepreciation = bookValue * rate;\n            bookValue -= annualDepreciation;\n        }\n        // Prorate for the partial year\n        if (effectiveAge % 1 !== 0) {\n             const partialYearDepreciation = bookValue * rate * (effectiveAge % 1);\n             bookValue -= partialYearDepreciation;\n        }\n        totalDepreciation = asset.purchaseCost - bookValue;\n    }\n\n    return Math.min(totalDepreciation, depreciableValue);\n}\n\nconst updateStatusSchema = z.object({\n    id: z.string(),\n    status: z.enum(['In Stock', 'Assigned', 'Damaged', 'Out for Repair', 'Retired']),\n    assignedTo: z.string().optional(),\n    notes: z.string().optional(),\n});\n\nexport async function updateAssetStatus(data: z.infer<typeof updateStatusSchema>) {\n    const validation = updateStatusSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allAssets = await readAssets();\n        const index = allAssets.findIndex(a => a.id === data.id);\n        if (index === -1) {\n            return { success: false, error: 'Asset not found.' };\n        }\n\n        const newHistoryEntry: AssetHistory = {\n            date: new Date().toISOString(),\n            status: data.status,\n            assignedTo: data.assignedTo,\n            notes: data.notes,\n        };\n\n        allAssets[index] = {\n            ...allAssets[index],\n            status: data.status,\n            assignedTo: data.assignedTo,\n            history: [...(allAssets[index].history || []), newHistoryEntry],\n        };\n\n        await writeAssets(allAssets);\n        revalidatePath('/assets');\n        return { success: true, data: allAssets[index] };\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n\n    "],"names":[],"mappings":";;;;;;;IA0KsB,oBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 1872, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/assets/update-status-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { z } from 'zod';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { useToast } from '@/hooks/use-toast';\nimport { Loader2 } from 'lucide-react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { assetSchema, type Asset } from './schema';\nimport { updateAssetStatus } from './actions';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\n\nconst updateStatusSchema = z.object({\n  id: z.string(),\n  status: z.enum(['In Stock', 'Assigned', 'Damaged', 'Out for Repair', 'Retired']),\n  assignedTo: z.string().optional(),\n  notes: z.string().optional(),\n});\n\ntype UpdateStatusFormData = z.infer<typeof updateStatusSchema>;\n\ninterface UpdateStatusDialogProps {\n  asset: Asset;\n  isOpen: boolean;\n  setIsOpen: (open: boolean) => void;\n  onSuccess: () => void;\n}\n\nexport function UpdateStatusDialog({ asset, isOpen, setIsOpen, onSuccess }: UpdateStatusDialogProps) {\n  const [isSaving, setIsSaving] = useState(false);\n  const { toast } = useToast();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    formState: { errors },\n  } = useForm<UpdateStatusFormData>({\n    resolver: zodResolver(updateStatusSchema),\n    defaultValues: {\n      id: asset.id,\n      status: asset.status || 'In Stock',\n      assignedTo: asset.assignedTo || '',\n      notes: '',\n    },\n  });\n  \n  useEffect(() => {\n    if(isOpen) {\n        reset({\n            id: asset.id,\n            status: asset.status || 'In Stock',\n            assignedTo: asset.assignedTo || '',\n            notes: '',\n        });\n    }\n  }, [isOpen, asset, reset]);\n\n\n  const onSubmit = async (data: UpdateStatusFormData) => {\n    setIsSaving(true);\n    const result = await updateAssetStatus(data);\n\n    if (result.success) {\n      toast({\n        title: 'Asset Status Updated',\n        description: `Successfully updated asset \"${asset.assetName}\".`,\n      });\n      setIsOpen(false);\n      onSuccess();\n    } else {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: result.error,\n      });\n    }\n    setIsSaving(false);\n  };\n  \n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogContent>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogHeader>\n            <DialogTitle>Update Status for {asset.assetName}</DialogTitle>\n            <DialogDescription>\n              Log a new event in the asset's history.\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4 py-4\">\n             <div className=\"space-y-2\">\n                <Label htmlFor=\"status\">New Status</Label>\n                <Controller\n                    name=\"status\"\n                    control={control}\n                    render={({ field }) => (\n                        <Select onValueChange={field.onChange} value={field.value}>\n                            <SelectTrigger><SelectValue/></SelectTrigger>\n                            <SelectContent>\n                                <SelectItem value=\"In Stock\">In Stock</SelectItem>\n                                <SelectItem value=\"Assigned\">Assigned</SelectItem>\n                                <SelectItem value=\"Damaged\">Damaged</SelectItem>\n                                <SelectItem value=\"Out for Repair\">Out for Repair</SelectItem>\n                                <SelectItem value=\"Retired\">Retired</SelectItem>\n                            </SelectContent>\n                        </Select>\n                    )}\n                />\n            </div>\n             <div className=\"space-y-2\">\n                <Label htmlFor=\"assignedTo\">Assigned To</Label>\n                <Input id=\"assignedTo\" {...register('assignedTo')} placeholder=\"Employee Name / ID\" />\n            </div>\n            <div className=\"space-y-2\">\n                <Label htmlFor=\"notes\">Notes / Remarks</Label>\n                <Textarea id=\"notes\" {...register('notes')} placeholder=\"e.g., Exchanged with Mr. B, screen cracked, sent for repair.\" />\n            </div>\n          </div>\n          <DialogFooter>\n            <DialogClose asChild>\n              <Button type=\"button\" variant=\"outline\">Cancel</Button>\n            </DialogClose>\n            <Button type=\"submit\" disabled={isSaving}>\n              {isSaving && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n              Save Update\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2232, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollBar orientation=\"horizontal\" />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,2KAAgB,MAGjC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC,qLAAwB;QACvB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,yLAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC;gBAAU,aAAY;;;;;;0BACvB,6LAAC,uLAA0B;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,qLAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,2KAAgB,CAGhC,QAAoD;QAAnD,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO;yBAClD,6LAAC,oMAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,IAAA,4HAAE,EACX,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,gMAAmC;YAAC,WAAU;;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,oMAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2322, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/assets/asset-history-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useRef } from 'react';\nimport { type Asset, type AssetHistory } from './schema';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { CheckCircle, Info, Printer } from 'lucide-react';\nimport { format, parseISO } from 'date-fns';\n\ninterface AssetHistoryDialogProps {\n  asset: Asset;\n  isOpen: boolean;\n  setIsOpen: (open: boolean) => void;\n}\n\nexport function AssetHistoryDialog({ asset, isOpen, setIsOpen }: AssetHistoryDialogProps) {\n  const history = asset.history || [];\n  const printRef = useRef<HTMLDivElement>(null);\n\n  const handlePrint = () => {\n    const printContent = printRef.current?.innerHTML;\n    if (printContent) {\n      const printWindow = window.open('', '', 'height=600,width=800');\n      if (printWindow) {\n        printWindow.document.write('<html><head><title>Asset History</title>');\n        printWindow.document.write('<style>body { font-family: sans-serif; } table { width: 100%; border-collapse: collapse; } th, td { border: 1px solid #ddd; padding: 8px; } .no-print { display: none; } </style>');\n        printWindow.document.write('</head><body>');\n        printWindow.document.write(`<h1>History for: ${asset.assetName} (${asset.assetCode})</h1>`);\n        printWindow.document.write(printContent);\n        printWindow.document.write('</body></html>');\n        printWindow.document.close();\n        printWindow.print();\n      }\n    }\n  };\n\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogContent className=\"max-w-2xl\">\n        <DialogHeader>\n          <DialogTitle>History for: {asset.assetName}</DialogTitle>\n          <DialogDescription>\n            A complete audit trail of all changes and assignments for this asset.\n          </DialogDescription>\n        </DialogHeader>\n        <ScrollArea className=\"max-h-[60vh] p-1\" ref={printRef}>\n            <div className=\"relative pl-6\">\n                {/* Vertical line */}\n                <div className=\"absolute left-6 top-0 bottom-0 w-0.5 bg-border\"></div>\n                \n                {history.slice().reverse().map((entry, index) => (\n                    <div key={index} className=\"relative mb-8 pl-8\">\n                        <div className=\"absolute left-0 top-1.5 flex h-10 w-10 -translate-x-1/2 items-center justify-center rounded-full bg-background no-print\">\n                            <span className=\"flex h-5 w-5 items-center justify-center rounded-full bg-primary ring-4 ring-background\">\n                                <CheckCircle className=\"h-3 w-3 text-primary-foreground\" />\n                            </span>\n                        </div>\n                        <div className=\"rounded-lg border bg-card p-4\">\n                            <p className=\"font-semibold\">{entry.status}</p>\n                            <p className=\"text-sm text-muted-foreground\">\n                                {format(parseISO(entry.date), \"PPP 'at' p\")}\n                            </p>\n                            {entry.assignedTo && (\n                                <p className=\"mt-2 text-sm\">\n                                    <span className=\"font-medium\">Assigned to:</span> {entry.assignedTo}\n                                </p>\n                            )}\n                            {entry.notes && (\n                                <p className=\"mt-2 text-sm text-muted-foreground italic\">\n                                    \"{entry.notes}\"\n                                </p>\n                            )}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </ScrollArea>\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={handlePrint}>\n            <Printer className=\"mr-2 h-4 w-4\" /> Print\n          </Button>\n          <DialogClose asChild>\n            <Button>Close</Button>\n          </DialogClose>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AASA;AACA;AACA;AAAA;AACA;AAAA;;;AAhBA;;;;;;;AAwBO,SAAS,mBAAmB,KAAqD;QAArD,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAA2B,GAArD;;IACjC,MAAM,UAAU,MAAM,OAAO,IAAI,EAAE;IACnC,MAAM,WAAW,IAAA,uKAAM,EAAiB;IAExC,MAAM,cAAc;YACG;QAArB,MAAM,gBAAe,oBAAA,SAAS,OAAO,cAAhB,wCAAA,kBAAkB,SAAS;QAChD,IAAI,cAAc;YAChB,MAAM,cAAc,OAAO,IAAI,CAAC,IAAI,IAAI;YACxC,IAAI,aAAa;gBACf,YAAY,QAAQ,CAAC,KAAK,CAAC;gBAC3B,YAAY,QAAQ,CAAC,KAAK,CAAC;gBAC3B,YAAY,QAAQ,CAAC,KAAK,CAAC;gBAC3B,YAAY,QAAQ,CAAC,KAAK,CAAC,AAAC,oBAAuC,OAApB,MAAM,SAAS,EAAC,MAAoB,OAAhB,MAAM,SAAS,EAAC;gBACnF,YAAY,QAAQ,CAAC,KAAK,CAAC;gBAC3B,YAAY,QAAQ,CAAC,KAAK,CAAC;gBAC3B,YAAY,QAAQ,CAAC,KAAK;gBAC1B,YAAY,KAAK;YACnB;QACF;IACF;IAGA,qBACE,6LAAC,+IAAM;QAAC,MAAM;QAAQ,cAAc;kBAClC,cAAA,6LAAC,sJAAa;YAAC,WAAU;;8BACvB,6LAAC,qJAAY;;sCACX,6LAAC,oJAAW;;gCAAC;gCAAc,MAAM,SAAS;;;;;;;sCAC1C,6LAAC,0JAAiB;sCAAC;;;;;;;;;;;;8BAIrB,6LAAC,2JAAU;oBAAC,WAAU;oBAAmB,KAAK;8BAC1C,cAAA,6LAAC;wBAAI,WAAU;;0CAEX,6LAAC;gCAAI,WAAU;;;;;;4BAEd,QAAQ,KAAK,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC,OAAO,sBACnC,6LAAC;oCAAgB,WAAU;;sDACvB,6LAAC;4CAAI,WAAU;sDACX,cAAA,6LAAC;gDAAK,WAAU;0DACZ,cAAA,6LAAC,6OAAW;oDAAC,WAAU;;;;;;;;;;;;;;;;sDAG/B,6LAAC;4CAAI,WAAU;;8DACX,6LAAC;oDAAE,WAAU;8DAAiB,MAAM,MAAM;;;;;;8DAC1C,6LAAC;oDAAE,WAAU;8DACR,IAAA,mKAAM,EAAC,IAAA,uJAAQ,EAAC,MAAM,IAAI,GAAG;;;;;;gDAEjC,MAAM,UAAU,kBACb,6LAAC;oDAAE,WAAU;;sEACT,6LAAC;4DAAK,WAAU;sEAAc;;;;;;wDAAmB;wDAAE,MAAM,UAAU;;;;;;;gDAG1E,MAAM,KAAK,kBACR,6LAAC;oDAAE,WAAU;;wDAA4C;wDACnD,MAAM,KAAK;wDAAC;;;;;;;;;;;;;;mCAlBpB;;;;;;;;;;;;;;;;8BA0BtB,6LAAC,qJAAY;;sCACX,6LAAC,+IAAM;4BAAC,SAAQ;4BAAU,SAAS;;8CACjC,6LAAC,sNAAO;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;sCAEtC,6LAAC,oJAAW;4BAAC,OAAO;sCAClB,cAAA,6LAAC,+IAAM;0CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMpB;GA1EgB;KAAA","debugId":null}},
    {"offset": {"line": 2570, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/assets/columns.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { ColumnDef } from '@tanstack/react-table';\nimport { MoreHorizontal, Edit, Trash2, History, RotateCw } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator,\n} from '@/components/ui/dropdown-menu';\nimport { type Asset } from './schema';\nimport { AddAssetDialog } from './add-asset-dialog';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { deleteAsset } from './actions';\nimport { useToast } from '@/hooks/use-toast';\nimport { useCurrency } from '@/context/currency-context';\nimport { Badge } from '@/components/ui/badge';\nimport { cn } from '@/lib/utils';\nimport { UpdateStatusDialog } from './update-status-dialog';\nimport { AssetHistoryDialog } from './asset-history-dialog';\n\nconst statusConfig: { [key: string]: { variant: 'default' | 'secondary' | 'destructive' | 'outline', className: string } } = {\n  'In Stock': { variant: 'default', className: 'bg-green-100 text-green-800' },\n  'Assigned': { variant: 'secondary', className: 'bg-blue-100 text-blue-800' },\n  'Damaged': { variant: 'destructive', className: '' },\n  'Out for Repair': { variant: 'secondary', className: 'bg-yellow-100 text-yellow-800' },\n  'Retired': { variant: 'secondary', className: 'bg-gray-100 text-gray-800' },\n};\n\nconst ActionsCell = ({ row, onAssetUpdate }: { row: { original: Asset }, onAssetUpdate: () => void }) => {\n    const asset = row.original;\n    const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n    const [isStatusDialogOpen, setIsStatusDialogOpen] = useState(false);\n    const [isHistoryDialogOpen, setIsHistoryDialogOpen] = useState(false);\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n    const [isDeleting, setIsDeleting] = useState(false);\n    const { toast } = useToast();\n\n    const handleDelete = async () => {\n        setIsDeleting(true);\n        const result = await deleteAsset(asset.id);\n        if (result.success) {\n            toast({ title: 'Success', description: 'Asset has been deleted.' });\n            onAssetUpdate();\n        } else {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n        }\n        setIsDeleting(false);\n        setIsDeleteDialogOpen(false);\n    };\n    \n    return (\n        <>\n            <AddAssetDialog \n                asset={asset} \n                isOpen={isEditDialogOpen}\n                setIsOpen={setIsEditDialogOpen}\n                onAssetAdded={onAssetUpdate}\n            >\n                 <span className=\"w-full\"/>\n            </AddAssetDialog>\n            <UpdateStatusDialog\n                asset={asset}\n                isOpen={isStatusDialogOpen}\n                setIsOpen={setIsStatusDialogOpen}\n                onSuccess={onAssetUpdate}\n            />\n            <AssetHistoryDialog \n                asset={asset}\n                isOpen={isHistoryDialogOpen}\n                setIsOpen={setIsHistoryDialogOpen}\n            />\n             <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n                        <AlertDialogDescription>This action cannot be undone. This will permanently delete the asset \"{asset.assetName}\".</AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel>Cancel</AlertDialogCancel>\n                        <AlertDialogAction onClick={handleDelete} disabled={isDeleting}>\n                            {isDeleting ? 'Deleting...' : 'Delete'}\n                        </AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n            <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                    <span className=\"sr-only\">Open menu</span>\n                    <MoreHorizontal className=\"h-4 w-4\" />\n                </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\">\n                    <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                    <DropdownMenuItem onSelect={() => setIsStatusDialogOpen(true)}>\n                        <RotateCw className=\"mr-2 h-4 w-4\" /> Update Status\n                    </DropdownMenuItem>\n                    <DropdownMenuItem onSelect={() => setIsHistoryDialogOpen(true)}>\n                        <History className=\"mr-2 h-4 w-4\" /> View History\n                    </DropdownMenuItem>\n                    <DropdownMenuSeparator />\n                    <DropdownMenuItem onSelect={() => setIsEditDialogOpen(true)}>\n                        <Edit className=\"mr-2 h-4 w-4\" /> Edit Details\n                    </DropdownMenuItem>\n                    <DropdownMenuItem className=\"text-destructive\" onSelect={() => setIsDeleteDialogOpen(true)}>\n                        <Trash2 className=\"mr-2 h-4 w-4\" /> Delete\n                    </DropdownMenuItem>\n                </DropdownMenuContent>\n            </DropdownMenu>\n        </>\n    );\n};\n\n\nexport const columns = ({ onAssetUpdate }: { onAssetUpdate: () => void }): ColumnDef<Asset>[] => [\n    {\n      accessorKey: 'assetCode',\n      header: 'Asset Code',\n    },\n    {\n      accessorKey: 'assetName',\n      header: 'Asset Name',\n    },\n    {\n      accessorKey: 'status',\n      header: 'Status',\n      cell: function Cell({ row }) {\n        const status = row.original.status || 'In Stock';\n        const config = statusConfig[status] || statusConfig['In Stock'];\n        return <Badge variant={config.variant} className={cn(config.className, 'border-transparent')}>{status}</Badge>\n      },\n    },\n     {\n      accessorKey: 'assignedTo',\n      header: 'Assigned To',\n      cell: ({ row }) => row.original.assignedTo || <span className=\"text-muted-foreground\">N/A</span>,\n    },\n    {\n      accessorKey: 'purchaseDate',\n      header: 'Purchase Date',\n    },\n    {\n      accessorKey: 'purchaseCost',\n      header: () => <div className=\"text-right\">Cost</div>,\n      cell: function Cell({ row }) {\n        const { formatCurrency } = useCurrency();\n        const amount = parseFloat(String(row.getValue('purchaseCost')));\n        return <div className=\"text-right font-medium\">{formatCurrency(amount)}</div>\n      },\n    },\n    {\n      accessorKey: 'currentValue',\n      header: () => <div className=\"text-right\">Current Value</div>,\n      cell: function Cell({ row }) {\n        const { formatCurrency } = useCurrency();\n        const amount = parseFloat(String(row.getValue('currentValue')));\n        return <div className=\"text-right font-medium\">{formatCurrency(amount)}</div>\n      },\n    },\n    {\n      id: 'actions',\n      cell: ({ row }) => <ActionsCell row={row} onAssetUpdate={onAssetUpdate} />,\n    },\n];\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3033, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/assets/asset-list.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { DataTable } from './data-table';\nimport { columns } from './columns';\nimport { type Asset } from './schema';\n\nexport function AssetList({ initialAssets, onAssetUpdate }: { initialAssets: Asset[], onAssetUpdate: () => void }) {\n  const [assets, setAssets] = useState(initialAssets);\n  \n  useEffect(() => {\n    setAssets(initialAssets);\n  }, [initialAssets]);\n\n  return <DataTable columns={columns({ onAssetUpdate })} data={assets} />;\n}\n\n    "],"names":[],"mappings":";;;;;AAGA;AACA;AACA;;;AAJA;;;;AAOO,SAAS,UAAU,KAAuF;QAAvF,EAAE,aAAa,EAAE,aAAa,EAAyD,GAAvF;;IACxB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAAC;IAErC,IAAA,0KAAS;+BAAC;YACR,UAAU;QACZ;8BAAG;QAAC;KAAc;IAElB,qBAAO,6LAAC,sJAAS;QAAC,SAAS,IAAA,8IAAO,EAAC;YAAE;QAAc;QAAI,MAAM;;;;;;AAC/D;GARgB;KAAA","debugId":null}},
    {"offset": {"line": 3080, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/assets/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { assetSchema, type Asset, type AssetHistory } from './schema';\n\nconst assetsFilePath = path.join(process.cwd(), 'src/app/assets/assets-data.json');\n\n\nasync function readAssets(): Promise<Asset[]> {\n    try {\n        await fs.access(assetsFilePath);\n        const data = await fs.readFile(assetsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await writeAssets([]);\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeAssets(data: Asset[]) {\n    await fs.writeFile(assetsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getAssets(): Promise<Asset[]> {\n    const assets = await readAssets();\n    // Calculate current value for each asset\n    return assets.map(asset => {\n        const depreciation = calculateDepreciation(asset);\n        return {\n            ...asset,\n            currentValue: asset.purchaseCost - depreciation,\n        };\n    });\n}\n\nconst addAssetFormSchema = assetSchema.omit({ id: true, currentValue: true, history: true });\n\nasync function getNextAssetCode() {\n    const allAssets = await readAssets();\n    let maxNum = 0;\n    allAssets.forEach(asset => {\n        const match = asset.assetCode.match(/^ASSET-(\\d+)$/);\n        if(match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `ASSET-${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\nexport async function saveAsset(data: z.infer<typeof addAssetFormSchema>, isNewRecord: boolean, isAutoCode: boolean, id?: string) {\n    const validation = addAssetFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allAssets = await readAssets();\n        let assetData = validation.data;\n\n        if (isNewRecord) { // Create new\n            if (isAutoCode) {\n                assetData.assetCode = await getNextAssetCode();\n            } else {\n                const assetExists = allAssets.some(a => a.assetCode === assetData.assetCode);\n                if(assetExists) {\n                     return { success: false, error: `Asset with code \"${assetData.assetCode}\" already exists.` };\n                }\n            }\n            const newAsset: Asset = {\n                ...assetData,\n                id: `ASSET-${Date.now()}`,\n                history: [{\n                    date: new Date().toISOString(),\n                    status: 'In Stock',\n                    assignedTo: '',\n                    notes: 'Asset created.'\n                }]\n            };\n            allAssets.push(newAsset);\n        } else { // Update existing\n            const index = allAssets.findIndex(a => a.id === id);\n            if(index === -1) return { success: false, error: 'Asset not found.'};\n            allAssets[index] = { ...allAssets[index], ...assetData };\n        }\n\n        await writeAssets(allAssets);\n        revalidatePath('/assets');\n        return { success: true, data: assetData };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteAsset(assetId: string) {\n     try {\n        const allAssets = await readAssets();\n        const updatedAssets = allAssets.filter(asset => asset.id !== assetId);\n        \n        if (allAssets.length === updatedAssets.length) {\n            return { success: false, error: 'Asset not found.' };\n        }\n\n        await writeAssets(updatedAssets);\n        revalidatePath('/assets');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nfunction calculateDepreciation(asset: Asset): number {\n    const purchaseDate = new Date(asset.purchaseDate);\n    const now = new Date();\n    const ageInYears = (now.getTime() - purchaseDate.getTime()) / (1000 * 60 * 60 * 24 * 365.25);\n\n    if (ageInYears <= 0 || asset.usefulLife <= 0) {\n        return 0;\n    }\n\n    const effectiveAge = Math.min(ageInYears, asset.usefulLife);\n    const depreciableValue = asset.purchaseCost - asset.salvageValue;\n\n    if (depreciableValue <= 0) {\n        return 0;\n    }\n\n    let totalDepreciation = 0;\n\n    if (asset.depreciationMethod === 'Straight-Line') {\n        const annualDepreciation = depreciableValue / asset.usefulLife;\n        totalDepreciation = annualDepreciation * effectiveAge;\n    } else if (asset.depreciationMethod === 'Declining Balance') {\n        const rate = (1 / asset.usefulLife) * 2; // Double-declining balance\n        let bookValue = asset.purchaseCost;\n        for (let i = 0; i < Math.floor(effectiveAge); i++) {\n            const annualDepreciation = bookValue * rate;\n            bookValue -= annualDepreciation;\n        }\n        // Prorate for the partial year\n        if (effectiveAge % 1 !== 0) {\n             const partialYearDepreciation = bookValue * rate * (effectiveAge % 1);\n             bookValue -= partialYearDepreciation;\n        }\n        totalDepreciation = asset.purchaseCost - bookValue;\n    }\n\n    return Math.min(totalDepreciation, depreciableValue);\n}\n\nconst updateStatusSchema = z.object({\n    id: z.string(),\n    status: z.enum(['In Stock', 'Assigned', 'Damaged', 'Out for Repair', 'Retired']),\n    assignedTo: z.string().optional(),\n    notes: z.string().optional(),\n});\n\nexport async function updateAssetStatus(data: z.infer<typeof updateStatusSchema>) {\n    const validation = updateStatusSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allAssets = await readAssets();\n        const index = allAssets.findIndex(a => a.id === data.id);\n        if (index === -1) {\n            return { success: false, error: 'Asset not found.' };\n        }\n\n        const newHistoryEntry: AssetHistory = {\n            date: new Date().toISOString(),\n            status: data.status,\n            assignedTo: data.assignedTo,\n            notes: data.notes,\n        };\n\n        allAssets[index] = {\n            ...allAssets[index],\n            status: data.status,\n            assignedTo: data.assignedTo,\n            history: [...(allAssets[index].history || []), newHistoryEntry],\n        };\n\n        await writeAssets(allAssets);\n        revalidatePath('/assets');\n        return { success: true, data: allAssets[index] };\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n\n    "],"names":[],"mappings":";;;;;;;IA8BsB,YAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 3095, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/assets/assets-client.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { AssetList } from './asset-list';\nimport { AddAssetDialog } from './add-asset-dialog';\nimport { type Asset } from './schema';\nimport { getAssets } from './actions';\nimport { Button } from '@/components/ui/button';\nimport { Plus } from 'lucide-react';\n\nexport function AssetsClient({ initialAssets }: { initialAssets: Asset[] }) {\n  const [assets, setAssets] = useState(initialAssets);\n\n  const refreshAssets = async () => {\n    const updatedAssets = await getAssets();\n    setAssets(updatedAssets);\n  };\n\n  useEffect(() => {\n    setAssets(initialAssets);\n  }, [initialAssets]);\n\n  return (\n    <div>\n        <div className=\"flex justify-end mb-4 no-print\">\n             <AddAssetDialog onAssetAdded={refreshAssets}>\n                <Button>\n                    <Plus className=\"mr-2 h-4 w-4\" /> Add New Asset\n                </Button>\n            </AddAssetDialog>\n        </div>\n        <div id=\"printable-area\">\n          <AssetList initialAssets={assets} onAssetUpdate={refreshAssets} />\n        </div>\n    </div>\n  );\n}\n\n    "],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAEA;AACA;AACA;;;AARA;;;;;;;AAUO,SAAS,aAAa,KAA6C;QAA7C,EAAE,aAAa,EAA8B,GAA7C;;IAC3B,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAAC;IAErC,MAAM,gBAAgB;QACpB,MAAM,gBAAgB,MAAM,IAAA,4KAAS;QACrC,UAAU;IACZ;IAEA,IAAA,0KAAS;kCAAC;YACR,UAAU;QACZ;iCAAG;QAAC;KAAc;IAElB,qBACE,6LAAC;;0BACG,6LAAC;gBAAI,WAAU;0BACV,cAAA,6LAAC,oKAAc;oBAAC,cAAc;8BAC3B,cAAA,6LAAC,+IAAM;;0CACH,6LAAC,6MAAI;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;0BAI7C,6LAAC;gBAAI,IAAG;0BACN,cAAA,6LAAC,sJAAS;oBAAC,eAAe;oBAAQ,eAAe;;;;;;;;;;;;;;;;;AAI3D;GA1BgB;KAAA","debugId":null}}]
}