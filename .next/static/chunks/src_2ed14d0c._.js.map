{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/receipt-vouchers/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { receiptVoucherSchema, type ReceiptVoucher } from './schema';\nimport { type ReceiptBook } from '@/app/finance/book-management/schema';\nimport { type UserRole } from '@/app/admin/user-roles/schema';\nimport { addPayment, deletePayment } from '../payment/actions';\nimport { type Contract } from '@/app/tenancy/contract/schema';\nimport { type Invoice } from '@/app/tenancy/customer/invoice/schema';\nimport { type Property } from '@/app/property/properties/list/schema';\nimport { type Unit } from '@/app/property/units/schema';\nimport { type Room } from '@/app/property/rooms/schema';\n\nconst vouchersFilePath = path.join(process.cwd(), 'src/app/finance/receipt-vouchers/vouchers-data.json');\nconst receiptBooksFilePath = path.join(process.cwd(), 'src/app/finance/book-management/receipt-books-data.json');\nconst usersFilePath = path.join(process.cwd(), 'src/app/admin/user-roles/users.json');\nconst contractsFilePath = path.join(process.cwd(), 'src/app/tenancy/contract/contracts-data.json');\nconst invoicesFilePath = path.join(process.cwd(), 'src/app/tenancy/customer/invoice/invoices-data.json');\nconst propertiesFilePath = path.join(process.cwd(), 'src/app/property/properties/list/properties-data.json');\nconst unitsFilePath = path.join(process.cwd(), 'src/app/property/units/units-data.json');\nconst roomsFilePath = path.join(process.cwd(), 'src/app/property/rooms/rooms-data.json');\nconst paymentsFilePath = path.join(process.cwd(), 'src/app/finance/payment/payments-data.json');\n\n\nasync function readData<T>(filePath: string, defaultValue: T[] = []): Promise<T[]> {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await fs.writeFile(filePath, JSON.stringify(defaultValue, null, 2), 'utf-8');\n            return defaultValue;\n        }\n        throw error;\n    }\n}\n\nasync function writeVouchers(data: ReceiptVoucher[]) {\n    await fs.writeFile(vouchersFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getReceiptVouchers(): Promise<ReceiptVoucher[]> {\n    const vouchers = await readData<ReceiptVoucher>(vouchersFilePath, []);\n    return vouchers.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n}\n\nexport async function getReceiptVoucherLookups() {\n    const books = await readData<ReceiptBook>(receiptBooksFilePath);\n    const users = await readData<UserRole>(usersFilePath);\n    const allVouchers = await getReceiptVouchers();\n    const usedReceiptNos = new Set(allVouchers.map(v => v.receiptNo));\n    \n    const properties: {propertyData: Property}[] = await readData(propertiesFilePath);\n    const units: Unit[] = await readData(unitsFilePath);\n    const rooms: Room[] = await readData(roomsFilePath);\n    \n    const availableReceipts: { value: string, label: string, book: ReceiptBook }[] = [];\n    books.filter(b => b.status === 'Active').forEach(book => {\n        for (let i = book.receiptStartNo; i <= book.receiptEndNo; i++) {\n             const receiptNo = `${book.bookNo}-${i}`;\n             if (!usedReceiptNos.has(receiptNo)) {\n                availableReceipts.push({\n                    value: receiptNo,\n                    label: `Book: ${book.bookNo}, Receipt: ${i}`,\n                    book: book,\n                });\n            }\n        }\n    });\n\n    return {\n        receipts: availableReceipts,\n        collectors: users.map(u => ({ value: u.name, label: u.name })),\n        properties: properties.map(p => ({ value: p.propertyData.code, label: p.propertyData.name })),\n        units: units.map(u => ({ value: u.unitCode, label: u.unitCode, propertyCode: u.propertyCode })),\n        rooms: rooms.map(r => ({ value: r.roomCode, label: r.roomCode, propertyCode: r.propertyCode, unitCode: r.unitCode })),\n    }\n}\n\nconst batchFormSchema = z.object({\n  vouchers: z.array(receiptVoucherSchema.omit({ id: true, createdBy: true })),\n});\n\nexport async function saveReceiptVoucherBatch(data: z.infer<typeof batchFormSchema>, createdBy: string) {\n    const validation = batchFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: validation.error.errors.map(e => e.message).join(', ') };\n    }\n\n    try {\n        const allVouchers = await getReceiptVouchers();\n        const newVouchers: ReceiptVoucher[] = [];\n        \n        for (const voucherData of validation.data.vouchers) {\n            const voucherExists = allVouchers.some(v => v.receiptNo === voucherData.receiptNo);\n            if (voucherExists) {\n                console.warn(`Skipping duplicate receipt number: ${voucherData.receiptNo}`);\n                continue;\n            }\n\n            const newVoucher: ReceiptVoucher = {\n                ...voucherData,\n                id: `RV-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`,\n                createdBy,\n            };\n            \n            const paymentResult = await addPayment({\n                type: 'Receipt',\n                date: newVoucher.date,\n                partyType: newVoucher.partyType,\n                partyName: newVoucher.partyName,\n                amount: newVoucher.amount,\n                paymentMethod: newVoucher.paymentMethod,\n                bankAccountId: newVoucher.bankAccountId,\n                paymentFrom: newVoucher.bankAccountId ? 'Bank' : 'Petty Cash',\n                referenceType: 'Receipt Book',\n                referenceNo: newVoucher.receiptNo,\n                description: `Payment received via Receipt Voucher #${newVoucher.receiptNo}. Collected by ${newVoucher.collectedBy}.`,\n                createdByUser: createdBy,\n                status: 'Received',\n                property: newVoucher.property,\n                unitCode: newVoucher.unitCode,\n                roomCode: newVoucher.roomCode,\n            });\n\n            if (!paymentResult.success) {\n                console.error(`Failed to create financial transaction for receipt ${newVoucher.receiptNo}: ${paymentResult.error}`);\n                continue;\n            }\n\n            newVouchers.push(newVoucher);\n        }\n\n        if (newVouchers.length === 0) {\n            return { success: false, error: \"No valid new vouchers to save. They might be duplicates.\" };\n        }\n\n        allVouchers.push(...newVouchers);\n        await writeVouchers(allVouchers);\n\n        revalidatePath('/finance/receipt-vouchers');\n        revalidatePath('/finance/payment');\n        revalidatePath('/finance/book-management');\n\n        return { success: true, count: newVouchers.length };\n    } catch (error) {\n         return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nasync function reverseReceiptBookUsage(receiptNo: string) {\n    try {\n        const books = await readData<ReceiptBook>(receiptBooksFilePath);\n        const [bookNo] = receiptNo.split('-');\n        if (!bookNo) return;\n\n        const bookIndex = books.findIndex(b => b.bookNo === bookNo);\n        if (bookIndex !== -1) {\n            books[bookIndex].leafsUsed = Math.max(0, (books[bookIndex].leafsUsed || 0) - 1);\n            if (books[bookIndex].status === 'Finished') {\n                books[bookIndex].status = 'Active';\n            }\n            await fs.writeFile(receiptBooksFilePath, JSON.stringify(books, null, 2), 'utf-8');\n        }\n    } catch (error) {\n        console.error(`Failed to reverse receipt book usage for receipt #${receiptNo}`, error);\n    }\n}\n\n\nexport async function deleteReceiptVoucher(voucherId: string) {\n    const allVouchers = await getReceiptVouchers();\n    const voucherToDelete = allVouchers.find(v => v.id === voucherId);\n    \n    if (!voucherToDelete) {\n        return { success: false, error: \"Receipt voucher not found.\" };\n    }\n\n    const allPayments = await readData<Payment>(paymentsFilePath);\n    const associatedPayment = allPayments.find(p => p.referenceNo === voucherToDelete.receiptNo);\n\n    if (associatedPayment) {\n        const deleteResult = await deletePayment(associatedPayment.id!);\n        if (!deleteResult.success) {\n            return { success: false, error: `Could not delete associated payment: ${deleteResult.error}` };\n        }\n    }\n    \n    await reverseReceiptBookUsage(voucherToDelete.receiptNo);\n\n    const updatedVouchers = allVouchers.filter(v => v.id !== voucherId);\n    await writeVouchers(updatedVouchers);\n\n    revalidatePath('/finance/receipt-vouchers');\n    revalidatePath('/finance/payment');\n    revalidatePath('/finance/book-management');\n\n    return { success: true };\n}\n\n\nexport async function getDueAmountForParty(partyType: 'Tenant' | 'Customer', partyCode: string) {\n    let totalDue = 0;\n    let property = '', unitCode = '', roomCode = '';\n\n    if (partyType === 'Tenant') {\n        const contracts = await readData<Contract>(contractsFilePath);\n        const tenantContracts = contracts.filter(c => c.tenantCode === partyCode && (c.status === 'New' || c.status === 'Renew'));\n        if (tenantContracts.length > 0) {\n            const latestContract = tenantContracts.sort((a,b) => new Date(b.endDate).getTime() - new Date(a.endDate).getTime())[0];\n            property = latestContract.property || '';\n            unitCode = latestContract.unitCode || '';\n            roomCode = latestContract.roomCode || '';\n            latestContract.paymentSchedule.forEach(p => {\n                if (p.status === 'unpaid') {\n                    totalDue += p.amount;\n                }\n            });\n        }\n    } else if (partyType === 'Customer') {\n        const invoices = await readData<Invoice>(invoicesFilePath);\n        const customerInvoices = invoices.filter(i => i.customerCode === partyCode && i.status !== 'Paid' && i.status !== 'Cancelled');\n        if (customerInvoices.length > 0) {\n            const firstUnpaidInvoice = customerInvoices.sort((a,b) => new Date(a.dueDate).getTime() - new Date(b.dueDate).getTime())[0];\n             property = firstUnpaidInvoice.property || '';\n             unitCode = firstUnpaidInvoice.unitCode || '';\n             roomCode = firstUnpaidInvoice.roomCode || '';\n        }\n        customerInvoices.forEach(i => {\n            totalDue += i.total - (i.amountPaid || 0);\n        });\n    }\n    \n    return { totalDue, property, unitCode, roomCode };\n}\n"],"names":[],"mappings":";;;;;;;IA+CsB,qBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,sLAAyB;AAE7C,MAAM,qBAAqB,yLAA4B;AAEvD,MAAM,oBAAoB,wLAA2B;AAErD,MAAM,mCAAqB,2KAAgB,CAGzC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,yLAA4B;QAC3B,WAAW,IAAA,4HAAE,EACX,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;;KAVH;AAaN,mBAAmB,WAAW,GAAG,yLAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,2KAAgB,OAGzC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,yLAA4B;gBAC3B,KAAK;gBACL,WAAW,IAAA,4HAAE,EACX,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,yLAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB;QAAC,EACzB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,oDACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB;QAAC,EACzB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,2KAAgB,OAGvC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,uLAA0B;QACzB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;;;AAGb,iBAAiB,WAAW,GAAG,uLAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,2KAAgB,OAG7C,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,6LAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,uBAAuB,WAAW,GAChC,6LAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,2KAAgB,OAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,wLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,IAAA,uJAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,wLAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,2KAAgB,QAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,wLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,IAAA,uJAAc,EAAC;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,wLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/receipt-vouchers/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { receiptVoucherSchema, type ReceiptVoucher } from './schema';\nimport { type ReceiptBook } from '@/app/finance/book-management/schema';\nimport { type UserRole } from '@/app/admin/user-roles/schema';\nimport { addPayment, deletePayment } from '../payment/actions';\nimport { type Contract } from '@/app/tenancy/contract/schema';\nimport { type Invoice } from '@/app/tenancy/customer/invoice/schema';\nimport { type Property } from '@/app/property/properties/list/schema';\nimport { type Unit } from '@/app/property/units/schema';\nimport { type Room } from '@/app/property/rooms/schema';\n\nconst vouchersFilePath = path.join(process.cwd(), 'src/app/finance/receipt-vouchers/vouchers-data.json');\nconst receiptBooksFilePath = path.join(process.cwd(), 'src/app/finance/book-management/receipt-books-data.json');\nconst usersFilePath = path.join(process.cwd(), 'src/app/admin/user-roles/users.json');\nconst contractsFilePath = path.join(process.cwd(), 'src/app/tenancy/contract/contracts-data.json');\nconst invoicesFilePath = path.join(process.cwd(), 'src/app/tenancy/customer/invoice/invoices-data.json');\nconst propertiesFilePath = path.join(process.cwd(), 'src/app/property/properties/list/properties-data.json');\nconst unitsFilePath = path.join(process.cwd(), 'src/app/property/units/units-data.json');\nconst roomsFilePath = path.join(process.cwd(), 'src/app/property/rooms/rooms-data.json');\nconst paymentsFilePath = path.join(process.cwd(), 'src/app/finance/payment/payments-data.json');\n\n\nasync function readData<T>(filePath: string, defaultValue: T[] = []): Promise<T[]> {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await fs.writeFile(filePath, JSON.stringify(defaultValue, null, 2), 'utf-8');\n            return defaultValue;\n        }\n        throw error;\n    }\n}\n\nasync function writeVouchers(data: ReceiptVoucher[]) {\n    await fs.writeFile(vouchersFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getReceiptVouchers(): Promise<ReceiptVoucher[]> {\n    const vouchers = await readData<ReceiptVoucher>(vouchersFilePath, []);\n    return vouchers.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n}\n\nexport async function getReceiptVoucherLookups() {\n    const books = await readData<ReceiptBook>(receiptBooksFilePath);\n    const users = await readData<UserRole>(usersFilePath);\n    const allVouchers = await getReceiptVouchers();\n    const usedReceiptNos = new Set(allVouchers.map(v => v.receiptNo));\n    \n    const properties: {propertyData: Property}[] = await readData(propertiesFilePath);\n    const units: Unit[] = await readData(unitsFilePath);\n    const rooms: Room[] = await readData(roomsFilePath);\n    \n    const availableReceipts: { value: string, label: string, book: ReceiptBook }[] = [];\n    books.filter(b => b.status === 'Active').forEach(book => {\n        for (let i = book.receiptStartNo; i <= book.receiptEndNo; i++) {\n             const receiptNo = `${book.bookNo}-${i}`;\n             if (!usedReceiptNos.has(receiptNo)) {\n                availableReceipts.push({\n                    value: receiptNo,\n                    label: `Book: ${book.bookNo}, Receipt: ${i}`,\n                    book: book,\n                });\n            }\n        }\n    });\n\n    return {\n        receipts: availableReceipts,\n        collectors: users.map(u => ({ value: u.name, label: u.name })),\n        properties: properties.map(p => ({ value: p.propertyData.code, label: p.propertyData.name })),\n        units: units.map(u => ({ value: u.unitCode, label: u.unitCode, propertyCode: u.propertyCode })),\n        rooms: rooms.map(r => ({ value: r.roomCode, label: r.roomCode, propertyCode: r.propertyCode, unitCode: r.unitCode })),\n    }\n}\n\nconst batchFormSchema = z.object({\n  vouchers: z.array(receiptVoucherSchema.omit({ id: true, createdBy: true })),\n});\n\nexport async function saveReceiptVoucherBatch(data: z.infer<typeof batchFormSchema>, createdBy: string) {\n    const validation = batchFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: validation.error.errors.map(e => e.message).join(', ') };\n    }\n\n    try {\n        const allVouchers = await getReceiptVouchers();\n        const newVouchers: ReceiptVoucher[] = [];\n        \n        for (const voucherData of validation.data.vouchers) {\n            const voucherExists = allVouchers.some(v => v.receiptNo === voucherData.receiptNo);\n            if (voucherExists) {\n                console.warn(`Skipping duplicate receipt number: ${voucherData.receiptNo}`);\n                continue;\n            }\n\n            const newVoucher: ReceiptVoucher = {\n                ...voucherData,\n                id: `RV-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`,\n                createdBy,\n            };\n            \n            const paymentResult = await addPayment({\n                type: 'Receipt',\n                date: newVoucher.date,\n                partyType: newVoucher.partyType,\n                partyName: newVoucher.partyName,\n                amount: newVoucher.amount,\n                paymentMethod: newVoucher.paymentMethod,\n                bankAccountId: newVoucher.bankAccountId,\n                paymentFrom: newVoucher.bankAccountId ? 'Bank' : 'Petty Cash',\n                referenceType: 'Receipt Book',\n                referenceNo: newVoucher.receiptNo,\n                description: `Payment received via Receipt Voucher #${newVoucher.receiptNo}. Collected by ${newVoucher.collectedBy}.`,\n                createdByUser: createdBy,\n                status: 'Received',\n                property: newVoucher.property,\n                unitCode: newVoucher.unitCode,\n                roomCode: newVoucher.roomCode,\n            });\n\n            if (!paymentResult.success) {\n                console.error(`Failed to create financial transaction for receipt ${newVoucher.receiptNo}: ${paymentResult.error}`);\n                continue;\n            }\n\n            newVouchers.push(newVoucher);\n        }\n\n        if (newVouchers.length === 0) {\n            return { success: false, error: \"No valid new vouchers to save. They might be duplicates.\" };\n        }\n\n        allVouchers.push(...newVouchers);\n        await writeVouchers(allVouchers);\n\n        revalidatePath('/finance/receipt-vouchers');\n        revalidatePath('/finance/payment');\n        revalidatePath('/finance/book-management');\n\n        return { success: true, count: newVouchers.length };\n    } catch (error) {\n         return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nasync function reverseReceiptBookUsage(receiptNo: string) {\n    try {\n        const books = await readData<ReceiptBook>(receiptBooksFilePath);\n        const [bookNo] = receiptNo.split('-');\n        if (!bookNo) return;\n\n        const bookIndex = books.findIndex(b => b.bookNo === bookNo);\n        if (bookIndex !== -1) {\n            books[bookIndex].leafsUsed = Math.max(0, (books[bookIndex].leafsUsed || 0) - 1);\n            if (books[bookIndex].status === 'Finished') {\n                books[bookIndex].status = 'Active';\n            }\n            await fs.writeFile(receiptBooksFilePath, JSON.stringify(books, null, 2), 'utf-8');\n        }\n    } catch (error) {\n        console.error(`Failed to reverse receipt book usage for receipt #${receiptNo}`, error);\n    }\n}\n\n\nexport async function deleteReceiptVoucher(voucherId: string) {\n    const allVouchers = await getReceiptVouchers();\n    const voucherToDelete = allVouchers.find(v => v.id === voucherId);\n    \n    if (!voucherToDelete) {\n        return { success: false, error: \"Receipt voucher not found.\" };\n    }\n\n    const allPayments = await readData<Payment>(paymentsFilePath);\n    const associatedPayment = allPayments.find(p => p.referenceNo === voucherToDelete.receiptNo);\n\n    if (associatedPayment) {\n        const deleteResult = await deletePayment(associatedPayment.id!);\n        if (!deleteResult.success) {\n            return { success: false, error: `Could not delete associated payment: ${deleteResult.error}` };\n        }\n    }\n    \n    await reverseReceiptBookUsage(voucherToDelete.receiptNo);\n\n    const updatedVouchers = allVouchers.filter(v => v.id !== voucherId);\n    await writeVouchers(updatedVouchers);\n\n    revalidatePath('/finance/receipt-vouchers');\n    revalidatePath('/finance/payment');\n    revalidatePath('/finance/book-management');\n\n    return { success: true };\n}\n\n\nexport async function getDueAmountForParty(partyType: 'Tenant' | 'Customer', partyCode: string) {\n    let totalDue = 0;\n    let property = '', unitCode = '', roomCode = '';\n\n    if (partyType === 'Tenant') {\n        const contracts = await readData<Contract>(contractsFilePath);\n        const tenantContracts = contracts.filter(c => c.tenantCode === partyCode && (c.status === 'New' || c.status === 'Renew'));\n        if (tenantContracts.length > 0) {\n            const latestContract = tenantContracts.sort((a,b) => new Date(b.endDate).getTime() - new Date(a.endDate).getTime())[0];\n            property = latestContract.property || '';\n            unitCode = latestContract.unitCode || '';\n            roomCode = latestContract.roomCode || '';\n            latestContract.paymentSchedule.forEach(p => {\n                if (p.status === 'unpaid') {\n                    totalDue += p.amount;\n                }\n            });\n        }\n    } else if (partyType === 'Customer') {\n        const invoices = await readData<Invoice>(invoicesFilePath);\n        const customerInvoices = invoices.filter(i => i.customerCode === partyCode && i.status !== 'Paid' && i.status !== 'Cancelled');\n        if (customerInvoices.length > 0) {\n            const firstUnpaidInvoice = customerInvoices.sort((a,b) => new Date(a.dueDate).getTime() - new Date(b.dueDate).getTime())[0];\n             property = firstUnpaidInvoice.property || '';\n             unitCode = firstUnpaidInvoice.unitCode || '';\n             roomCode = firstUnpaidInvoice.roomCode || '';\n        }\n        customerInvoices.forEach(i => {\n            totalDue += i.total - (i.amountPaid || 0);\n        });\n    }\n    \n    return { totalDue, property, unitCode, roomCode };\n}\n"],"names":[],"mappings":";;;;;;;IAgLsB,uBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/receipt-vouchers/columns.tsx"],"sourcesContent":["\n\n'use client';\n\nimport { useState } from 'react';\nimport { ColumnDef } from '@tanstack/react-table';\nimport { Button } from '@/components/ui/button';\nimport { ArrowUpDown, MoreHorizontal, Pencil, Trash2 } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { type ReceiptVoucher } from './schema';\nimport { useCurrency } from '@/context/currency-context';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { useToast } from '@/hooks/use-toast';\nimport { useRouter } from 'next/navigation';\nimport { deleteReceiptVoucher } from './actions';\n\nconst ActionsCell = ({ row }: { row: { original: ReceiptVoucher } }) => {\n    const { toast } = useToast();\n    const router = useRouter();\n    const [isDeleting, setIsDeleting] = useState(false);\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n    const voucher = row.original;\n\n    const handleDelete = async () => {\n        setIsDeleting(true);\n        const result = await deleteReceiptVoucher(voucher.id);\n        if (result.success) {\n            toast({ title: 'Voucher Deleted', description: 'The receipt voucher has been deleted successfully.' });\n            router.refresh();\n        } else {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n        }\n        setIsDeleting(false);\n        setIsDeleteDialogOpen(false);\n    };\n\n    return (\n        <>\n            <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n                        <AlertDialogDescription>\n                            This will permanently delete voucher {voucher.receiptNo} and reverse any associated financial transactions.\n                        </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel>Cancel</AlertDialogCancel>\n                        <AlertDialogAction onClick={handleDelete} disabled={isDeleting} className=\"bg-destructive hover:bg-destructive/90\">\n                            {isDeleting ? 'Deleting...' : 'Delete'}\n                        </AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n            <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                    <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                        <span className=\"sr-only\">Open menu</span>\n                        <MoreHorizontal className=\"h-4 w-4\" />\n                    </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\">\n                    <DropdownMenuItem disabled>\n                        <Pencil className=\"mr-2 h-4 w-4\" /> Edit\n                    </DropdownMenuItem>\n                    <DropdownMenuItem className=\"text-destructive\" onClick={() => setIsDeleteDialogOpen(true)}>\n                        <Trash2 className=\"mr-2 h-4 w-4\" /> Delete\n                    </DropdownMenuItem>\n                </DropdownMenuContent>\n            </DropdownMenu>\n        </>\n    )\n}\n\nexport const columns: ColumnDef<ReceiptVoucher>[] = [\n  {\n    accessorKey: 'receiptNo',\n    header: 'Receipt No',\n  },\n  {\n    accessorKey: 'date',\n    header: ({ column }) => (\n      <Button\n        variant=\"ghost\"\n        onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n      >\n        Date\n        <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n      </Button>\n    ),\n    cell: ({ row }) => format(new Date(row.original.date), 'PP'),\n  },\n  {\n    accessorKey: 'partyName',\n    header: 'Received From',\n  },\n   {\n    accessorKey: 'collectedBy',\n    header: 'Collected By',\n  },\n  {\n    accessorKey: 'paymentMethod',\n    header: 'Method',\n  },\n  {\n    accessorKey: 'amount',\n    header: () => <div className=\"text-right\">Amount</div>,\n    cell: function Cell({ row }) {\n        const { formatCurrency } = useCurrency();\n        return <div className=\"text-right font-medium\">{formatCurrency(row.original.amount)}</div>;\n    },\n  },\n  {\n    id: 'actions',\n    cell: ActionsCell,\n  }\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAG5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAM,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,2KAAgB,OAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,6DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,2KAAgB,QAGnC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,IAAA,4HAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 731, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/receipt-vouchers/data-table.tsx"],"sourcesContent":["\n\n'use client';\n\nimport * as React from 'react';\nimport {\n  ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n  getPaginationRowModel,\n  getFilteredRowModel,\n  getSortedRowModel,\n  ColumnFiltersState,\n  SortingState,\n} from '@tanstack/react-table';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    onSortingChange: setSorting,\n    getSortedRowModel: getSortedRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    getFilteredRowModel: getFilteredRowModel(),\n    state: {\n        sorting,\n        columnFilters,\n    },\n  });\n\n  return (\n    <div className=\"rounded-md border p-4\">\n       <div className=\"flex items-center py-4\">\n        <Input\n          placeholder=\"Filter by party name...\"\n          value={(table.getColumn('partyName')?.getFilterValue() as string) ?? ''}\n          onChange={(event) =>\n            table.getColumn('partyName')?.setFilterValue(event.target.value)\n          }\n          className=\"max-w-sm\"\n        />\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n            <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n                <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                    return (\n                    <TableHead key={header.id}>\n                        {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                            )}\n                    </TableHead>\n                    );\n                })}\n                </TableRow>\n            ))}\n            </TableHeader>\n            <TableBody>\n            {table.getRowModel().rows?.length ? (\n                table.getRowModel().rows.map((row) => (\n                <TableRow\n                    key={row.id}\n                    data-state={row.getIsSelected() && 'selected'}\n                >\n                    {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                        {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                        )}\n                    </TableCell>\n                    ))}\n                </TableRow>\n                ))\n            ) : (\n                <TableRow>\n                <TableCell\n                    colSpan={columns.length}\n                    className=\"h-24 text-center\"\n                >\n                    No receipt vouchers found.\n                </TableCell>\n                </TableRow>\n            )}\n            </TableBody>\n        </Table>\n      </div>\n       <div className=\"flex items-center justify-end space-x-2 py-4\">\n            <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n            >\n            Previous\n            </Button>\n            <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n            >\n            Next\n            </Button>\n        </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAIA;AACA;AAAA;AAYA;AAQA;AACA;;;AAxBA;;;;;;AA+BO,SAAS,UAAyB,KAGT;QAHS,EACvC,OAAO,EACP,IAAI,EAC0B,GAHS;QA2BvB,kBA4BL;;IAnDX,MAAM,CAAC,SAAS,WAAW,GAAG,yKAAc,CAAe,EAAE;IAC7D,MAAM,CAAC,eAAe,iBAAiB,GAAG,yKAAc,CAAqB,EAAE;IAE/E,MAAM,QAAQ,IAAA,0MAAa,EAAC;QAC1B;QACA;QACA,iBAAiB,IAAA,2LAAe;QAChC,uBAAuB,IAAA,iMAAqB;QAC5C,iBAAiB;QACjB,mBAAmB,IAAA,6LAAiB;QACpC,uBAAuB;QACvB,qBAAqB,IAAA,+LAAmB;QACxC,OAAO;YACH;YACA;QACJ;IACF;QAOe;IALf,qBACE,6LAAC;QAAI,WAAU;;0BACZ,6LAAC;gBAAI,WAAU;0BACd,cAAA,6LAAC,6IAAK;oBACJ,aAAY;oBACZ,OAAO,CAAA,OAAA,CAAC,mBAAA,MAAM,SAAS,CAAC,YAAwC,cAAxD,uCAAA,iBAA8B,cAAc,gBAA7C,kBAAA,OAA8D;oBACrE,UAAU,CAAC;4BACT;gCAAA,mBAAA,MAAM,SAAS,CAAC,0BAAhB,uCAAA,iBAA8B,cAAc,CAAC,MAAM,MAAM,CAAC,KAAK;;oBAEjE,WAAU;;;;;;;;;;;0BAGd,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,6IAAK;;sCACF,6LAAC,mJAAW;sCACX,MAAM,eAAe,GAAG,GAAG,CAAC,CAAC,4BAC1B,6LAAC,gJAAQ;8CACR,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC;wCACtB,qBACA,6LAAC,iJAAS;sDACL,OAAO,aAAa,GACnB,OACA,IAAA,uMAAU,EACR,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,EAC9B,OAAO,UAAU;2CALT,OAAO,EAAE;;;;;oCAS7B;mCAZe,YAAY,EAAE;;;;;;;;;;sCAgBjC,6LAAC,iJAAS;sCACT,EAAA,0BAAA,MAAM,WAAW,GAAG,IAAI,cAAxB,8CAAA,wBAA0B,MAAM,IAC7B,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,oBAC9B,6LAAC,gJAAQ;oCAEL,cAAY,IAAI,aAAa,MAAM;8CAElC,IAAI,eAAe,GAAG,GAAG,CAAC,CAAC,qBAC5B,6LAAC,iJAAS;sDACL,IAAA,uMAAU,EACX,KAAK,MAAM,CAAC,SAAS,CAAC,IAAI,EAC1B,KAAK,UAAU;2CAHH,KAAK,EAAE;;;;;mCAJlB,IAAI,EAAE;;;;0DAcf,6LAAC,gJAAQ;0CACT,cAAA,6LAAC,iJAAS;oCACN,SAAS,QAAQ,MAAM;oCACvB,WAAU;8CACb;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQV,6LAAC;gBAAI,WAAU;;kCACV,6LAAC,+IAAM;wBACP,SAAQ;wBACR,MAAK;wBACL,SAAS,IAAM,MAAM,YAAY;wBACjC,UAAU,CAAC,MAAM,kBAAkB;kCAClC;;;;;;kCAGD,6LAAC,+IAAM;wBACP,SAAQ;wBACR,MAAK;wBACL,SAAS,IAAM,MAAM,QAAQ;wBAC7B,UAAU,CAAC,MAAM,cAAc;kCAC9B;;;;;;;;;;;;;;;;;;AAMb;GAxGgB;;QAOA,0MAAa;;;KAPb","debugId":null}},
    {"offset": {"line": 917, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/receipt-vouchers/receipt-vouchers-list.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { getReceiptVouchers } from './actions';\nimport { columns } from './columns';\nimport { DataTable } from './data-table';\nimport { Button } from '@/components/ui/button';\nimport { Plus } from 'lucide-react';\nimport Link from 'next/link';\n\nexport function ReceiptVouchersList() {\n  const [vouchers, setVouchers] = useState<any[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getReceiptVouchers().then(data => {\n      setVouchers(data);\n      setIsLoading(false);\n    });\n  }, []);\n  \n  return (\n    <div className=\"container mx-auto py-10\">\n       <div className=\"flex justify-between items-center mb-6\">\n        <div>\n            <h1 className=\"text-3xl font-bold font-headline\">Receipt Vouchers</h1>\n            <p className=\"text-muted-foreground\">\n                Create and manage all payment receipt vouchers.\n            </p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n            <Button asChild>\n                <Link href=\"/finance/receipt-vouchers/add-single\">\n                    <Plus className=\"mr-2 h-4 w-4\" /> Create Single Voucher\n                </Link>\n            </Button>\n             <Button asChild variant=\"outline\">\n                <Link href=\"/finance/receipt-vouchers/add\">\n                    <Plus className=\"mr-2 h-4 w-4\" /> Create Batch Voucher\n                </Link>\n            </Button>\n        </div>\n      </div>\n      <DataTable columns={columns} data={vouchers} />\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;AAUO,SAAS;;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAQ,EAAE;IAClD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;IAE3C,IAAA,0KAAS;yCAAC;YACR,IAAA,6MAAkB,IAAG,IAAI;iDAAC,CAAA;oBACxB,YAAY;oBACZ,aAAa;gBACf;;QACF;wCAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;;0BACZ,6LAAC;gBAAI,WAAU;;kCACd,6LAAC;;0CACG,6LAAC;gCAAG,WAAU;0CAAmC;;;;;;0CACjD,6LAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;kCAIzC,6LAAC;wBAAI,WAAU;;0CACX,6LAAC,+IAAM;gCAAC,OAAO;0CACX,cAAA,6LAAC,0KAAI;oCAAC,MAAK;;sDACP,6LAAC,6MAAI;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;0CAGxC,6LAAC,+IAAM;gCAAC,OAAO;gCAAC,SAAQ;0CACrB,cAAA,6LAAC,0KAAI;oCAAC,MAAK;;sDACP,6LAAC,6MAAI;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;;;;;;;;;;;;;0BAK/C,6LAAC,8KAAS;gBAAC,SAAS,sKAAO;gBAAE,MAAM;;;;;;;;;;;;AAGzC;GApCgB;KAAA","debugId":null}},
    {"offset": {"line": 1073, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/receipt-vouchers/receipt-vouchers-client.tsx"],"sourcesContent":["\n'use client';\n\nimport { ReceiptVouchersList } from \"./receipt-vouchers-list\";\n\nexport function ReceiptVouchersClient() {\n\n  return (\n    <ReceiptVouchersList />\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AAFA;;;AAIO,SAAS;IAEd,qBACE,6LAAC,sMAAmB;;;;;AAExB;KALgB","debugId":null}},
    {"offset": {"line": 1099, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/receipt-vouchers/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { ReceiptVouchersClient } from './receipt-vouchers-client';\n\nexport default function ReceiptVouchersPage() {\n    return <ReceiptVouchersClient />\n}\n"],"names":[],"mappings":";;;;;AAGA;AAFA;;;AAIe,SAAS;IACpB,qBAAO,6LAAC,0MAAqB;;;;;AACjC;KAFwB","debugId":null}}]
}