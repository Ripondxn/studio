{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,2KAAgB,MAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,+KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,oLAA2B;YAC1B,WAAW,IAAA,4HAAE,EAAC;sBAEd,cAAA,6LAAC,gNAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,+KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,sLAAyB;AAE7C,MAAM,qBAAqB,yLAA4B;AAEvD,MAAM,oBAAoB,wLAA2B;AAErD,MAAM,mCAAqB,2KAAgB,CAGzC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,yLAA4B;QAC3B,WAAW,IAAA,4HAAE,EACX,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;;KAVH;AAaN,mBAAmB,WAAW,GAAG,yLAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,2KAAgB,OAGzC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,yLAA4B;gBAC3B,KAAK;gBACL,WAAW,IAAA,4HAAE,EACX,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,yLAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB;QAAC,EACzB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,oDACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB;QAAC,EACzB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,2KAAgB,OAGvC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,uLAA0B;QACzB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;;;AAGb,iBAAiB,WAAW,GAAG,uLAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,2KAAgB,OAG7C,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,6LAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,uBAAuB,WAAW,GAChC,6LAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,2KAAgB,OAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,wLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,IAAA,uJAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,wLAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,2KAAgB,QAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,wLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,IAAA,uJAAc,EAAC;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,wLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/contract/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { contractSchema, type Contract } from './schema';\nimport { type Unit } from '@/app/property/units/schema';\nimport { type Floor } from '@/app/property/floors/schema';\nimport { type Room } from '@/app/property/rooms/schema';\nimport { type Tenant } from '@/app/tenancy/tenants/schema';\nimport { addCheque } from '@/app/finance/cheque-deposit/actions';\nimport { differenceInDays, parseISO, addDays } from 'date-fns';\nimport { getUnits } from '@/app/property/units/actions';\nimport { getRooms } from '@/app/property/rooms/actions';\n\n\nconst contractsFilePath = path.join(process.cwd(), 'src/app/tenancy/contract/contracts-data.json');\nconst propertiesFilePath = path.join(process.cwd(), 'src/app/property/properties/list/properties-data.json');\nconst tenantsFilePath = path.join(process.cwd(), 'src/app/tenancy/tenants/tenants-data.json');\n\n\nasync function readData(filePath: string) {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function readContracts(): Promise<Contract[]> {\n    try {\n        await fs.access(contractsFilePath);\n        const data = await fs.readFile(contractsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeContracts(data: Contract[]) {\n    await fs.writeFile(contractsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getAllContracts() {\n    return await readContracts();\n}\n\n\nasync function createChequesFromContract(contract: Contract) {\n    if (contract.paymentMode !== 'cheque' || !contract.paymentSchedule) {\n        return;\n    }\n\n    for (const installment of contract.paymentSchedule) {\n        if (installment.chequeNo) {\n            await addCheque({\n                chequeNo: installment.chequeNo,\n                chequeDate: installment.dueDate,\n                amount: installment.amount,\n                bankName: installment.bankName || '',\n                status: 'In Hand',\n                type: 'Incoming',\n                partyType: 'Tenant',\n                partyName: contract.tenantCode,\n                property: contract.property,\n                unitCode: contract.unitCode,\n                roomCode: contract.roomCode,\n                contractNo: contract.contractNo,\n                remarks: `Installment ${installment.installment}`,\n            });\n        }\n    }\n}\n\nexport async function saveContractData(data: Omit<Contract, 'id'> & { id?: string, isAutoContractNo?: boolean }, isNewRecord: boolean) {\n    const { isAutoContractNo, ...contractData } = data;\n    const validation = contractSchema.omit({id: true}).safeParse(contractData);\n\n    if (!validation.success) {\n        const errors = validation.error.errors.map(e => e.message).join(', ');\n        return { success: false, error: errors };\n    }\n\n    try {\n        const allContracts = await readContracts();\n        const validatedData = validation.data;\n        \n        let savedContract: Contract;\n        \n        if (isNewRecord) {\n             let newContractNo = validatedData.contractNo;\n             if (isAutoContractNo || !newContractNo) {\n                newContractNo = await getNextContractNumber();\n             } else {\n                const contractExists = allContracts.some(c => c.contractNo === newContractNo);\n                if (contractExists) {\n                    return { success: false, error: `A contract with number \"${newContractNo}\" already exists.`};\n                }\n             }\n\n             const newContract: Contract = {\n                ...validatedData,\n                contractNo: newContractNo,\n                id: `CON-${Date.now()}`,\n            };\n            allContracts.push(newContract);\n            savedContract = newContract;\n        } else {\n            const index = allContracts.findIndex(c => c.id === data.id);\n            if (index !== -1) {\n                allContracts[index] = { ...allContracts[index], ...validatedData };\n                savedContract = allContracts[index];\n            } else {\n                 return { success: false, error: `Contract with ID \"${data.id}\" not found.` };\n            }\n        }\n        \n        await writeContracts(allContracts);\n        \n        await createChequesFromContract(savedContract);\n        \n        revalidatePath('/tenancy/contracts');\n        revalidatePath('/finance/cheque-deposit');\n        revalidatePath(`/tenancy/contract?id=${data.id}`);\n        return { success: true, data: savedContract };\n\n    } catch (error) {\n        console.error('Failed to save contract:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nasync function getNextContractNumber() {\n    const allContracts = await readContracts();\n    let maxNum = 0;\n    allContracts.forEach(c => {\n        const match = c.contractNo.match(/^TC-(\\d+)$/);\n        if (match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `TC-${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\nexport async function findContract(query: { unitCode?: string, tenantName?: string, contractId?: string }): Promise<{ success: boolean; data?: Contract; error?: string }> {\n    try {\n        const allContracts = await readContracts();\n        let foundContract: Contract | undefined;\n\n        if (query.contractId === 'new') {\n            const newContractNo = await getNextContractNumber();\n            return { success: true, data: { ...initialContractState, contractNo: newContractNo } };\n        }\n        \n        if (query.contractId) {\n            foundContract = allContracts.find(c => c.id === query.contractId);\n        } else if (query.unitCode) {\n            foundContract = allContracts.find(c => c.unitCode === query.unitCode);\n        } else if (query.tenantName) {\n            foundContract = allContracts.find(c => c.tenantName.toLowerCase() === query.tenantName.toLowerCase());\n        }\n\n        if (foundContract) {\n            return { success: true, data: foundContract };\n        } else {\n            return { success: false, error: 'Contract not found.' };\n        }\n    } catch (error) {\n        console.error('Failed to find contract:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n\n\nconst initialContractState: Contract = {\n    id: '',\n    contractNo: '',\n    contractDate: '',\n    unitCode: '',\n    roomCode: '',\n    property: '',\n    tenantCode: '',\n    tenantName: '',\n    mobile: '',\n    email: '',\n    address: '',\n    startDate: '',\n    endDate: '',\n    totalRent: 0,\n    paymentMode: 'cash',\n    status: 'New',\n    terminationDate: '',\n    rentBasedOn: 'Monthly',\n    paymentFrequency: 'Monthly',\n    numberOfPayments: 1,\n    gracePeriod: 0,\n    paymentSchedule: [],\n    terms: '',\n    tawtheeqRegistrationNo: '',\n    tawtheeqStatus: 'Not Registered',\n    tawtheeqRegistrationDate: '',\n};\n\nexport async function deleteContract(contractId: string) {\n    try {\n        const allContracts = await readContracts();\n        const updatedContracts = allContracts.filter(c => c.id !== contractId);\n\n        if (allContracts.length === updatedContracts.length) {\n            return { success: false, error: 'Contract not found.' };\n        }\n        \n        await writeContracts(updatedContracts);\n        revalidatePath('/tenancy/contracts');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to delete contract:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nasync function readProperties() {\n    try {\n        const data = await fs.readFile(propertiesFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (e) {\n        return [];\n    }\n}\n\nasync function readTenants(): Promise<{tenantData: Tenant}[]> {\n    try {\n        const data = await fs.readFile(tenantsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (e) {\n        return [];\n    }\n}\n\n\nexport async function getContractLookups() {\n    const properties = await readProperties();\n    const tenants = await readTenants();\n    const units = await getUnits();\n    const rooms = await getRooms();\n\n    return {\n        properties: properties.map((p: any) => ({ value: (p.propertyData || p).code, label: (p.propertyData || p).name })),\n        tenants: tenants.map((t: any) => ({ value: t.tenantData.code, label: t.tenantData.name, ...t.tenantData })),\n        units: units.map(u => ({...u, value: u.unitCode, label: u.unitCode })),\n        rooms: rooms.map(r => ({...r, value: r.roomCode, label: r.roomCode })),\n    }\n}\n\nexport async function getUnitsForProperty(propertyCode: string) {\n    const allUnits = await getUnits();\n    return allUnits\n        .filter(u => u.propertyCode === propertyCode && u.occupancyStatus !== 'Occupied')\n        .map((u: any) => ({ ...u, value: u.unitCode, label: u.unitCode }));\n}\n\nexport async function getRoomsForUnit(propertyCode: string, unitCode: string) {\n    const allRooms = await getRooms();\n    return allRooms\n        .filter(r => r.propertyCode === propertyCode && r.unitCode === unitCode && r.occupancyStatus === 'Vacant')\n        .map((r: any) => ({ ...r, value: r.roomCode, label: r.roomCode }));\n}\n\nexport async function getUnitDetails(unitCode: string) {\n    const allUnits = await getUnits();\n    const unit = allUnits.find(u => u.unitCode === unitCode);\n\n    if (!unit) {\n        return { success: false, error: 'Unit not found' };\n    }\n    \n    return { \n        success: true, \n        data: {\n            totalRent: unit.annualRent,\n        }\n    };\n}\n\nexport async function getRoomDetails(roomCode: string) {\n    const allRooms = await getRooms();\n    const room = allRooms.find(r => r.roomCode === roomCode);\n    if (!room) {\n        return { success: false, error: 'Room not found' };\n    }\n    return { success: true, data: room };\n}\n\nexport async function getTenantForProperty(propertyCode: string, unitCode: string, roomCode?: string) {\n    try {\n        const contracts: Contract[] = await fs.readFile(contractsFilePath, 'utf-8').then(JSON.parse);\n        \n        const activeContract = contracts.find(c =>\n            c.property === propertyCode &&\n            c.unitCode === unitCode &&\n            (roomCode ? c.roomCode === roomCode : true) && // Match room if provided\n            (c.status === 'New' || c.status === 'Renew')\n        );\n\n        if (activeContract) {\n            return { success: true, tenantName: activeContract.tenantName };\n        }\n        return { success: false, error: 'No active tenant found for this location.' };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n\nconst moveTenantSchema = z.object({\n    contractId: z.string(),\n    newPropertyCode: z.string(),\n    newUnitCode: z.string(),\n    newRoomCode: z.string().optional(),\n    moveDate: z.string(),\n});\n\nexport async function moveTenant(data: z.infer<typeof moveTenantSchema>) {\n    const validation = moveTenantSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data provided.' };\n    }\n\n    const { contractId, newPropertyCode, newUnitCode, newRoomCode, moveDate } = validation.data;\n\n    try {\n        const allContracts = await readContracts();\n        const contractIndex = allContracts.findIndex(c => c.id === contractId);\n\n        if (contractIndex === -1) {\n            return { success: false, error: 'Active contract not found for this tenant.' };\n        }\n\n        const contract = allContracts[contractIndex];\n        const oldLocation = `${contract.property}/${contract.unitCode}${contract.roomCode ? '/'+contract.roomCode : ''}`;\n        const newLocation = `${newPropertyCode}/${newUnitCode}${newRoomCode ? '/'+newRoomCode : ''}`;\n\n        contract.property = newPropertyCode;\n        contract.unitCode = newUnitCode;\n        contract.roomCode = newRoomCode;\n\n        contract.paymentSchedule.push({\n            installment: 0, \n            dueDate: moveDate,\n            amount: 0,\n            status: 'paid', \n            chequeNo: 'MOVEMENT',\n            bankName: `Moved from ${oldLocation} to ${newLocation}`,\n        });\n        \n        allContracts[contractIndex] = contract;\n\n        await writeContracts(allContracts);\n\n        revalidatePath('/tenancy/tenants/add');\n        revalidatePath('/property/properties');\n        revalidatePath('/property/units/vacant');\n        \n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n\nexport async function getLatestContractForTenant(tenantCode: string): Promise<{ success: boolean; data?: Contract; error?: string }> {\n    if (!tenantCode) {\n        return { success: false, error: \"Tenant code is required.\" };\n    }\n    try {\n        const allContracts = await readContracts();\n        const tenantContracts = allContracts.filter(c => c.tenantCode === tenantCode);\n        if (tenantContracts.length === 0) {\n            return { success: false, error: 'No contracts found for this tenant.' };\n        }\n        tenantContracts.sort((a, b) => new Date(b.endDate).getTime() - new Date(a.endDate).getTime());\n        return { success: true, data: tenantContracts[0] };\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAyNsB,iBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/contracts/columns.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { ColumnDef } from '@tanstack/react-table';\nimport { ArrowUpDown, MoreHorizontal, Pencil, Trash2, CheckCircle, AlertTriangle, HelpCircle } from 'lucide-react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\nimport { format, differenceInDays, formatDistanceToNowStrict, isFuture, parseISO } from 'date-fns';\n\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { useToast } from '@/hooks/use-toast';\nimport { deleteContract } from '../contract/actions';\nimport { Contract } from '../contract/schema';\nimport { cn } from '@/lib/utils';\nimport { useCurrency } from '@/context/currency-context';\n\nconst ActionsCell = ({ row }: { row: { original: Contract } }) => {\n  const contract = row.original;\n  const router = useRouter();\n  const { toast } = useToast();\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const handleDelete = async () => {\n    setIsDeleting(true);\n    try {\n      const result = await deleteContract(contract.id);\n      if (result.success) {\n        toast({\n          title: 'Success',\n          description: `Contract \"${contract.contractNo}\" deleted successfully.`,\n        });\n        router.refresh();\n      } else {\n        throw new Error(result.error || 'An unknown error occurred');\n      }\n    } catch (error) {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: (error as Error).message || 'Failed to delete contract.',\n      });\n    } finally {\n      setIsDeleting(false);\n      setIsDeleteDialogOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n            <AlertDialogDescription>\n              This action cannot be undone. This will permanently delete the\n              contract \"{contract.contractNo}\".\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={handleDelete}\n              disabled={isDeleting}\n              className=\"bg-destructive hover:bg-destructive/90\"\n            >\n              {isDeleting ? 'Deleting...' : 'Delete'}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      <div className=\"text-right\">\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n              <span className=\"sr-only\">Open menu</span>\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n            <DropdownMenuItem asChild>\n              <Link href={`/tenancy/contract?id=${contract.id}`}>\n                <Pencil className=\"mr-2 h-4 w-4\" />\n                Edit\n              </Link>\n            </DropdownMenuItem>\n            <DropdownMenuItem\n              className=\"text-destructive\"\n              onSelect={() => setIsDeleteDialogOpen(true)}\n            >\n              <Trash2 className=\"mr-2 h-4 w-4\" />\n              Delete\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n    </>\n  );\n};\n\nconst DaysPassedCell = ({ row }: { row: { original: Contract } }) => {\n    const { startDate } = row.original;\n    const [passed, setPassed] = useState<{ text: string, className: string }>({ text: '', className: '' });\n\n    useEffect(() => {\n        try {\n            const start = new Date(startDate);\n            if (isFuture(start)) {\n                setPassed({ text: 'Starts soon', className: 'text-blue-600' });\n                return;\n            }\n            const now = new Date();\n            const days = differenceInDays(now, start);\n            \n            setPassed({ \n                text: `${days} days`,\n                className: ''\n            });\n\n        } catch (e) {\n            setPassed({text: 'Invalid date', className: 'text-muted-foreground'});\n        }\n    }, [startDate]);\n\n    return <span className={cn('font-medium', passed.className)}>{passed.text}</span>;\n}\n\n\nconst RemainingDaysCell = ({ row }: { row: { original: Contract } }) => {\n    const { endDate } = row.original;\n    const [remaining, setRemaining] = useState<{ text: string, className: string }>({ text: '', className: '' });\n  \n    useEffect(() => {\n        try {\n            const end = new Date(endDate);\n            const now = new Date();\n            const days = differenceInDays(end, now);\n            \n            if (days < 0) {\n                setRemaining({ \n                    text: `Expired ${formatDistanceToNowStrict(end, { addSuffix: true })}`,\n                    className: 'text-destructive'\n                });\n            } else if (days <= 30) {\n                 setRemaining({ \n                    text: days === 0 ? 'Expires today' : `${days} days`,\n                    className: 'text-emerald-600'\n                });\n            } else {\n                 setRemaining({ \n                    text: `${days} days`,\n                    className: ''\n                });\n            }\n        } catch (e) {\n            setRemaining({text: 'Invalid date', className: 'text-muted-foreground'});\n        }\n    }, [endDate]);\n\n    return <span className={cn('font-bold', remaining.className)}>{remaining.text}</span>;\n}\n\nconst statusVariantMap: { [key: string]: \"default\" | \"secondary\" | \"destructive\" } = {\n  New: 'default',\n  Renew: 'secondary',\n  Cancel: 'destructive',\n};\n\nexport const columns: ColumnDef<Contract & {periodStatus?: string}>[] = [\n  {\n    id: 'select',\n    header: ({ table }) => (\n      <Checkbox\n        checked={table.getIsAllPageRowsSelected()}\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: 'contractNo',\n    header: ({ column }) => (\n      <Button\n        variant=\"ghost\"\n        onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n      >\n        Tracking Num...\n        <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n      </Button>\n    ),\n  },\n  {\n    accessorKey: 'tenantName',\n    header: 'Tenant',\n  },\n  {\n    accessorKey: 'property',\n    header: 'Property',\n  },\n  {\n    accessorKey: 'unitCode',\n    header: 'Unit',\n  },\n  {\n    accessorKey: 'endDate',\n    header: 'Contract End',\n     cell: ({ row }) => format(new Date(row.getValue('endDate')), 'PP'),\n  },\n  {\n    id: 'remainingDays',\n    header: 'Remaining Days',\n    cell: RemainingDaysCell,\n  },\n  {\n    accessorKey: 'totalRent',\n    header: () => <div className=\"text-right\">Rent Amount</div>,\n    cell: function Cell({ row }) {\n      const { formatCurrency } = useCurrency();\n      const amount = parseFloat(row.getValue('totalRent'));\n      \n      return <div className=\"text-right font-medium\">{formatCurrency(amount)}</div>;\n    },\n  },\n  {\n    accessorKey: 'status',\n    header: 'Status',\n    cell: ({ row }) => {\n        const contract = row.original;\n        const status = contract.status || 'New';\n        const renewalCount = contract.renewalCount || 0;\n        let statusText = status;\n\n        if (status === 'Renew' && renewalCount > 0) {\n            statusText = `Renew (x${renewalCount})`;\n        }\n        \n        return <Badge variant={statusVariantMap[status] || 'default'} className=\"capitalize\">{statusText}</Badge>;\n    }\n  },\n  {\n    id: 'actions',\n    cell: ActionsCell,\n  },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 816, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAG5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAM,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,2KAAgB,OAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,6DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,2KAAgB,QAGnC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 984, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,IAAA,4HAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1020, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/contracts/data-table.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\nimport { format } from 'date-fns';\nimport { FileText, FileSpreadsheet } from 'lucide-react';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { type Contract } from '../contract/schema';\n\n// Extend jsPDF type to include autoTable from the plugin\ndeclare module 'jspdf' {\n    interface jsPDF {\n      autoTable: (options: any) => jsPDF;\n    }\n}\n\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n  properties: { value: string, label: string }[];\n}\n\nexport function DataTable<TData extends Contract, TValue>({\n  columns,\n  data,\n  properties\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    []\n  );\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    onSortingChange: setSorting,\n    getSortedRowModel: getSortedRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n  \n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n    const tableData = table.getFilteredRowModel().rows.map(row => row.original);\n\n    doc.text(\"Tenancy Contracts Report\", 14, 16);\n    (doc as any).autoTable({\n        head: [['Contract No', 'Tenant', 'Property', 'Start Date', 'End Date', 'Status', 'Rent']],\n        body: tableData.map(c => [\n            c.contractNo,\n            c.tenantName,\n            c.property,\n            format(new Date(c.startDate), 'PP'),\n            format(new Date(c.endDate), 'PP'),\n            c.status,\n            new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(c.totalRent)\n        ]),\n        startY: 20,\n    });\n    doc.save('tenancy-contracts.pdf');\n  };\n\n  const handleExportExcel = () => {\n    const dataToExport = table.getFilteredRowModel().rows.map(row => {\n        const c = row.original;\n        return {\n            'Contract No': c.contractNo,\n            'Tenant': c.tenantName,\n            'Property': c.property,\n            'Start Date': format(new Date(c.startDate), 'yyyy-MM-dd'),\n            'End Date': format(new Date(c.endDate), 'yyyy-MM-dd'),\n            'Status': c.status,\n            'Rent': c.totalRent,\n        }\n    });\n\n    const ws = XLSX.utils.json_to_sheet(dataToExport);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Contracts\");\n    XLSX.writeFile(wb, \"tenancy-contracts.xlsx\");\n  };\n\n  return (\n    <div>\n      <div className=\"flex items-center py-4 gap-2\">\n        <Input\n          placeholder=\"Filter by tenant name...\"\n          value={(table.getColumn('tenantName')?.getFilterValue() as string) ?? ''}\n          onChange={(event) =>\n            table.getColumn('tenantName')?.setFilterValue(event.target.value)\n          }\n          className=\"max-w-xs\"\n        />\n         <Select onValueChange={(value) => table.getColumn('property')?.setFilterValue(value === 'all' ? '' : value)}>\n            <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"Filter by property\" />\n            </SelectTrigger>\n            <SelectContent>\n                <SelectItem value=\"all\">All Properties</SelectItem>\n                {properties.map(p => (\n                    <SelectItem key={p.value} value={p.value}>{p.label}</SelectItem>\n                ))}\n            </SelectContent>\n        </Select>\n        <Select onValueChange={(value) => table.getColumn('status')?.setFilterValue(value === 'all' ? '' : value)}>\n            <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"Filter by status\" />\n            </SelectTrigger>\n            <SelectContent>\n                <SelectItem value=\"all\">All Statuses</SelectItem>\n                <SelectItem value=\"New\">New</SelectItem>\n                <SelectItem value=\"Renew\">Renew</SelectItem>\n                <SelectItem value=\"Cancel\">Cancel</SelectItem>\n            </SelectContent>\n        </Select>\n        <div className=\"ml-auto flex items-center gap-2\">\n            <Button variant=\"outline\" size=\"sm\" onClick={handleExportPDF}>\n                <FileText className=\"mr-2 h-4 w-4\" /> Export PDF\n            </Button>\n            <Button variant=\"outline\" size=\"sm\" onClick={handleExportExcel}>\n                <FileSpreadsheet className=\"mr-2 h-4 w-4\" /> Export Excel\n            </Button>\n            <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n                <Button variant=\"outline\">\n                Columns\n                </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n                {table\n                .getAllColumns()\n                .filter((column) => column.getCanHide())\n                .map((column) => {\n                    return (\n                    <DropdownMenuCheckboxItem\n                        key={column.id}\n                        className=\"capitalize\"\n                        checked={column.getIsVisible()}\n                        onCheckedChange={(value) =>\n                        column.toggleVisibility(!!value)\n                        }\n                    >\n                        {typeof columns.find(c => c.id === column.id)?.header === 'string' ? columns.find(c => c.id === column.id)?.header : column.id}\n                    </DropdownMenuCheckboxItem>\n                    );\n                })}\n            </DropdownMenuContent>\n            </DropdownMenu>\n        </div>\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && 'selected'}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <div className=\"flex-1 text-sm text-muted-foreground\">\n          {table.getFilteredSelectedRowModel().rows.length} of{' '}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n        >\n          Previous\n        </Button>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n        >\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}