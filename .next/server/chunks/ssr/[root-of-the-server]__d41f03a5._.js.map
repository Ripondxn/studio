{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,4KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,iLAA2B;YAC1B,WAAW,IAAA,yHAAE,EAAC;sBAEd,cAAA,8OAAC,6MAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,4KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,mLAAyB;AAE7C,MAAM,qBAAqB,sLAA4B;AAEvD,MAAM,oBAAoB,qLAA2B;AAErD,MAAM,mCAAqB,mNAAgB,CAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,sLAA4B;QAC3B,WAAW,IAAA,yHAAE,EACX,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,mBAAmB,WAAW,GAAG,sLAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,mNAAgB,CAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,sLAA4B;gBAC3B,KAAK;gBACL,WAAW,IAAA,yHAAE,EACX,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,sLAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,mNAAgB,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oLAA0B;QACzB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,oLAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,mNAAgB,CAG7C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,0LAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,uBAAuB,WAAW,GAChC,0LAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,IAAA,oJAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,qLAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,IAAA,oJAAc,EAAC;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,qLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,0KAAoB;AAEnC,MAAM,gBAAgB,6KAAuB;AAE7C,MAAM,eAAe,4KAAsB;AAE3C,MAAM,cAAc,2KAAqB;AAEzC,MAAM,8BAAgB,mNAAgB,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,6KAAuB;QACtB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,6KAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,mNAAgB,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,6KAAuB;gBACtB,KAAK;gBACL,WAAW,IAAA,yHAAE,EACX,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,2KAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,iMAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,6KAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,2KAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,iLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/property/properties/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { firestoreAdmin } from '@/lib/firebase/admin-config';\nimport { type Unit } from '@/app/property/units/schema';\nimport { type Contract } from '@/app/tenancy/contract/schema';\nimport { type Room } from '../rooms/schema';\n\nasync function getProperties() {\n    const propertiesCollection = firestoreAdmin.collection('properties');\n    const snapshot = await propertiesCollection.get();\n    return snapshot.docs.map(doc => doc.data());\n}\n\nasync function writeProperties(data: any) {\n    const propertiesCollection = firestoreAdmin.collection('properties');\n    for (const property of data) {\n        await propertiesCollection.doc(property.id).set(property);\n    }\n}\n\nexport async function savePropertyData(dataToSave: any, isNewRecord: boolean) {\n    try {\n        const allProperties:any = await getProperties();\n\n        if (isNewRecord) {\n            const propertyExists = allProperties.some((p: any) => (p.propertyData ? p.propertyData.code : p.code) === dataToSave.propertyData.code);\n            if (propertyExists) {\n                return { success: false, error: `Property with code \"${dataToSave.propertyData.code}\" already exists.` };\n            }\n            const newProperty = {\n                id: `PROP-${Date.now()}`,\n                ...dataToSave\n            };\n            await firestoreAdmin.collection('properties').doc(newProperty.id).set(newProperty);\n        } else {\n            const property = allProperties.find((p: any) => {\n                const code = p.propertyData ? p.propertyData.code : p.code;\n                return code === dataToSave.propertyData.code;\n            });\n\n            if (property) {\n                const updatedProperty = {\n                    ...property,\n                    ...dataToSave,\n                    id: property.id\n                };\n                await firestoreAdmin.collection('properties').doc(property.id).set(updatedProperty);\n            } else {\n                const newProperty = {\n                    id: `PROP-${Date.now()}`,\n                    ...dataToSave,\n                };\n                await firestoreAdmin.collection('properties').doc(newProperty.id).set(newProperty);\n            }\n        }\n\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save property data:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n\nexport async function findPropertyData(propertyCode: string) {\n    try {\n        const propertiesCollection = firestoreAdmin.collection('properties');\n        const snapshot = await propertiesCollection.where('propertyData.code', '==', propertyCode).get();\n        \n        if (snapshot.empty) {\n            return { success: false, error: \"Not Found\" };\n        }\n\n        return { success: true, data: snapshot.docs[0].data() };\n    } catch (error) {\n        console.error('Failed to find property data:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n\nexport async function deletePropertyData(propertyCode: string) {\n    try {\n        const propertiesCollection = firestoreAdmin.collection('properties');\n        const snapshot = await propertiesCollection.where('propertyData.code', '==', propertyCode).get();\n\n        if (snapshot.empty) {\n            return { success: false, error: 'Property not found.' };\n        }\n\n        const docId = snapshot.docs[0].id;\n        await propertiesCollection.doc(docId).delete();\n\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to delete property data:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n\nexport async function getOccupancyInfoForProperty(propertyCode: string) {\n    try {\n        const contractsCollection = firestoreAdmin.collection('contracts');\n        const snapshot = await contractsCollection.where('property', '==', propertyCode).get();\n        const occupancyInfo = snapshot.docs.map(doc => {\n            const data = doc.data();\n            return {\n                unitCode: data.unitCode,\n                tenantName: data.tenantName,\n                contractId: data.id,\n            };\n        });\n\n        return { success: true, data: occupancyInfo };\n    } catch (error) {\n        console.error('Failed to get occupancy info:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n\nasync function readUnits(): Promise<Unit[]> {\n    const unitsCollection = firestoreAdmin.collection('units');\n    const snapshot = await unitsCollection.get();\n    return snapshot.docs.map(doc => doc.data() as Unit);\n}\n\nasync function readRooms(): Promise<Room[]> {\n    const roomsCollection = firestoreAdmin.collection('rooms');\n    const snapshot = await roomsCollection.get();\n    return snapshot.docs.map(doc => doc.data() as Room);\n}\n\n\nexport async function getUnitsForProperty(propertyCode: string): Promise<{ success: boolean, data?: Unit[], error?: string }> {\n    try {\n        const allUnits = await readUnits();\n        const allRooms = await readRooms();\n        const contractsCollection = firestoreAdmin.collection('contracts');\n        const contractsSnapshot = await contractsCollection.get();\n        const allContracts: Contract[] = contractsSnapshot.docs.map(doc => doc.data() as Contract);\n\n        const activeContracts = allContracts.filter(c => c.status === 'New' || c.status === 'Renew');\n        \n        const unitLevelContractCodes = new Set(activeContracts.filter(c => !c.roomCode && c.unitCode).map(c => c.unitCode));\n        const occupiedRoomCodes = new Set(activeContracts.filter(c => c.roomCode).map(c => c.roomCode));\n\n        const propertyUnits = allUnits\n            .filter(u => u.propertyCode === propertyCode)\n            .map(unit => {\n                let occupancyStatus: 'Vacant' | 'Occupied' | 'Partially Occupied' = 'Vacant';\n\n                if (unitLevelContractCodes.has(unit.unitCode)) {\n                    occupancyStatus = 'Occupied';\n                } else {\n                    const roomsInUnit = allRooms.filter(r => r.propertyCode === unit.propertyCode && r.unitCode === unit.unitCode);\n                    if (roomsInUnit.length > 0) {\n                        const occupiedRoomsCount = roomsInUnit.filter(r => occupiedRoomCodes.has(r.roomCode)).length;\n\n                        if (occupiedRoomsCount === 0) {\n                            occupancyStatus = 'Vacant';\n                        } else if (occupiedRoomsCount < roomsInUnit.length) {\n                            occupancyStatus = 'Partially Occupied';\n                        } else {\n                            occupancyStatus = 'Occupied';\n                        }\n                    } else {\n                        occupancyStatus = 'Vacant';\n                    }\n                }\n                \n                return {\n                    ...unit,\n                    occupancyStatus,\n                };\n            });\n            \n        return { success: true, data: propertyUnits };\n    } catch (error) {\n        console.error('Failed to get units for property:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n\nasync function readLandlords() {\n    const landlordsCollection = firestoreAdmin.collection('landlords');\n    const snapshot = await landlordsCollection.get();\n    return snapshot.docs.map(doc => doc.data());\n}\n\nexport async function getPropertyLookups() {\n    const landlords:any = await readLandlords();\n    return {\n        landlords: landlords.map((l: any) => ({ code: l.landlordData.code, name: l.landlordData.name })),\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAgFsB,qBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/property/properties/list/columns.tsx"],"sourcesContent":["\n\n'use client';\n\nimport { useState } from 'react';\nimport { ColumnDef } from '@tanstack/react-table';\nimport { ArrowUpDown, Pencil, Trash2, MoreHorizontal, Paperclip, Link as LinkIcon, File } from 'lucide-react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\n\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { useToast } from '@/hooks/use-toast';\nimport { deletePropertyData } from '../actions';\nimport { Badge } from '@/components/ui/badge';\n\nimport { Property } from './schema';\n\n// This is a new component for the actions cell to handle its own state\nconst ActionsCell = ({ row }: { row: any }) => {\n  const property = row.original;\n  const router = useRouter();\n  const { toast } = useToast();\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const handleDelete = async () => {\n    setIsDeleting(true);\n    try {\n      const result = await deletePropertyData(property.code);\n      if (result.success) {\n        toast({\n          title: 'Success',\n          description: `Property \"${property.name}\" deleted successfully.`,\n        });\n        // Refresh the page to see the updated list\n        router.refresh();\n      } else {\n        throw new Error(result.error || 'An unknown error occurred');\n      }\n    } catch (error) {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: (error as Error).message || 'Failed to delete property.',\n      });\n    } finally {\n      setIsDeleting(false);\n      setIsDeleteDialogOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n            <AlertDialogDescription>\n              This action cannot be undone. This will permanently delete the\n              property \"{property.name}\" and all its associated data.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={handleDelete}\n              disabled={isDeleting}\n              className=\"bg-destructive hover:bg-destructive/90\"\n            >\n              {isDeleting ? 'Deleting...' : 'Delete'}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      <div className=\"text-right\">\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n              <span className=\"sr-only\">Open menu</span>\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n            <DropdownMenuItem asChild>\n              <Link href={`/property/properties?code=${property.code}`}>\n                <Pencil className=\"mr-2 h-4 w-4\" />\n                Edit\n              </Link>\n            </DropdownMenuItem>\n            <DropdownMenuItem\n              className=\"text-destructive\"\n              onSelect={() => setIsDeleteDialogOpen(true)}\n            >\n              <Trash2 className=\"mr-2 h-4 w-4\" />\n              Delete\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n    </>\n  );\n};\n\ntype Attachment = {\n  id: number;\n  name: string;\n  file: string | null;\n  remarks: string;\n  isLink: boolean;\n};\n\n\nconst AttachmentsCell = ({ row }: { row: { original: Property } }) => {\n    const property = row.original;\n    const attachments: Attachment[] = property.attachments || [];\n\n    if (attachments.length === 0) {\n        return <span className=\"text-muted-foreground text-xs\">No attachments</span>;\n    }\n\n    return (\n        <Dialog>\n            <DialogTrigger asChild>\n                <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-2\">\n                    <Paperclip className=\"h-4 w-4\" />\n                    <span>{attachments.length}</span>\n                </Button>\n            </DialogTrigger>\n            <DialogContent>\n                <DialogHeader>\n                    <DialogTitle>Attachments for {property.name}</DialogTitle>\n                    <DialogDescription>\n                        List of all attached files and links.\n                    </DialogDescription>\n                </DialogHeader>\n                <div className=\"max-h-80 overflow-y-auto\">\n                    <ul className=\"space-y-2\">\n                       {attachments.map(att => (\n                           <li key={att.id} className=\"flex items-center justify-between p-2 border rounded-md\">\n                               <div className=\"flex items-center gap-3\">\n                                   {att.isLink ? <LinkIcon className=\"h-5 w-5 text-primary\"/> : <File className=\"h-5 w-5 text-primary\"/>}\n                                   <div className=\"flex flex-col\">\n                                     <span className=\"font-medium\">{att.name}</span>\n                                     <span className=\"text-xs text-muted-foreground\">{att.remarks || (att.isLink ? 'Link' : 'File')}</span>\n                                   </div>\n                               </div>\n                                {att.isLink && typeof att.file === 'string' ? (\n                                    <Button variant=\"link\" asChild size=\"sm\">\n                                        <a href={att.file} target=\"_blank\" rel=\"noopener noreferrer\">View Link</a>\n                                    </Button>\n                                ) : (\n                                    <span className=\"text-sm text-muted-foreground italic\">{att.file}</span>\n                                )}\n                           </li>\n                       ))}\n                    </ul>\n                </div>\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport const columns: ColumnDef<Property>[] = [\n  {\n    id: 'select',\n    header: ({ table }) => (\n      <Checkbox\n        checked={table.getIsAllPageRowsSelected()}\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: 'code',\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n        >\n          Code\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => {\n        const property = row.original;\n        return (\n            <Button asChild variant=\"link\" className=\"p-0 h-auto font-normal\">\n                <Link href={`/property/properties?code=${property.code}`}>{property.code}</Link>\n            </Button>\n        )\n    }\n  },\n  {\n    accessorKey: 'name',\n    header: 'Name',\n  },\n  {\n    accessorKey: 'landlord',\n    header: 'Landlord',\n  },\n  {\n    accessorKey: 'propertyType',\n    header: 'Property Type',\n  },\n  {\n    accessorKey: 'status',\n    header: 'Status',\n    cell: ({ row }) => {\n      const status = row.getValue('status') as string;\n      const variant = status === 'Active' ? 'default' : 'secondary';\n      return <Badge variant={variant}>{status}</Badge>;\n    },\n  },\n  {\n    accessorKey: 'noOfUnits',\n    header: ({ column }) => {\n        return (\n          <div className=\"text-right\">\n            <Button\n              variant=\"ghost\"\n              onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n            >\n              No of Units\n              <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n            </Button>\n          </div>\n        );\n      },\n    cell: ({ row }) => {\n      const amount = parseFloat(row.getValue('noOfUnits'));\n      return <div className=\"text-right font-medium\">{amount}</div>;\n    },\n  },\n  {\n    id: 'attachments',\n    header: 'Attachments',\n    cell: ({ row }) => <AttachmentsCell row={row} />,\n  },\n  {\n    id: 'actions',\n    cell: ({ row }) => <ActionsCell row={row} />,\n  },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 975, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,6DACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,mNAAgB,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1091, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,IAAA,yHAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1119, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/property/properties/list/data-table.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\nimport { FileText, FileSpreadsheet } from 'lucide-react';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\n\n// Extend jsPDF type to include autoTable from the plugin\ndeclare module 'jspdf' {\n    interface jsPDF {\n      autoTable: (options: any) => jsPDF;\n    }\n}\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n}\n\n// Helper function to extract a simple string from a complex header\nconst getHeaderTitle = (header: any): string => {\n    if (typeof header === 'string') {\n        return header;\n    }\n    if (typeof header === 'function') {\n        // This is a simple heuristic. For more complex headers, this might need adjustment.\n        // It looks for a direct child that is a string.\n        const rendered = header({}); // render with empty context\n        if (rendered?.props?.children) {\n            const children = React.Children.toArray(rendered.props.children);\n            const textChild = children.find(child => typeof child === 'string');\n            if (textChild) {\n                return textChild as string;\n            }\n        }\n    }\n    // Fallback to accessorKey if available\n    // @ts-ignore\n    return (header?.column?.accessorKey as string) || '';\n}\n\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    []\n  );\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    onSortingChange: setSorting,\n    getSortedRowModel: getSortedRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n    const exportableColumns = columns.filter(col => col.id !== 'select' && col.id !== 'actions' && col.accessorKey);\n    \n    const head = [exportableColumns.map(col => {\n        // A helper to safely get a string header.\n        // `header` can be a string or a function.\n        if (typeof col.header === 'string') return col.header;\n        // The accessor key is a good fallback.\n        return col.accessorKey as string || col.id || '';\n    })];\n\n    const body = table.getRowModel().rows.map(row => \n        exportableColumns.map(col => {\n            // @ts-ignore\n            const value = row.original[col.accessorKey as keyof TData];\n            return String(value); // Ensure value is a string for the PDF\n        })\n    );\n\n    doc.text(\"Properties List\", 14, 16);\n    doc.autoTable({\n        head: head,\n        body: body,\n        startY: 20,\n    });\n    doc.save('properties-list.pdf');\n  };\n\n  const handleExportExcel = () => {\n    const dataToExport = table.getRowModel().rows.map(row => {\n        let obj: any = {};\n         columns.filter(col => col.id !== 'select' && col.id !== 'actions' && col.accessorKey).forEach(col => {\n            const headerText = (typeof col.header === 'string' ? col.header : col.accessorKey) as string;\n            // @ts-ignore\n            obj[headerText] = row.original[col.accessorKey as keyof TData];\n         })\n         return obj;\n    });\n\n    const ws = XLSX.utils.json_to_sheet(dataToExport);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Properties\");\n    XLSX.writeFile(wb, \"properties-list.xlsx\");\n  };\n\n  return (\n    <div>\n      <div className=\"flex items-center py-4\">\n        <Input\n          placeholder=\"Filter by name...\"\n          value={(table.getColumn('name')?.getFilterValue() as string) ?? ''}\n          onChange={(event) =>\n            table.getColumn('name')?.setFilterValue(event.target.value)\n          }\n          className=\"max-w-sm\"\n        />\n        <div className=\"ml-auto flex items-center gap-2\">\n            <Button variant=\"outline\" size=\"sm\" onClick={handleExportPDF}>\n                <FileText className=\"mr-2 h-4 w-4\" /> Export PDF\n            </Button>\n            <Button variant=\"outline\" size=\"sm\" onClick={handleExportExcel}>\n                <FileSpreadsheet className=\"mr-2 h-4 w-4\" /> Export Excel\n            </Button>\n            <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n                <Button variant=\"outline\">\n                Columns\n                </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n                {table\n                .getAllColumns()\n                .filter((column) => column.getCanHide())\n                .map((column) => {\n                    return (\n                    <DropdownMenuCheckboxItem\n                        key={column.id}\n                        className=\"capitalize\"\n                        checked={column.getIsVisible()}\n                        onCheckedChange={(value) =>\n                        column.toggleVisibility(!!value)\n                        }\n                    >\n                        {column.id}\n                    </DropdownMenuCheckboxItem>\n                    );\n                })}\n            </DropdownMenuContent>\n            </DropdownMenu>\n        </div>\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && 'selected'}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <div className=\"flex-1 text-sm text-muted-foreground\">\n          {table.getFilteredSelectedRowModel().rows.length} of{' '}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n        >\n          Previous\n        </Button>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n        >\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}