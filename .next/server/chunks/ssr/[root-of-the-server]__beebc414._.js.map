{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/license.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { differenceInDays, addDays, format, parseISO } from 'date-fns';\n\nconst licenseFilePath = path.join(process.cwd(), 'license.json');\nconst TRIAL_PERIOD_DAYS = 30;\n\ntype LicenseInfo = {\n    trialStartDate: string;\n};\n\nexport type LicenseStatus = {\n    isActive: boolean;\n    isTrial: boolean;\n    daysRemaining: number;\n    expiryDate: string;\n};\n\nasync function readLicenseFile(): Promise<LicenseInfo | null> {\n    try {\n        await fs.access(licenseFilePath);\n        const data = await fs.readFile(licenseFilePath, 'utf-8');\n        // Basic validation in case the file is empty or corrupted\n        if (!data) return null;\n        return JSON.parse(data);\n    } catch (error) {\n        return null; // File doesn't exist or is unreadable\n    }\n}\n\nasync function createLicenseFile(): Promise<LicenseInfo> {\n    const trialStartDate = new Date().toISOString();\n    const newLicense: LicenseInfo = { trialStartDate };\n    await fs.writeFile(licenseFilePath, JSON.stringify(newLicense, null, 2), 'utf-8');\n    return newLicense;\n}\n\nexport async function checkLicenseStatus(): Promise<LicenseStatus> {\n    let license = await readLicenseFile();\n\n    if (!license) {\n        license = await createLicenseFile();\n    }\n    \n    const startDate = parseISO(license.trialStartDate);\n    const now = new Date();\n    const expiryDate = addDays(startDate, TRIAL_PERIOD_DAYS);\n    const daysRemaining = differenceInDays(expiryDate, now);\n\n    const isActive = daysRemaining >= 0;\n\n    return {\n        isActive,\n        isTrial: true, // For now, we only have a trial license\n        daysRemaining: Math.max(0, daysRemaining),\n        expiryDate: format(expiryDate, 'PPP'),\n    };\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;AAEA,MAAM,kBAAkB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AACjD,MAAM,oBAAoB;AAa1B,eAAe;IACX,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,iBAAiB;QAChD,0DAA0D;QAC1D,IAAI,CAAC,MAAM,OAAO;QAClB,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAO,OAAO;QACZ,OAAO,MAAM,sCAAsC;IACvD;AACJ;AAEA,eAAe;IACX,MAAM,iBAAiB,IAAI,OAAO,WAAW;IAC7C,MAAM,aAA0B;QAAE;IAAe;IACjD,MAAM,yGAAE,CAAC,SAAS,CAAC,iBAAiB,KAAK,SAAS,CAAC,YAAY,MAAM,IAAI;IACzE,OAAO;AACX;AAEO,eAAe;IAClB,IAAI,UAAU,MAAM;IAEpB,IAAI,CAAC,SAAS;QACV,UAAU,MAAM;IACpB;IAEA,MAAM,YAAY,IAAA,oJAAQ,EAAC,QAAQ,cAAc;IACjD,MAAM,MAAM,IAAI;IAChB,MAAM,aAAa,IAAA,kJAAO,EAAC,WAAW;IACtC,MAAM,gBAAgB,IAAA,oKAAgB,EAAC,YAAY;IAEnD,MAAM,WAAW,iBAAiB;IAElC,OAAO;QACH;QACA,SAAS;QACT,eAAe,KAAK,GAAG,CAAC,GAAG;QAC3B,YAAY,IAAA,gKAAM,EAAC,YAAY;IACnC;AACJ;;;IApBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/currency/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\n\nexport type CurrencySettings = {\n    currencyCode: string;\n};\n\nconst settingsFilePath = path.join(process.cwd(), 'src/app/admin/currency/settings.json');\n\nconst defaultSettings: CurrencySettings = {\n    currencyCode: 'AED'\n};\n\nexport async function getCurrencySettings(): Promise<CurrencySettings> {\n    try {\n        await fs.access(settingsFilePath);\n        const data = await fs.readFile(settingsFilePath, 'utf-8');\n        return { ...defaultSettings, ...JSON.parse(data) };\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return defaultSettings;\n        }\n        throw error;\n    }\n}\n\nconst currencySettingsSchema = z.object({\n    currencyCode: z.string().length(3, \"Currency code must be 3 characters long.\").toUpperCase(),\n});\n\nexport async function saveCurrencySettings(data: CurrencySettings) {\n    const validation = currencySettingsSchema.safeParse(data);\n\n    if (!validation.success) {\n        return { success: false, error: validation.error.errors[0].message };\n    }\n\n    try {\n        await fs.writeFile(settingsFilePath, JSON.stringify(validation.data, null, 2), 'utf-8');\n        revalidatePath('/', 'layout'); // Revalidate all pages\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save currency settings:', error);\n        return { success: false, error: 'Failed to save settings.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;;;;;;;AAMA,MAAM,mBAAmB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAElD,MAAM,kBAAoC;IACtC,cAAc;AAClB;AAEO,eAAe;IAClB,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,kBAAkB;QACjD,OAAO;YAAE,GAAG,eAAe;YAAE,GAAG,KAAK,KAAK,CAAC,KAAK;QAAC;IACrD,EAAE,OAAO,OAAO;QACZ,IAAI,AAAC,MAAgC,IAAI,KAAK,UAAU;YACpD,OAAO;QACX;QACA,MAAM;IACV;AACJ;AAEA,MAAM,yBAAyB,uKAAC,CAAC,MAAM,CAAC;IACpC,cAAc,uKAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,4CAA4C,WAAW;AAC9F;AAEO,eAAe,qBAAqB,IAAsB;IAC7D,MAAM,aAAa,uBAAuB,SAAS,CAAC;IAEpD,IAAI,CAAC,WAAW,OAAO,EAAE;QACrB,OAAO;YAAE,SAAS;YAAO,OAAO,WAAW,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO;QAAC;IACvE;IAEA,IAAI;QACA,MAAM,yGAAE,CAAC,SAAS,CAAC,kBAAkB,KAAK,SAAS,CAAC,WAAW,IAAI,EAAE,MAAM,IAAI;QAC/E,IAAA,+IAAc,EAAC,KAAK,WAAW,uBAAuB;QACtD,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO;YAAE,SAAS;YAAO,OAAO;QAA2B;IAC/D;AACJ;;;IAhCsB;IAiBA;;AAjBA,+OAAA;AAiBA,+OAAA","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/access-control/permissions.ts"],"sourcesContent":["\nexport type PermissionAction = {\n  action: string;\n  description: string;\n  allowedRoles: string[];\n};\n\nexport type FeaturePermission = {\n  feature: string;\n  description: string;\n  actions: PermissionAction[];\n};\n\nexport const featurePermissions: FeaturePermission[] = [\n  {\n    feature: 'Properties',\n    description: 'Manage property listings, details, and associated units/rooms.',\n    actions: [\n      { action: 'view', description: 'View property list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit property information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a property', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Units',\n    description: 'Manage individual units within a property.',\n    actions: [\n      { action: 'view', description: 'View unit list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit unit information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a unit', allowedRoles: ['Super Admin'] },\n    ],\n  },\n   {\n    feature: 'Rent-A-Car',\n    description: 'Manage vehicle rental agreements.',\n    actions: [\n      { action: 'view', description: 'View rental agreements', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete rental agreements', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n   {\n    feature: 'Car Sales',\n    description: 'Manage vehicle buying and selling operations.',\n    actions: [\n      { action: 'view', description: 'View vehicle inventory and sales', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add, edit, and delete vehicle records', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Lease Contracts',\n    description: 'Manage lease agreements with landlords.',\n    actions: [\n      { action: 'view', description: 'View lease agreements', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'manage', description: 'Create, edit, and delete lease agreements', allowedRoles: ['Super Admin', 'Admin'] },\n    ]\n  },\n  {\n    feature: 'Project Management',\n    description: 'Manage all aspects of projects, including billing, sub-contractors, and resource allocation.',\n    actions: [\n      { action: 'view', description: 'View project list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'manage', description: 'Create, edit, and delete projects', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'manage_billing', description: 'Manage project progress billing and retention', allowedRoles: ['Super Admin', 'Accountant'] },\n    ],\n  },\n   {\n    feature: 'Vaults & Stores',\n    description: 'Manage inventory, stock levels, and store locations.',\n    actions: [\n      { action: 'view', description: 'View stores and stock levels', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete stores and manage stock transactions', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n    {\n    feature: 'Products & Services',\n    description: 'Manage the catalog of products and services offered.',\n    actions: [\n      { action: 'view', description: 'View products and services', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete products and services', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'view_pricing', description: 'View cost and sale prices', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n    ],\n  },\n  {\n    feature: 'Asset Management',\n    description: 'Manage company assets, depreciation, and assignments.',\n    actions: [\n      { action: 'view', description: 'View asset list', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage', description: 'Add, edit, and assign assets', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete', description: 'Delete assets from the register', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Maintenance',\n    description: 'Manage maintenance tickets and service contracts.',\n    actions: [\n      { action: 'view_tickets', description: 'View maintenance tickets', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage_tickets', description: 'Create, edit, and update tickets', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'view_contracts', description: 'View service contracts', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage_contracts', description: 'Manage service contracts', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Workflow',\n    description: 'Manage document approval workflows.',\n    actions: [\n      { action: 'view', description: 'View workflow queue', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'manage', description: 'Approve or reject transactions', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Data Processing',\n    description: 'Extract data from documents using AI.',\n    actions: [\n      { action: 'access', description: 'Access document processing and data extraction features', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n    ],\n  },\n   {\n    feature: 'Utilities',\n    description: 'Manage utility accounts and bill payments.',\n    actions: [\n      { action: 'view', description: 'View utility accounts', allowedRoles: ['Super Admin', 'Admin', 'Accountant', 'User'] },\n      { action: 'manage', description: 'Add, edit, and delete utility accounts', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Landlords',\n    description: 'Manage landlord profiles and their associated contracts.',\n    actions: [\n      { action: 'view', description: 'View landlord list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant'] },\n      { action: 'edit', description: 'Edit landlord information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a landlord', allowedRoles: ['Super Admin'] },\n    ],\n  },\n    {\n    feature: 'Vendors',\n    description: 'Manage supplier and vendor profiles.',\n    actions: [\n      { action: 'view', description: 'View vendor list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit vendor information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a vendor', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Tenants',\n    description: 'Manage tenant profiles and their tenancy contracts.',\n    actions: [\n      { action: 'view', description: 'View tenant list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit tenant information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a tenant', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Customers',\n    description: 'Manage general customers for non-rental services.',\n    actions: [\n      { action: 'view', description: 'View customer list and details', allowedRoles: ['Super Admin', 'Admin', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit customer information', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete', description: 'Delete a customer', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Finance',\n    description: 'Access to financial modules like banking, payments, and chart of accounts.',\n    actions: [\n      { action: 'view_banking', description: 'View Banking and Petty Cash', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage_banking', description: 'Add/Edit/Delete bank accounts', allowedRoles: ['Super Admin'] },\n      { action: 'view_payments', description: 'View payment and receipt history', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'record_payment', description: 'Record new payments or receipts', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'delete_payment', description: 'Delete financial transactions', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'User Management',\n    description: 'Control over user accounts and their roles.',\n    actions: [\n      { action: 'view', description: 'View user list', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'add_user', description: 'Add new users', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'edit_user', description: 'Edit user details and roles', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete_user', description: 'Delete a user', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Settings',\n    description: 'Access to administrative settings.',\n    actions: [\n        { action: 'access_control', description: 'Manage user roles and permissions', allowedRoles: ['Super Admin'] },\n        { action: 'communication', description: 'Manage communication (Email/SMS) settings', allowedRoles: ['Super Admin', 'Admin'] },\n        { action: 'backup', description: 'Manage data backup and restore', allowedRoles: ['Super Admin'] },\n        { action: 'external_storage', description: 'Configure external storage (e.g., Google Drive)', allowedRoles: ['Developer'] },\n        { action: 'notifications', description: 'Send system-wide notifications', allowedRoles: ['Super Admin', 'Admin'] },\n        { action: 'contract_continuity', description: 'Review and fix contract data issues', allowedRoles: ['Super Admin'] },\n    ]\n  }\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/access-control/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport { type FeaturePermission, featurePermissions } from './permissions';\nimport { type UserRole } from '../user-roles/schema';\nimport { type ModuleSettings } from './schema';\n\nconst permissionsFilePath = path.join(process.cwd(), 'src/app/admin/access-control/permissions.json');\nconst usersFilePath = path.join(process.cwd(), 'src/app/admin/user-roles/users.json');\nconst moduleSettingsFilePath = path.join(process.cwd(), 'src/app/admin/access-control/module-settings.json');\nconst userOverridesFilePath = path.join(process.cwd(), 'src/app/admin/access-control/user-overrides.json');\n\nasync function readData(filePath: string) {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            // Return a default structure that can be safely merged\n            if (filePath.endsWith('permissions.json')) return [];\n            if (filePath.endsWith('users.json')) return [];\n            if (filePath.endsWith('module-settings.json')) return { modules: [] }; \n            if (filePath.endsWith('user-overrides.json')) return [];\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function getPermissions(): Promise<FeaturePermission[]> {\n     const savedPermissions = await readData(permissionsFilePath);\n     // Merge saved permissions with the default structure to ensure all features are listed\n    const allPermissions = featurePermissions.map(feature => {\n        const savedFeature = savedPermissions.find((p: any) => p.feature === feature.feature);\n        const actions = feature.actions.map(action => {\n        const savedAction = savedFeature?.actions.find((a: any) => a.action === action.action);\n        return {\n            ...action,\n            allowedRoles: savedAction ? savedAction.allowedRoles : action.allowedRoles,\n        };\n        });\n        return {\n        ...feature,\n        actions,\n        };\n    });\n    return allPermissions;\n}\n\nexport async function savePermissions(permissions: FeaturePermission[]) {\n    try {\n        await fs.writeFile(permissionsFilePath, JSON.stringify(permissions, null, 2), 'utf-8');\n        revalidatePath('/admin/access-control');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save permissions:', error);\n        return { success: false, error: 'Failed to save permissions.' };\n    }\n}\n\nexport async function updatePermission(featureName: string, actionName: string, role: string, isChecked: boolean) {\n    const currentPermissions = await getPermissions();\n    const feature = currentPermissions.find(f => f.feature === featureName);\n    if (feature) {\n        const action = feature.actions.find(a => a.action === actionName);\n        if (action) {\n            if (isChecked) {\n                if (!action.allowedRoles.includes(role)) {\n                    action.allowedRoles.push(role);\n                }\n            } else {\n                action.allowedRoles = action.allowedRoles.filter(r => r !== role);\n            }\n        }\n    }\n    return await savePermissions(currentPermissions);\n}\n\n\nexport async function getRoles(): Promise<string[]> {\n    try {\n        const users: UserRole[] = await readData(usersFilePath);\n        const allRoles = users.map(u => u.role);\n        // Add default roles that might not be in use yet\n        const defaultRoles = ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User', 'Developer'];\n        const uniqueRoles = Array.from(new Set([...allRoles, ...defaultRoles]));\n        return uniqueRoles;\n    } catch (error) {\n        console.error(\"Failed to read user roles\", error);\n        return ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User', 'Developer'];\n    }\n}\n\nexport type UserOverride = {\n    email: string;\n    allowedModules: string[];\n}\n\nexport async function getUserOverrides(): Promise<UserOverride[]> {\n    return (await readData(userOverridesFilePath)) as UserOverride[];\n}\n\nexport async function saveUserOverrides(overrides: UserOverride[]) {\n     try {\n        await fs.writeFile(userOverridesFilePath, JSON.stringify(overrides, null, 2), 'utf-8');\n        revalidatePath('/', 'layout');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save user overrides:', error);\n        return { success: false, error: 'Failed to save user overrides.' };\n    }\n}\n\n\nexport async function getCombinedAccessControlData() {\n    try {\n        const [permissions, moduleSettings, userOverrides] = await Promise.all([\n            getPermissions(),\n            readData(moduleSettingsFilePath) as Promise<ModuleSettings>,\n            getUserOverrides()\n        ]);\n        return { success: true, permissions, moduleSettings, userOverrides };\n    } catch(error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 954, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/cheque-management/schema.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Schema for individual cheques\nexport const chequeSchema = z.object({\n  id: z.string(),\n  type: z.enum(['Incoming', 'Outgoing']),\n  party: z.string(),\n  bankName: z.string(),\n  chequeNo: z.string(),\n  dueDate: z.string(),\n  amount: z.number(),\n  status: z.enum(['In Hand', 'Deposited', 'Cleared', 'Returned', 'Cancelled']),\n});\n\nexport const chequeBookSchema = z.object({\n    id: z.string(),\n    bankName: z.string(),\n    bookNo: z.string(),\n    chequeStartNo: z.number(),\n    chequeEndNo: z.number(),\n    noOfLeafs: z.number(),\n    leafsUsed: z.number().optional().default(0),\n    status: z.enum(['Active', 'Finished', 'Cancelled']),\n});\n\nexport const chequeLeafSchema = z.object({\n    chequeNo: z.string(),\n    bookNo: z.string(),\n    bankName: z.string(),\n    status: z.enum(['Used', 'Unused', 'Cancelled']),\n    date: z.string().optional(),\n    partyName: z.string().optional(),\n    property: z.string().optional(),\n    unitCode: z.string().optional(),\n    amount: z.number().optional(),\n});\n\nexport type Cheque = z.infer<typeof chequeSchema>;\nexport type ChequeBook = z.infer<typeof chequeBookSchema>;\nexport type ChequeLeaf = z.infer<typeof chequeLeafSchema>;\n"],"names":[],"mappings":";;;;;;;;AACA;;AAGO,MAAM,eAAe,uKAAC,CAAC,MAAM,CAAC;IACnC,IAAI,uKAAC,CAAC,MAAM;IACZ,MAAM,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAY;KAAW;IACrC,OAAO,uKAAC,CAAC,MAAM;IACf,UAAU,uKAAC,CAAC,MAAM;IAClB,UAAU,uKAAC,CAAC,MAAM;IAClB,SAAS,uKAAC,CAAC,MAAM;IACjB,QAAQ,uKAAC,CAAC,MAAM;IAChB,QAAQ,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAW;QAAa;QAAW;QAAY;KAAY;AAC7E;AAEO,MAAM,mBAAmB,uKAAC,CAAC,MAAM,CAAC;IACrC,IAAI,uKAAC,CAAC,MAAM;IACZ,UAAU,uKAAC,CAAC,MAAM;IAClB,QAAQ,uKAAC,CAAC,MAAM;IAChB,eAAe,uKAAC,CAAC,MAAM;IACvB,aAAa,uKAAC,CAAC,MAAM;IACrB,WAAW,uKAAC,CAAC,MAAM;IACnB,WAAW,uKAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;IACzC,QAAQ,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAU;QAAY;KAAY;AACtD;AAEO,MAAM,mBAAmB,uKAAC,CAAC,MAAM,CAAC;IACrC,UAAU,uKAAC,CAAC,MAAM;IAClB,QAAQ,uKAAC,CAAC,MAAM;IAChB,UAAU,uKAAC,CAAC,MAAM;IAClB,QAAQ,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAU;KAAY;IAC9C,MAAM,uKAAC,CAAC,MAAM,GAAG,QAAQ;IACzB,WAAW,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,QAAQ,uKAAC,CAAC,MAAM,GAAG,QAAQ;AAC/B","debugId":null}},
    {"offset": {"line": 1016, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/cheque-management/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { Cheque, chequeSchema, ChequeBook, chequeBookSchema, ChequeLeaf } from './schema';\n\nconst chequesFilePath = path.join(process.cwd(), 'src/data/cheques-data.json');\nconst chequeBooksFilePath = path.join(process.cwd(), 'src/data/cheque-books-data.json');\n\nasync function readData(filePath: string) {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeCheques(data: Cheque[]) {\n    await fs.writeFile(chequesFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nasync function writeChequeBooks(data: ChequeBook[]) {\n    await fs.writeFile(chequeBooksFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getCheques(filters: { party?: string; status?: string } = {}) {\n    let cheques = await readData(chequesFilePath);\n    if (filters.party) {\n        cheques = cheques.filter(cheque => cheque.partyName.toLowerCase().includes(filters.party!.toLowerCase()));\n    }\n    if (filters.status) {\n        cheques = cheques.filter(cheque => cheque.status === filters.status);\n    }\n    return cheques;\n}\n\nexport async function addCheque(data: Omit<Cheque, 'id' | 'status'>) {\n    const validation = chequeSchema.omit({ id: true, status: true }).safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n    const allCheques = await readData(chequesFilePath);\n    const newCheque: Cheque = {\n        ...validation.data,\n        id: `CHQ-${Date.now()}`,\n        status: 'In Hand',\n    };\n    allCheques.push(newCheque);\n    await writeCheques(allCheques);\n    revalidatePath('/finance/cheque-management');\n    return { success: true };\n}\n\nexport async function depositCheques(chequeIds: string[], depositDate: string, bankAccountId: string) {\n    if (!chequeIds || chequeIds.length === 0) return { success: false, error: 'No cheques selected.' };\n    let allCheques = await readData(chequesFilePath);\n    allCheques = allCheques.map(cheque => \n        chequeIds.includes(cheque.id) \n            ? { ...cheque, status: 'Deposited', depositDate, bankAccountId } \n            : cheque\n    );\n    await writeCheques(allCheques);\n    revalidatePath('/finance/cheque-management');\n    return { success: true };\n}\n\nexport async function returnCheque(chequeId: string, returnDate: string, reason: string) {\n    let allCheques = await readData(chequesFilePath);\n    const chequeIndex = allCheques.findIndex(c => c.id === chequeId);\n    if (chequeIndex === -1) return { success: false, error: 'Cheque not found.' };\n    allCheques[chequeIndex] = { ...allCheques[chequeIndex], status: 'Returned', returnDate, returnReason: reason };\n    await writeCheques(allCheques);\n    revalidatePath('/finance/cheque-management');\n    return { success: true };\n}\n\nexport async function withdrawCheques(chequeIds: string[]) {\n    if (!chequeIds || chequeIds.length === 0) return { success: false, error: 'No cheques selected.' };\n    let allCheques = await readData(chequesFilePath);\n    allCheques = allCheques.map(cheque => chequeIds.includes(cheque.id) ? { ...cheque, status: 'Withdrawn' } : cheque);\n    await writeCheques(allCheques);\n    revalidatePath('/finance/cheque-management');\n    return { success: true };\n}\n\nexport async function getChequeBooks() {\n    return await readData(chequeBooksFilePath);\n}\n\nexport async function getChequeLeaves(filters: { bank?: string; bookNo?: string; status?: string } = {}): Promise<ChequeLeaf[]> {\n    const books = await getChequeBooks();\n    const cheques = await getCheques();\n    let leaves: ChequeLeaf[] = [];\n\n    for (const book of books) {\n        for (let i = book.chequeStartNo; i <= book.chequeEndNo; i++) {\n            const chequeNo = i.toString().padStart(6, '0');\n            const usedCheque = cheques.find(c => c.chequeNo === chequeNo && c.bookNo === book.bookNo);\n            leaves.push({\n                id: `${book.id}-${chequeNo}`,\n                chequeNo: chequeNo,\n                bookNo: book.bookNo,\n                bankName: book.bankName,\n                status: usedCheque ? 'Used' : 'Unused',\n                partyName: usedCheque?.partyName,\n                date: usedCheque?.date,\n                amount: usedCheque?.amount\n            });\n        }\n    }\n\n    if (filters.bank) {\n        leaves = leaves.filter(leaf => leaf.bankName === filters.bank);\n    }\n    if (filters.bookNo) {\n        leaves = leaves.filter(leaf => leaf.bookNo === filters.bookNo);\n    }\n    if (filters.status) {\n        leaves = leaves.filter(leaf => leaf.status === filters.status);\n    }\n\n    return leaves;\n}\n\nexport async function addChequeBook(data: Omit<ChequeBook, 'id' | 'leafsUsed'>) {\n    const validation = chequeBookSchema.omit({ id: true, leafsUsed: true }).safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n    \n    const allBooks = await getChequeBooks();\n    const newBook: ChequeBook = {\n        ...validation.data,\n        id: `CB-${Date.now()}`,\n        leafsUsed: 0,\n    };\n\n    if (allBooks.some(book => book.bookNo === newBook.bookNo)) {\n        return { success: false, error: 'A cheque book with this book number already exists.' };\n    }\n\n    allBooks.push(newBook);\n    \n    await writeChequeBooks(allBooks);\n    revalidatePath('/finance/cheque-management');\n    return { success: true };\n}\n\nexport async function updateChequeBook(data: Omit<ChequeBook, 'leafsUsed'>) {\n    const validation = chequeBookSchema.omit({ leafsUsed: true }).safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    const allBooks = await getChequeBooks();\n    const bookIndex = allBooks.findIndex(b => b.id === data.id);\n    if (bookIndex === -1) {\n        return { success: false, error: 'Cheque book not found.' };\n    }\n\n    if (allBooks.some(book => book.bookNo === data.bookNo && book.id !== data.id)) {\n        return { success: false, error: 'A cheque book with this book number already exists.' };\n    }\n    \n    const currentBook = allBooks[bookIndex];\n    allBooks[bookIndex] = {\n      ...currentBook,\n      ...validation.data,\n      id: currentBook.id,\n    };\n    \n    await writeChequeBooks(allBooks);\n    revalidatePath('/finance/cheque-management');\n    return { success: true };\n}\n\nexport async function deleteChequeBook(id: string) {\n    const allBooks = await getChequeBooks();\n    const updatedBooks = allBooks.filter(b => b.id !== id);\n    if (allBooks.length === updatedBooks.length) {\n        return { success: false, error: 'Cheque book not found.' };\n    }\n    await writeChequeBooks(updatedBooks);\n    revalidatePath('/finance/cheque-management');\n    return { success: true };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1298, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/lookups/actions.ts"],"sourcesContent":["'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\n\nconst tenantsFilePath = path.join(process.cwd(), 'src/app/tenancy/tenants/tenants-data.json');\nconst landlordsFilePath = path.join(process.cwd(), 'src/app/landlords/landlords-data.json');\nconst vendorsFilePath = path.join(process.cwd(), 'src/app/purchasing/vendors/vendors-data.json');\nconst agentsFilePath = path.join(process.cwd(), 'src/app/agents/agents-data.json');\nconst customersFilePath = path.join(process.cwd(), 'src/app/crm/customers/customers-data.json');\nconst tenancyContractsFilePath = path.join(process.cwd(), 'src/app/tenancy/contract/contracts-data.json');\nconst leaseContractsFilePath = path.join(process.cwd(), 'src/app/lease/contract/contracts-data.json');\nconst unitsFilePath = path.join(process.cwd(), 'src/app/property/units/units-data.json');\nconst roomsFilePath = path.join(process.cwd(), 'src/app/property/rooms/rooms-data.json');\n\nasync function readFileData(filePath: string) {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function getLookups() {\n    const [tenants, landlords, vendors, agents, customers, tenancyContracts, leaseContracts, units, rooms] = await Promise.all([\n        readFileData(tenantsFilePath),\n        readFileData(landlordsFilePath),\n        readFileData(vendorsFilePath),\n        readFileData(agentsFilePath),\n        readFileData(customersFilePath),\n        readFileData(tenancyContractsFilePath),\n        readFileData(leaseContractsFilePath),\n        readFileData(unitsFilePath),\n        readFileData(roomsFilePath),\n    ]);\n\n    return {\n        tenants: tenants.map((t: any) => ({ value: t.id, label: t.name, contractNo: t.contractNo })),\n        landlords: landlords.map((l: any) => ({ value: l.id, label: l.name })),\n        vendors: vendors.map((v: any) => ({ value: v.id, label: v.vendorName })),\n        agents: agents.map((a: any) => ({ value: a.id, label: a.name })),\n        customers: customers.map((c: any) => ({ value: c.id, label: c.name })),\n        tenancyContracts: tenancyContracts.map((c: any) => ({ value: c.contractNo, label: c.contractNo, property: c.property, unitCode: c.unitCode, roomCode: c.roomCode, partyName: c.tenantName, paymentSchedule: c.paymentSchedule })),\n        leaseContracts: leaseContracts.map((c: any) => ({ value: c.contractNo, label: c.contractNo, property: c.property, unitCode: c.unitCode, roomCode: c.roomCode, partyName: c.landlordName, paymentSchedule: c.paymentSchedule })),\n        units: units.map((u: any) => ({ value: u.unitCode, label: u.unitCode, propertyCode: u.propertyCode })),\n        rooms: rooms.map((r: any) => ({ value: r.roomCode, label: r.roomCode, unitCode: r.unitCode, propertyCode: r.propertyCode }))\n    };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1404, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/banking/schema.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\nexport const bankAccountSchema = z.object({\n  id: z.string(),\n  accountName: z.string().min(1, 'Account name is required.'),\n  bankName: z.string().min(1, 'Bank name is required.'),\n  accountNumber: z.string().min(1, 'Account number is required.'),\n  balance: z.number().min(0, 'Balance cannot be negative.'),\n  currency: z.string().min(3, 'Currency code is required.').default('AED'),\n});\n\nexport type BankAccount = z.infer<typeof bankAccountSchema>;\n"],"names":[],"mappings":";;;;AACA;;AAEO,MAAM,oBAAoB,uKAAC,CAAC,MAAM,CAAC;IACxC,IAAI,uKAAC,CAAC,MAAM;IACZ,aAAa,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,UAAU,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,eAAe,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACjC,SAAS,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC3B,UAAU,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,8BAA8B,OAAO,CAAC;AACpE","debugId":null}},
    {"offset": {"line": 1422, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/cron/generate-invoices/route.ts"],"sourcesContent":["\n\nimport { NextResponse } from 'next/server';\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { format, startOfMonth, endOfMonth, isWithinInterval, parseISO, addMonths, getMonth, getYear, getDate } from 'date-fns';\nimport { type Tenant } from '@/app/tenancy/tenants/schema';\nimport { type Invoice } from '@/app/tenancy/customer/invoice/schema';\n// import { saveSubscriptionInvoice } from '@/app/tenancy/customer/invoice/actions';\nimport { getWorkflowSettings } from '@/app/admin/workflow-settings/actions';\n\nconst tenantsFilePath = path.join(process.cwd(), 'src/app/tenancy/tenants/tenants-data.json');\nconst invoicesFilePath = path.join(process.cwd(), 'src/app/tenancy/tenants/invoice/subscription-invoices-data.json');\n\nasync function readData<T>(filePath: string): Promise<T[]> {\n    try {\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function generateInvoices(forceRun = false) {\n  try {\n    // const workflowSettings = await getWorkflowSettings();\n    const today = new Date();\n\n    // if (!forceRun) {\n    //     if (!workflowSettings.automaticInvoiceGenerationEnabled) {\n    //       return { success: true, message: 'Automatic invoice generation is disabled. No invoices were created.' };\n    //     }\n    //     if (getDate(today) !== workflowSettings.invoiceGenerationDay) {\n    //         return { success: true, message: `Skipping invoice generation. Today is not day ${workflowSettings.invoiceGenerationDay}.`};\n    //     }\n    // }\n    \n    const tenants = await readData<{tenantData: Tenant}>(tenantsFilePath);\n    const existingInvoices = await readData<Invoice>(invoicesFilePath);\n\n    const activeSubscriptions = tenants.filter(t => t.tenantData.isSubscriptionActive && t.tenantData.subscriptionAmount > 0);\n    \n    const createdFor: string[] = [];\n\n    for (const tenant of activeSubscriptions) {\n        // for (let i = 0; i < workflowSettings.monthsToGenerate; i++) {\n            const targetMonthDate = addMonths(today, 1);\n            const targetMonthKey = format(targetMonthDate, 'yyyy-MM');\n\n            const hasInvoiceForTargetMonth = existingInvoices.some(inv => \n                inv.customerCode === tenant.tenantData.code &&\n                format(parseISO(inv.invoiceDate), 'yyyy-MM') === targetMonthKey\n            );\n            \n            if (!hasInvoiceForTargetMonth) {\n                const tenantData = tenant.tenantData;\n                const subscriptionAmount = tenantData.subscriptionAmount || 0;\n                \n                const newInvoiceData: Omit<Invoice, 'id' | 'amountPaid'> = {\n                    invoiceNo: '', // Will be generated by saveInvoice\n                    customerCode: tenantData.code,\n                    customerName: tenantData.name,\n                    property: tenantData.property || '',\n                    unitCode: tenantData.unitCode || '',\n                    roomCode: tenantData.roomCode || '',\n                    invoiceDate: format(targetMonthDate, 'yyyy-MM-dd'),\n                    dueDate: format(endOfMonth(targetMonthDate), 'yyyy-MM-dd'),\n                    items: [{ \n                        id: `item-${Date.now()}`, \n                        description: `${tenantData.subscriptionStatus} Subscription for ${format(targetMonthDate, 'MMMM yyyy')}`, \n                        quantity: 1, \n                        unitPrice: subscriptionAmount, \n                        total: subscriptionAmount \n                    }],\n                    subTotal: subscriptionAmount,\n                    tax: 0,\n                    taxType: 'exclusive',\n                    taxRate: 0,\n                    total: subscriptionAmount,\n                    notes: `Automatically generated subscription invoice for ${format(targetMonthDate, 'MMMM yyyy')}.`,\n                    status: 'Sent', // Assume invoices are sent immediately\n                };\n\n                // await saveSubscriptionInvoice({ ...newInvoiceData, isAutoInvoiceNo: true }, 'Cron Job');\n                createdFor.push(`${tenantData.name} (for ${format(targetMonthDate, 'MMM yyyy')})`);\n            }\n        // }\n    }\n    \n    const message = createdFor.length > 0 \n        ? `Created ${createdFor.length} new invoices for: ${createdFor.join(', ')}.`\n        : 'No new invoices needed at this time.';\n        \n    return { success: true, message };\n\n  } catch (error) {\n    console.error('Cron job for invoice generation failed:', error);\n    throw new Error('Failed to generate invoices.');\n  }\n}\n\n\nexport async function GET(request: Request) {\n    try {\n        const result = await generateInvoices();\n        return NextResponse.json(result);\n    } catch(e: any) {\n        return NextResponse.json({ success: false, error: e.message }, { status: 500 });\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1534, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/workflow-settings/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { generateInvoices } from '@/app/api/cron/generate-invoices/route';\n\n\nexport type WorkflowSettings = {\n    approvalProcessEnabled: boolean;\n    automaticInvoiceGenerationEnabled: boolean;\n    invoiceGenerationDay: number;\n    monthsToGenerate: number;\n};\n\nconst settingsFilePath = path.join(process.cwd(), 'src/app/admin/workflow-settings/settings.json');\n\nconst defaultSettings: WorkflowSettings = {\n    approvalProcessEnabled: true,\n    automaticInvoiceGenerationEnabled: true,\n    invoiceGenerationDay: 1,\n    monthsToGenerate: 1,\n};\n\nexport async function getWorkflowSettings(): Promise<WorkflowSettings> {\n    try {\n        await fs.access(settingsFilePath);\n        const data = await fs.readFile(settingsFilePath, 'utf-8');\n        return { ...defaultSettings, ...JSON.parse(data) };\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return defaultSettings;\n        }\n        throw error;\n    }\n}\n\nexport async function saveWorkflowSettings(data: WorkflowSettings) {\n    try {\n        await fs.writeFile(settingsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save workflow settings:', error);\n        return { success: false, error: 'Failed to save settings.' };\n    }\n}\n\nexport async function runInvoiceGeneration() {\n    try {\n        // Directly call the logic from the cron route\n        const result = await generateInvoices(true); // Pass true to force run for simulation\n        return { success: true, message: result.message };\n    } catch (error) {\n        console.error('Manual invoice generation failed:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;AAGA;AACA;AACA;;;;;;AAUA,MAAM,mBAAmB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAElD,MAAM,kBAAoC;IACtC,wBAAwB;IACxB,mCAAmC;IACnC,sBAAsB;IACtB,kBAAkB;AACtB;AAEO,eAAe;IAClB,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,kBAAkB;QACjD,OAAO;YAAE,GAAG,eAAe;YAAE,GAAG,KAAK,KAAK,CAAC,KAAK;QAAC;IACrD,EAAE,OAAO,OAAO;QACZ,IAAI,AAAC,MAAgC,IAAI,KAAK,UAAU;YACpD,OAAO;QACX;QACA,MAAM;IACV;AACJ;AAEO,eAAe,qBAAqB,IAAsB;IAC7D,IAAI;QACA,MAAM,yGAAE,CAAC,SAAS,CAAC,kBAAkB,KAAK,SAAS,CAAC,MAAM,MAAM,IAAI;QACpE,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO;YAAE,SAAS;YAAO,OAAO;QAA2B;IAC/D;AACJ;AAEO,eAAe;IAClB,IAAI;QACA,8CAA8C;QAC9C,MAAM,SAAS,MAAM,IAAA,8KAAgB,EAAC,OAAO,wCAAwC;QACrF,OAAO;YAAE,SAAS;YAAM,SAAS,OAAO,OAAO;QAAC;IACpD,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO;YAAE,SAAS;YAAO,OAAO,AAAC,MAAgB,OAAO,IAAI;QAA4B;IAC5F;AACJ;;;IAhCsB;IAaA;IAUA;;AAvBA,+OAAA;AAaA,+OAAA;AAUA,+OAAA","debugId":null}},
    {"offset": {"line": 1616, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/banking/actions.ts"],"sourcesContent":["'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { bankAccountSchema, type BankAccount } from './schema';\nimport { type Payment, paymentSchema } from '../payment/schema';\nimport { type Cheque } from '../cheque-deposit/schema';\nimport { getWorkflowSettings } from '@/app/admin/workflow-settings/actions';\nimport { applyFinancialImpact } from '@/app/workflow/actions';\n\n\nconst accountsFilePath = path.join(process.cwd(), 'src/app/finance/banking/accounts-data.json');\nconst paymentsFilePath = path.join(process.cwd(), 'src/app/finance/payment/payments-data.json');\nconst pettyCashFilePath = path.join(process.cwd(), 'src/app/finance/banking/petty-cash.json');\nconst chequesFilePath = path.join(process.cwd(), 'src/app/finance/cheque-deposit/cheques-data.json');\n\n\nasync function readAccounts(): Promise<BankAccount[]> {\n    try {\n        await fs.access(accountsFilePath);\n        const data = await fs.readFile(accountsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await writeAccounts([]);\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeAccounts(data: BankAccount[]) {\n    await fs.writeFile(accountsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function readPettyCash() {\n    try {\n        await fs.access(pettyCashFilePath);\n        const data = await fs.readFile(pettyCashFilePath, 'utf-8');\n        if (!data || (Array.isArray(data) && data.length === 0)) return { balance: 0 };\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return { balance: 0 };\n        }\n        throw error;\n    }\n}\n\nexport async function writePettyCash(data: { balance: number }) {\n    await fs.writeFile(pettyCashFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\n\nexport async function getBankAccounts() {\n    const storedAccounts = await readAccounts();\n    const pettyCashData = await readPettyCash();\n    const pettyCashAccount: BankAccount = {\n        id: \"acc_3\",\n        accountName: \"Petty Cash\",\n        bankName: \"Cash on Hand\",\n        accountNumber: \"N/A\",\n        balance: pettyCashData.balance,\n        currency: \"AED\",\n    };\n    return [pettyCashAccount, ...storedAccounts];\n}\n\n\nconst formSchema = bankAccountSchema.omit({ id: true });\n\nexport async function saveBankAccount(data: z.infer<typeof bankAccountSchema>, isNew: boolean) {\n    const validation = bankAccountSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allAccounts = await readAccounts();\n        \n        if (isNew) {\n            const newAccount: BankAccount = {\n                ...validation.data,\n                id: `acc_${Date.now()}`,\n            };\n            allAccounts.push(newAccount);\n        } else {\n            const index = allAccounts.findIndex(acc => acc.id === data.id);\n            if (index === -1) {\n                return { success: false, error: 'Account not found.' };\n            }\n            allAccounts[index] = validation.data;\n        }\n\n        await writeAccounts(allAccounts);\n        revalidatePath('/finance/banking');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nexport async function deleteBankAccount(accountId: string) {\n     try {\n        if (accountId === 'acc_3') {\n            return { success: true }; // Silently succeed for petty cash\n        }\n        \n        const allAccounts = await readAccounts();\n        const updatedAccounts = allAccounts.filter(acc => acc.id !== accountId);\n        \n        if (allAccounts.length === updatedAccounts.length) {\n            return { success: false, error: 'Account not found.' };\n        }\n\n        await writeAccounts(updatedAccounts);\n        revalidatePath('/finance/banking');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nasync function readAllPayments(): Promise<Payment[]> {\n    try {\n        const paymentsData = await fs.readFile(paymentsFilePath, 'utf-8');\n        return JSON.parse(paymentsData);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        console.error('Failed to read payments file:', error);\n        return [];\n    }\n}\n\nasync function writePayments(data: Payment[]) {\n    await fs.writeFile(paymentsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\n\nasync function readAllCheques(): Promise<Cheque[]> {\n    try {\n        const chequesData = await fs.readFile(chequesFilePath, 'utf-8');\n        return JSON.parse(chequesData);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        console.error('Failed to read cheques file:', error);\n        return [];\n    }\n}\n\n\nexport async function getAllTransactions(): Promise<Payment[]> {\n    const payments = await readAllPayments();\n    \n    const allTransactions = [...payments].filter(p => p.currentStatus === 'POSTED');\n\n    return allTransactions.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n}\n\nexport async function getTransactionsForAccount(accountId: string): Promise<Payment[]> {\n     try {\n        const allTransactions = await readAllPayments();\n        \n        const accountPayments = allTransactions.filter((p: Payment) => {\n            if (p.currentStatus !== 'POSTED') return false; // Only show posted transactions\n            \n            if (accountId === 'acc_3') { // Petty Cash account\n                return p.paymentFrom === 'Petty Cash';\n            }\n            return p.bankAccountId === accountId;\n        });\n\n        return accountPayments.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    } catch (error) {\n        console.error('Failed to read payments file:', error);\n        return [];\n    }\n}\n\nconst fundTransferSchema = z.object({\n    fromAccountId: z.string().min(1, \"From account is required.\"),\n    toAccountId: z.string().min(1, \"To account is required.\"),\n    amount: z.number().min(0.01, \"Amount must be positive.\"),\n    date: z.string().min(1, \"Date is required.\"),\n    remarks: z.string().optional(),\n});\n\n\nexport async function transferFunds(data: z.infer<typeof fundTransferSchema>) {\n    const validation = fundTransferSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    const { fromAccountId, toAccountId, amount, date, remarks } = validation.data;\n\n    if (fromAccountId === toAccountId) {\n        return { success: false, error: \"From and To accounts cannot be the same.\" };\n    }\n    \n    try {\n        const workflowSettings = await getWorkflowSettings();\n        const initialStatus = workflowSettings.approvalProcessEnabled ? 'DRAFT' : 'POSTED';\n\n        if (initialStatus === 'POSTED') {\n            // If direct posting, do the balance update. Otherwise, it happens on final approval.\n            const allAccounts = await readAccounts();\n            const pettyCash = await readPettyCash();\n            \n            const fromAccount = fromAccountId === 'acc_3' ? { ...pettyCash, id: 'acc_3', accountName: 'Petty Cash' } : allAccounts.find(acc => acc.id === fromAccountId);\n            const toAccount = toAccountId === 'acc_3' ? { ...pettyCash, id: 'acc_3', accountName: 'Petty Cash' } : allAccounts.find(acc => acc.id === toAccountId);\n\n            if (!fromAccount || !toAccount) {\n                return { success: false, error: \"One or both accounts not found.\" };\n            }\n            \n            if(fromAccount.balance < amount) {\n                return { success: false, error: `Insufficient funds in ${fromAccount.accountName}.` };\n            }\n\n            if (fromAccountId === 'acc_3') {\n                pettyCash.balance -= amount;\n            } else {\n                const fromIndex = allAccounts.findIndex(acc => acc.id === fromAccountId);\n                allAccounts[fromIndex].balance -= amount;\n            }\n            \n            if (toAccountId === 'acc_3') {\n                pettyCash.balance += amount;\n            } else {\n                const toIndex = allAccounts.findIndex(acc => acc.id === toAccountId);\n                allAccounts[toIndex].balance += amount;\n            }\n            \n            await writeAccounts(allAccounts);\n            await writePettyCash(pettyCash);\n        }\n\n        // Create payment records regardless of workflow status\n        const allPayments = await readAllPayments();\n        const referenceNo = `TRF-${Date.now()}`;\n        const fromAccountName = fromAccountId === 'acc_3' ? 'Petty Cash' : (await readAccounts()).find(a => a.id === fromAccountId)?.accountName || 'Bank';\n        const toAccountName = toAccountId === 'acc_3' ? 'Petty Cash' : (await readAccounts()).find(a => a.id === toAccountId)?.accountName || 'Bank';\n        \n        const paymentRecord: Payment = {\n            id: `PAY-${Date.now()}-OUT`,\n            type: 'Payment',\n            date: date,\n            partyType: 'Vendor', // Internal Transfer\n            partyName: `Transfer to ${toAccountName}`,\n            amount: amount,\n            paymentMethod: fromAccountId === 'acc_3' ? 'Cash' : 'Bank Transfer',\n            bankAccountId: fromAccountId,\n            paymentFrom: fromAccountId === 'acc_3' ? 'Petty Cash' : 'Bank',\n            referenceNo,\n            remarks,\n            status: 'Paid',\n            currentStatus: initialStatus,\n        };\n\n         const receiptRecord: Payment = {\n            id: `PAY-${Date.now()}-IN`,\n            type: 'Receipt',\n            date: date,\n            partyType: 'Customer', // Internal Transfer\n            partyName: `Transfer from ${fromAccountName}`,\n            amount: amount,\n            paymentMethod: toAccountId === 'acc_3' ? 'Cash' : 'Bank Transfer',\n            bankAccountId: toAccountId,\n            paymentFrom: toAccountId === 'acc_3' ? 'Petty Cash' : 'Bank',\n            referenceNo,\n            remarks,\n            status: 'Received',\n            currentStatus: initialStatus,\n        };\n        \n        allPayments.push(paymentRecord, receiptRecord);\n        await writePayments(allPayments);\n\n        revalidatePath('/finance/banking');\n        revalidatePath('/workflow');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nexport async function createDepositVoucher(data: { bankAccountId: string, depositDate: string, chequeIds: string[] }) {\n    const { bankAccountId, depositDate, chequeIds } = data;\n\n    try {\n        const allCheques = await readAllCheques();\n        const chequesToDeposit = allCheques.filter(c => chequeIds.includes(c.id));\n\n        if (chequesToDeposit.length === 0) {\n            return { success: false, error: 'No valid cheques found for deposit.' };\n        }\n\n        const totalAmount = chequesToDeposit.reduce((sum, cheque) => sum + cheque.amount, 0);\n        const remarks = `Deposit of ${chequesToDeposit.length} cheques. Cheque numbers: ${chequesToDeposit.map(c => c.chequeNo).join(', ')}`;\n\n        const allAccounts = await readAccounts();\n        const accountIndex = allAccounts.findIndex(acc => acc.id === bankAccountId);\n\n        if (accountIndex === -1) {\n            return { success: false, error: 'Bank account not found.' };\n        }\n\n        allAccounts[accountIndex].balance += totalAmount;\n        await writeAccounts(allAccounts);\n\n        const allPayments = await readAllPayments();\n        const newReceipt: Payment = {\n            id: `RCPT-${Date.now()}`,\n            type: 'Receipt',\n            date: depositDate,\n            partyType: 'Customer',\n            partyName: 'Cheque Deposit',\n            amount: totalAmount,\n            paymentMethod: 'Cheque',\n            bankAccountId: bankAccountId,\n            paymentFrom: 'Bank',\n            referenceNo: `DEP-${Date.now()}`,\n            remarks: remarks,\n            status: 'Received',\n            currentStatus: 'POSTED', \n        };\n\n        allPayments.push(newReceipt);\n        await writePayments(allPayments);\n\n        revalidatePath('/finance/banking');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2017, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/finance/cheque-management/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCompanyProfile as '00b6be478acfdf6b7794a7b34be547b3606ebfd51c'} from 'ACTIONS_MODULE0'\nexport {saveCompanyProfile as '40c9350172a0cc49767c134a7e5ed44affe0683337'} from 'ACTIONS_MODULE0'\nexport {checkLicenseStatus as '008a29e84bd260b304f797613c7c39c01029f96950'} from 'ACTIONS_MODULE1'\nexport {getCurrencySettings as '00bf02fbdbf2069a58be66f4c215b7083c555f2e0f'} from 'ACTIONS_MODULE2'\nexport {getCombinedAccessControlData as '00484ec9aa59cb806ed9f49233b1daa442fefc4db8'} from 'ACTIONS_MODULE3'\nexport {getCheques as '40fa0f0f6e4ca502c41ea829e3c188ad0318199c36'} from 'ACTIONS_MODULE4'\nexport {getChequeBooks as '0083b8824699ae6ac7b832d5be692bd6b1a92de913'} from 'ACTIONS_MODULE4'\nexport {getChequeLeaves as '40edad29825e6598a31c485a3630fdf400b87296fb'} from 'ACTIONS_MODULE4'\nexport {addCheque as '408e5533152c2fcb2c9b26758b13ec3b4cd8609477'} from 'ACTIONS_MODULE4'\nexport {getLookups as '00d1ca97fa72f592f5eb6b08e536cb05b366dbc7d4'} from 'ACTIONS_MODULE5'\nexport {depositCheques as '704e299648a5a083f96fb7f6d6de2f3d505467c5e7'} from 'ACTIONS_MODULE4'\nexport {getBankAccounts as '006a88420b11906d11a02e60bbc1d08a3ff381a608'} from 'ACTIONS_MODULE6'\nexport {createDepositVoucher as '4087b09237d80718e6c7722daca35c3b40e916d9fd'} from 'ACTIONS_MODULE6'\nexport {returnCheque as '70a30e1e4c6d58e6b6336e829e4761825fde617445'} from 'ACTIONS_MODULE4'\nexport {withdrawCheques as '4038890961408ac9b962fcb490dafbf32f28dc4519'} from 'ACTIONS_MODULE4'\nexport {addChequeBook as '407fb2ab47c0256e98610a300e7e0f152753db4767'} from 'ACTIONS_MODULE4'\nexport {updateChequeBook as '40feaeab3837765cc74381ee0df7e63bbeaa0b4a76'} from 'ACTIONS_MODULE4'\n"],"names":[],"mappings":";AAAA;AAEA;AACA;AACA;AACA;AAIA;AAEA","debugId":null}},
    {"offset": {"line": 2102, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/cheque-management/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/finance/cheque-management/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/finance/cheque-management/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA8S,GAC3U,4EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2116, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/cheque-management/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/finance/cheque-management/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/finance/cheque-management/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}