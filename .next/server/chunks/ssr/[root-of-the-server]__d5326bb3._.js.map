{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/license.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { differenceInDays, addDays, format, parseISO } from 'date-fns';\n\nconst licenseFilePath = path.join(process.cwd(), 'license.json');\nconst TRIAL_PERIOD_DAYS = 30;\n\ntype LicenseInfo = {\n    trialStartDate: string;\n};\n\nexport type LicenseStatus = {\n    isActive: boolean;\n    isTrial: boolean;\n    daysRemaining: number;\n    expiryDate: string;\n};\n\nasync function readLicenseFile(): Promise<LicenseInfo | null> {\n    try {\n        await fs.access(licenseFilePath);\n        const data = await fs.readFile(licenseFilePath, 'utf-8');\n        // Basic validation in case the file is empty or corrupted\n        if (!data) return null;\n        return JSON.parse(data);\n    } catch (error) {\n        return null; // File doesn't exist or is unreadable\n    }\n}\n\nasync function createLicenseFile(): Promise<LicenseInfo> {\n    const trialStartDate = new Date().toISOString();\n    const newLicense: LicenseInfo = { trialStartDate };\n    await fs.writeFile(licenseFilePath, JSON.stringify(newLicense, null, 2), 'utf-8');\n    return newLicense;\n}\n\nexport async function checkLicenseStatus(): Promise<LicenseStatus> {\n    let license = await readLicenseFile();\n\n    if (!license) {\n        license = await createLicenseFile();\n    }\n    \n    const startDate = parseISO(license.trialStartDate);\n    const now = new Date();\n    const expiryDate = addDays(startDate, TRIAL_PERIOD_DAYS);\n    const daysRemaining = differenceInDays(expiryDate, now);\n\n    const isActive = daysRemaining >= 0;\n\n    return {\n        isActive,\n        isTrial: true, // For now, we only have a trial license\n        daysRemaining: Math.max(0, daysRemaining),\n        expiryDate: format(expiryDate, 'PPP'),\n    };\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;AAEA,MAAM,kBAAkB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AACjD,MAAM,oBAAoB;AAa1B,eAAe;IACX,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,iBAAiB;QAChD,0DAA0D;QAC1D,IAAI,CAAC,MAAM,OAAO;QAClB,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAO,OAAO;QACZ,OAAO,MAAM,sCAAsC;IACvD;AACJ;AAEA,eAAe;IACX,MAAM,iBAAiB,IAAI,OAAO,WAAW;IAC7C,MAAM,aAA0B;QAAE;IAAe;IACjD,MAAM,yGAAE,CAAC,SAAS,CAAC,iBAAiB,KAAK,SAAS,CAAC,YAAY,MAAM,IAAI;IACzE,OAAO;AACX;AAEO,eAAe;IAClB,IAAI,UAAU,MAAM;IAEpB,IAAI,CAAC,SAAS;QACV,UAAU,MAAM;IACpB;IAEA,MAAM,YAAY,IAAA,oJAAQ,EAAC,QAAQ,cAAc;IACjD,MAAM,MAAM,IAAI;IAChB,MAAM,aAAa,IAAA,kJAAO,EAAC,WAAW;IACtC,MAAM,gBAAgB,IAAA,oKAAgB,EAAC,YAAY;IAEnD,MAAM,WAAW,iBAAiB;IAElC,OAAO;QACH;QACA,SAAS;QACT,eAAe,KAAK,GAAG,CAAC,GAAG;QAC3B,YAAY,IAAA,gKAAM,EAAC,YAAY;IACnC;AACJ;;;IApBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/currency/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\n\nexport type CurrencySettings = {\n    currencyCode: string;\n};\n\nconst settingsFilePath = path.join(process.cwd(), 'src/app/admin/currency/settings.json');\n\nconst defaultSettings: CurrencySettings = {\n    currencyCode: 'AED'\n};\n\nexport async function getCurrencySettings(): Promise<CurrencySettings> {\n    try {\n        await fs.access(settingsFilePath);\n        const data = await fs.readFile(settingsFilePath, 'utf-8');\n        return { ...defaultSettings, ...JSON.parse(data) };\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return defaultSettings;\n        }\n        throw error;\n    }\n}\n\nconst currencySettingsSchema = z.object({\n    currencyCode: z.string().length(3, \"Currency code must be 3 characters long.\").toUpperCase(),\n});\n\nexport async function saveCurrencySettings(data: CurrencySettings) {\n    const validation = currencySettingsSchema.safeParse(data);\n\n    if (!validation.success) {\n        return { success: false, error: validation.error.errors[0].message };\n    }\n\n    try {\n        await fs.writeFile(settingsFilePath, JSON.stringify(validation.data, null, 2), 'utf-8');\n        revalidatePath('/', 'layout'); // Revalidate all pages\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save currency settings:', error);\n        return { success: false, error: 'Failed to save settings.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;;;;;;;AAMA,MAAM,mBAAmB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAElD,MAAM,kBAAoC;IACtC,cAAc;AAClB;AAEO,eAAe;IAClB,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,kBAAkB;QACjD,OAAO;YAAE,GAAG,eAAe;YAAE,GAAG,KAAK,KAAK,CAAC,KAAK;QAAC;IACrD,EAAE,OAAO,OAAO;QACZ,IAAI,AAAC,MAAgC,IAAI,KAAK,UAAU;YACpD,OAAO;QACX;QACA,MAAM;IACV;AACJ;AAEA,MAAM,yBAAyB,uKAAC,CAAC,MAAM,CAAC;IACpC,cAAc,uKAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,4CAA4C,WAAW;AAC9F;AAEO,eAAe,qBAAqB,IAAsB;IAC7D,MAAM,aAAa,uBAAuB,SAAS,CAAC;IAEpD,IAAI,CAAC,WAAW,OAAO,EAAE;QACrB,OAAO;YAAE,SAAS;YAAO,OAAO,WAAW,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO;QAAC;IACvE;IAEA,IAAI;QACA,MAAM,yGAAE,CAAC,SAAS,CAAC,kBAAkB,KAAK,SAAS,CAAC,WAAW,IAAI,EAAE,MAAM,IAAI;QAC/E,IAAA,+IAAc,EAAC,KAAK,WAAW,uBAAuB;QACtD,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO;YAAE,SAAS;YAAO,OAAO;QAA2B;IAC/D;AACJ;;;IAhCsB;IAiBA;;AAjBA,+OAAA;AAiBA,+OAAA","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/access-control/permissions.ts"],"sourcesContent":["\nexport type PermissionAction = {\n  action: string;\n  description: string;\n  allowedRoles: string[];\n};\n\nexport type FeaturePermission = {\n  feature: string;\n  description: string;\n  actions: PermissionAction[];\n};\n\nexport const featurePermissions: FeaturePermission[] = [\n  {\n    feature: 'Properties',\n    description: 'Manage property listings, details, and associated units/rooms.',\n    actions: [\n      { action: 'view', description: 'View property list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit property information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a property', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Units',\n    description: 'Manage individual units within a property.',\n    actions: [\n      { action: 'view', description: 'View unit list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit unit information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a unit', allowedRoles: ['Super Admin'] },\n    ],\n  },\n   {\n    feature: 'Rent-A-Car',\n    description: 'Manage vehicle rental agreements.',\n    actions: [\n      { action: 'view', description: 'View rental agreements', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete rental agreements', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n   {\n    feature: 'Car Sales',\n    description: 'Manage vehicle buying and selling operations.',\n    actions: [\n      { action: 'view', description: 'View vehicle inventory and sales', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add, edit, and delete vehicle records', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Lease Contracts',\n    description: 'Manage lease agreements with landlords.',\n    actions: [\n      { action: 'view', description: 'View lease agreements', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'manage', description: 'Create, edit, and delete lease agreements', allowedRoles: ['Super Admin', 'Admin'] },\n    ]\n  },\n  {\n    feature: 'Project Management',\n    description: 'Manage all aspects of projects, including billing, sub-contractors, and resource allocation.',\n    actions: [\n      { action: 'view', description: 'View project list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'manage', description: 'Create, edit, and delete projects', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'manage_billing', description: 'Manage project progress billing and retention', allowedRoles: ['Super Admin', 'Accountant'] },\n    ],\n  },\n   {\n    feature: 'Vaults & Stores',\n    description: 'Manage inventory, stock levels, and store locations.',\n    actions: [\n      { action: 'view', description: 'View stores and stock levels', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete stores and manage stock transactions', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n    {\n    feature: 'Products & Services',\n    description: 'Manage the catalog of products and services offered.',\n    actions: [\n      { action: 'view', description: 'View products and services', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete products and services', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'view_pricing', description: 'View cost and sale prices', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n    ],\n  },\n  {\n    feature: 'Asset Management',\n    description: 'Manage company assets, depreciation, and assignments.',\n    actions: [\n      { action: 'view', description: 'View asset list', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage', description: 'Add, edit, and assign assets', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete', description: 'Delete assets from the register', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Maintenance',\n    description: 'Manage maintenance tickets and service contracts.',\n    actions: [\n      { action: 'view_tickets', description: 'View maintenance tickets', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage_tickets', description: 'Create, edit, and update tickets', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'view_contracts', description: 'View service contracts', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage_contracts', description: 'Manage service contracts', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Workflow',\n    description: 'Manage document approval workflows.',\n    actions: [\n      { action: 'view', description: 'View workflow queue', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'manage', description: 'Approve or reject transactions', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Data Processing',\n    description: 'Extract data from documents using AI.',\n    actions: [\n      { action: 'access', description: 'Access document processing and data extraction features', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n    ],\n  },\n   {\n    feature: 'Utilities',\n    description: 'Manage utility accounts and bill payments.',\n    actions: [\n      { action: 'view', description: 'View utility accounts', allowedRoles: ['Super Admin', 'Admin', 'Accountant', 'User'] },\n      { action: 'manage', description: 'Add, edit, and delete utility accounts', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Landlords',\n    description: 'Manage landlord profiles and their associated contracts.',\n    actions: [\n      { action: 'view', description: 'View landlord list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant'] },\n      { action: 'edit', description: 'Edit landlord information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a landlord', allowedRoles: ['Super Admin'] },\n    ],\n  },\n    {\n    feature: 'Vendors',\n    description: 'Manage supplier and vendor profiles.',\n    actions: [\n      { action: 'view', description: 'View vendor list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit vendor information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a vendor', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Tenants',\n    description: 'Manage tenant profiles and their tenancy contracts.',\n    actions: [\n      { action: 'view', description: 'View tenant list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit tenant information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a tenant', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Customers',\n    description: 'Manage general customers for non-rental services.',\n    actions: [\n      { action: 'view', description: 'View customer list and details', allowedRoles: ['Super Admin', 'Admin', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit customer information', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete', description: 'Delete a customer', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Finance',\n    description: 'Access to financial modules like banking, payments, and chart of accounts.',\n    actions: [\n      { action: 'view_banking', description: 'View Banking and Petty Cash', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage_banking', description: 'Add/Edit/Delete bank accounts', allowedRoles: ['Super Admin'] },\n      { action: 'view_payments', description: 'View payment and receipt history', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'record_payment', description: 'Record new payments or receipts', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'delete_payment', description: 'Delete financial transactions', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'User Management',\n    description: 'Control over user accounts and their roles.',\n    actions: [\n      { action: 'view', description: 'View user list', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'add_user', description: 'Add new users', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'edit_user', description: 'Edit user details and roles', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete_user', description: 'Delete a user', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Settings',\n    description: 'Access to administrative settings.',\n    actions: [\n        { action: 'access_control', description: 'Manage user roles and permissions', allowedRoles: ['Super Admin'] },\n        { action: 'communication', description: 'Manage communication (Email/SMS) settings', allowedRoles: ['Super Admin', 'Admin'] },\n        { action: 'backup', description: 'Manage data backup and restore', allowedRoles: ['Super Admin'] },\n        { action: 'external_storage', description: 'Configure external storage (e.g., Google Drive)', allowedRoles: ['Developer'] },\n        { action: 'notifications', description: 'Send system-wide notifications', allowedRoles: ['Super Admin', 'Admin'] },\n        { action: 'contract_continuity', description: 'Review and fix contract data issues', allowedRoles: ['Super Admin'] },\n    ]\n  }\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/access-control/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport { type FeaturePermission, featurePermissions } from './permissions';\nimport { type UserRole } from '../user-roles/schema';\nimport { type ModuleSettings } from './schema';\n\nconst permissionsFilePath = path.join(process.cwd(), 'src/app/admin/access-control/permissions.json');\nconst usersFilePath = path.join(process.cwd(), 'src/app/admin/user-roles/users.json');\nconst moduleSettingsFilePath = path.join(process.cwd(), 'src/app/admin/access-control/module-settings.json');\nconst userOverridesFilePath = path.join(process.cwd(), 'src/app/admin/access-control/user-overrides.json');\n\nasync function readData(filePath: string) {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            // Return a default structure that can be safely merged\n            if (filePath.endsWith('permissions.json')) return [];\n            if (filePath.endsWith('users.json')) return [];\n            if (filePath.endsWith('module-settings.json')) return { modules: [] }; \n            if (filePath.endsWith('user-overrides.json')) return [];\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function getPermissions(): Promise<FeaturePermission[]> {\n     const savedPermissions = await readData(permissionsFilePath);\n     // Merge saved permissions with the default structure to ensure all features are listed\n    const allPermissions = featurePermissions.map(feature => {\n        const savedFeature = savedPermissions.find((p: any) => p.feature === feature.feature);\n        const actions = feature.actions.map(action => {\n        const savedAction = savedFeature?.actions.find((a: any) => a.action === action.action);\n        return {\n            ...action,\n            allowedRoles: savedAction ? savedAction.allowedRoles : action.allowedRoles,\n        };\n        });\n        return {\n        ...feature,\n        actions,\n        };\n    });\n    return allPermissions;\n}\n\nexport async function savePermissions(permissions: FeaturePermission[]) {\n    try {\n        await fs.writeFile(permissionsFilePath, JSON.stringify(permissions, null, 2), 'utf-8');\n        revalidatePath('/admin/access-control');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save permissions:', error);\n        return { success: false, error: 'Failed to save permissions.' };\n    }\n}\n\nexport async function updatePermission(featureName: string, actionName: string, role: string, isChecked: boolean) {\n    const currentPermissions = await getPermissions();\n    const feature = currentPermissions.find(f => f.feature === featureName);\n    if (feature) {\n        const action = feature.actions.find(a => a.action === actionName);\n        if (action) {\n            if (isChecked) {\n                if (!action.allowedRoles.includes(role)) {\n                    action.allowedRoles.push(role);\n                }\n            } else {\n                action.allowedRoles = action.allowedRoles.filter(r => r !== role);\n            }\n        }\n    }\n    return await savePermissions(currentPermissions);\n}\n\n\nexport async function getRoles(): Promise<string[]> {\n    try {\n        const users: UserRole[] = await readData(usersFilePath);\n        const allRoles = users.map(u => u.role);\n        // Add default roles that might not be in use yet\n        const defaultRoles = ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User', 'Developer'];\n        const uniqueRoles = Array.from(new Set([...allRoles, ...defaultRoles]));\n        return uniqueRoles;\n    } catch (error) {\n        console.error(\"Failed to read user roles\", error);\n        return ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User', 'Developer'];\n    }\n}\n\nexport type UserOverride = {\n    email: string;\n    allowedModules: string[];\n}\n\nexport async function getUserOverrides(): Promise<UserOverride[]> {\n    return (await readData(userOverridesFilePath)) as UserOverride[];\n}\n\nexport async function saveUserOverrides(overrides: UserOverride[]) {\n     try {\n        await fs.writeFile(userOverridesFilePath, JSON.stringify(overrides, null, 2), 'utf-8');\n        revalidatePath('/', 'layout');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save user overrides:', error);\n        return { success: false, error: 'Failed to save user overrides.' };\n    }\n}\n\n\nexport async function getCombinedAccessControlData() {\n    try {\n        const [permissions, moduleSettings, userOverrides] = await Promise.all([\n            getPermissions(),\n            readData(moduleSettingsFilePath) as Promise<ModuleSettings>,\n            getUserOverrides()\n        ]);\n        return { success: true, permissions, moduleSettings, userOverrides };\n    } catch(error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 960, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase/admin-config.ts"],"sourcesContent":["\nimport * as admin from 'firebase-admin';\nimport { existsSync } from 'fs';\n\nconst projectId = process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID;\n\n// The recommended approach is to use Application Default Credentials (ADC).\n// Initialize without any arguments and it will automatically use ADC if available.\ntry {\n    if (!admin.apps.length) {\n        console.log(\"Attempting to initialize Firebase Admin with Application Default Credentials...\");\n        admin.initializeApp({ projectId });\n        console.log(\"Firebase Admin initialized successfully with Application Default Credentials.\");\n    }\n} catch (e) {\n    console.warn(\"Could not initialize with Application Default Credentials, trying service account path.\", e);\n    \n    // Fallback for local development outside of a GCP environment\n    const serviceAccountPath = process.env.SERVICE_ACCOUNT_JSON_PATH;\n\n    if (!serviceAccountPath) {\n        throw new Error(\n            'Firebase initialization failed. Application Default Credentials not found. ' +\n            'For local development, set the SERVICE_ACCOUNT_JSON_PATH environment variable to the path of your service account JSON file in your .env.local'\n        );\n    }\n\n    if (!existsSync(serviceAccountPath)) {\n        throw new Error(\n            `Firebase initialization failed. Service account file not found at path: ${serviceAccountPath}. ` +\n            'Please check the SERVICE_ACCOUNT_JSON_PATH in your .env.local file.'\n        );\n    }\n    \n    if (!admin.apps.length) {\n        console.log(`Attempting to initialize Firebase Admin with service account file: ${serviceAccountPath}`);\n        admin.initializeApp({\n            credential: admin.credential.cert(serviceAccountPath),\n            projectId: projectId,\n        });\n        console.log(\"Firebase Admin initialized successfully with service account file.\");\n    }\n}\n\nconst firestoreAdmin = admin.firestore();\n\nexport { firestoreAdmin };\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAEA,MAAM;AAEN,4EAA4E;AAC5E,mFAAmF;AACnF,IAAI;IACA,IAAI,CAAC,mIAAU,CAAC,MAAM,EAAE;QACpB,QAAQ,GAAG,CAAC;QACZ,4IAAmB,CAAC;YAAE;QAAU;QAChC,QAAQ,GAAG,CAAC;IAChB;AACJ,EAAE,OAAO,GAAG;IACR,QAAQ,IAAI,CAAC,2FAA2F;IAExG,8DAA8D;IAC9D,MAAM,qBAAqB,QAAQ,GAAG,CAAC,yBAAyB;IAEhE,IAAI,CAAC,oBAAoB;QACrB,MAAM,IAAI,MACN,gFACA;IAER;IAEA,IAAI,CAAC,IAAA,2GAAU,EAAC,qBAAqB;QACjC,MAAM,IAAI,MACN,CAAC,wEAAwE,EAAE,mBAAmB,EAAE,CAAC,GACjG;IAER;IAEA,IAAI,CAAC,mIAAU,CAAC,MAAM,EAAE;QACpB,QAAQ,GAAG,CAAC,CAAC,mEAAmE,EAAE,oBAAoB;QACtG,4IAAmB,CAAC;YAChB,YAAY,yIAAgB,CAAC,IAAI,CAAC;YAClC,WAAW;QACf;QACA,QAAQ,GAAG,CAAC;IAChB;AACJ;AAEA,MAAM,iBAAiB,wIAAe","debugId":null}},
    {"offset": {"line": 1004, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/tenants/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { firestoreAdmin } from '@/lib/firebase/admin-config';\nimport { revalidatePath } from 'next/cache';\nimport { type Contract } from '../contract/schema';\nimport { type Tenant } from '@/app/tenancy/tenants/schema';\nimport { type Invoice } from '@/app/tenancy/customer/invoice/schema';\n\nasync function getTenants() {\n    const tenantsCollection = firestoreAdmin.collection('tenants');\n    const snapshot = await tenantsCollection.get();\n    return snapshot.docs.map(doc => doc.data());\n}\n\nasync function getContracts(): Promise<Contract[]> {\n    const contractsCollection = firestoreAdmin.collection('contracts');\n    const snapshot = await contractsCollection.get();\n    return snapshot.docs.map(doc => doc.data() as Contract);\n}\n\nasync function getInvoices(): Promise<Invoice[]> {\n    const invoicesCollection = firestoreAdmin.collection('invoices');\n    const snapshot = await invoicesCollection.get();\n    return snapshot.docs.map(doc => doc.data() as Invoice);\n}\n\nexport async function getAllTenants() {\n    const tenants:any = await getTenants();\n    const contracts = await getContracts();\n    const invoices = await getInvoices();\n    \n    const contractsByTenantCode = new Map<string, Contract>();\n    for (const contract of contracts) {\n        if(contract.tenantCode) {\n             if (!contractsByTenantCode.has(contract.tenantCode) || new Date(contract.endDate) > new Date(contractsByTenantCode.get(contract.tenantCode)!.endDate)) {\n                contractsByTenantCode.set(contract.tenantCode, contract);\n            }\n        }\n    }\n\n    const invoiceStatsByCustomer = new Map<string, { totalBilled: number, totalPaid: number }>();\n    for (const invoice of invoices) {\n        if (invoice.status !== 'Cancelled') {\n            if (!invoiceStatsByCustomer.has(invoice.customerCode)) {\n                invoiceStatsByCustomer.set(invoice.customerCode, { totalBilled: 0, totalPaid: 0 });\n            }\n            const stats = invoiceStatsByCustomer.get(invoice.customerCode)!;\n            stats.totalBilled += invoice.total;\n            stats.totalPaid += invoice.amountPaid || 0;\n        }\n    }\n\n    return tenants\n        .filter((l: any) => l.tenantData && l.tenantData.code)\n        .map((l: any) => {\n            const tenantCode = l.tenantData.code;\n            const contract = contractsByTenantCode.get(tenantCode);\n            let dueBalance = 0;\n            let contractValue = 0;\n            let paidAmount = 0;\n\n            if (l.tenantData.isSubscriptionActive) {\n                const stats = invoiceStatsByCustomer.get(tenantCode) || { totalBilled: 0, totalPaid: 0 };\n                contractValue = stats.totalBilled;\n                paidAmount = stats.totalPaid;\n                dueBalance = contractValue - paidAmount;\n            } else if (contract) {\n                contractValue = contract.totalRent;\n                const paidInstallments = contract.paymentSchedule.filter(p => p.status === 'paid');\n                paidAmount = paidInstallments.reduce((sum, p) => sum + p.amount, 0);\n                dueBalance = contractValue - paidAmount;\n            }\n\n            return {\n                ...l.tenantData,\n                attachments: l.attachments || [],\n                contractId: contract?.id || null,\n                contractNo: contract?.contractNo || null,\n                isSubscriptionActive: l.tenantData.isSubscriptionActive || false,\n                contractValue,\n                paidAmount,\n                dueBalance,\n            }\n        });\n}\n\nasync function getNextTenantCode() {\n    const allTenants:any = await getTenants();\n    let maxNum = 0;\n    allTenants.forEach((t: any) => {\n        const code = t.tenantData.code || '';\n        const match = code.match(/^T(\\d+)$/);\n        if(match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    const nextNum = maxNum + 1;\n    return `T${nextNum.toString().padStart(4, '0')}`;\n}\n\nexport async function saveTenantData(dataToSave: any, isNewRecord: boolean, isAutoCode: boolean) {\n    try {\n        const { attachments, ...tenantData } = dataToSave;\n        let tenantCode = tenantData.code;\n        if (isNewRecord && isAutoCode) {\n            tenantCode = await getNextTenantCode();\n            tenantData.code = tenantCode;\n        }\n\n        const docRef = firestoreAdmin.collection('tenants').doc(tenantCode);\n\n        const dataForDb = { tenantData, attachments };\n\n        if (isNewRecord) {\n            await docRef.set(dataForDb);\n        } else {\n            await docRef.update(dataForDb);\n        }\n\n        revalidatePath('/tenancy/tenants');\n        return { success: true, data: dataForDb };\n    } catch (error: any) {\n        return { success: false, error: error.message };\n    }\n}\n\nexport async function findTenantData(tenantCode: string) {\n    try {\n        const docRef = firestoreAdmin.collection('tenants').doc(tenantCode);\n        const doc = await docRef.get();\n\n        if (doc.exists) {\n            return { success: true, data: doc.data() };\n        } else {\n            return { success: false, error: 'Tenant not found' };\n        }\n    } catch (error: any) {\n        return { success: false, error: error.message };\n    }\n}\n\nexport async function deleteTenantData(tenantCode: string) {\n    try {\n        const docRef = firestoreAdmin.collection('tenants').doc(tenantCode);\n        await docRef.delete();\n\n        revalidatePath('/tenancy/tenants');\n        return { success: true };\n    } catch (error: any) {\n        return { success: false, error: error.message };\n    }\n}\n\nexport async function cancelSubscription(tenantCode: string) {\n    try {\n        const docRef = firestoreAdmin.collection('tenants').doc(tenantCode);\n        await docRef.update({ 'tenantData.isSubscriptionActive': false });\n\n        revalidatePath('/tenancy/tenants');\n        return { success: true };\n    } catch (error: any) {\n        return { success: false, error: error.message };\n    }\n}\n\nexport async function saveSubscriptionSettings(tenantCode: string, settings: Partial<Tenant>) {\n    try {\n        const docRef = firestoreAdmin.collection('tenants').doc(tenantCode);\n        await docRef.update({ 'tenantData.subscription': settings });\n\n        revalidatePath('/tenancy/tenants');\n        return { success: true };\n    } catch (error: any) {\n        return { success: false, error: error.message };\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAGA;AACA;;;;;AAKA,eAAe;IACX,MAAM,oBAAoB,2JAAc,CAAC,UAAU,CAAC;IACpD,MAAM,WAAW,MAAM,kBAAkB,GAAG;IAC5C,OAAO,SAAS,IAAI,CAAC,GAAG,CAAC,CAAA,MAAO,IAAI,IAAI;AAC5C;AAEA,eAAe;IACX,MAAM,sBAAsB,2JAAc,CAAC,UAAU,CAAC;IACtD,MAAM,WAAW,MAAM,oBAAoB,GAAG;IAC9C,OAAO,SAAS,IAAI,CAAC,GAAG,CAAC,CAAA,MAAO,IAAI,IAAI;AAC5C;AAEA,eAAe;IACX,MAAM,qBAAqB,2JAAc,CAAC,UAAU,CAAC;IACrD,MAAM,WAAW,MAAM,mBAAmB,GAAG;IAC7C,OAAO,SAAS,IAAI,CAAC,GAAG,CAAC,CAAA,MAAO,IAAI,IAAI;AAC5C;AAEO,eAAe;IAClB,MAAM,UAAc,MAAM;IAC1B,MAAM,YAAY,MAAM;IACxB,MAAM,WAAW,MAAM;IAEvB,MAAM,wBAAwB,IAAI;IAClC,KAAK,MAAM,YAAY,UAAW;QAC9B,IAAG,SAAS,UAAU,EAAE;YACnB,IAAI,CAAC,sBAAsB,GAAG,CAAC,SAAS,UAAU,KAAK,IAAI,KAAK,SAAS,OAAO,IAAI,IAAI,KAAK,sBAAsB,GAAG,CAAC,SAAS,UAAU,EAAG,OAAO,GAAG;gBACpJ,sBAAsB,GAAG,CAAC,SAAS,UAAU,EAAE;YACnD;QACJ;IACJ;IAEA,MAAM,yBAAyB,IAAI;IACnC,KAAK,MAAM,WAAW,SAAU;QAC5B,IAAI,QAAQ,MAAM,KAAK,aAAa;YAChC,IAAI,CAAC,uBAAuB,GAAG,CAAC,QAAQ,YAAY,GAAG;gBACnD,uBAAuB,GAAG,CAAC,QAAQ,YAAY,EAAE;oBAAE,aAAa;oBAAG,WAAW;gBAAE;YACpF;YACA,MAAM,QAAQ,uBAAuB,GAAG,CAAC,QAAQ,YAAY;YAC7D,MAAM,WAAW,IAAI,QAAQ,KAAK;YAClC,MAAM,SAAS,IAAI,QAAQ,UAAU,IAAI;QAC7C;IACJ;IAEA,OAAO,QACF,MAAM,CAAC,CAAC,IAAW,EAAE,UAAU,IAAI,EAAE,UAAU,CAAC,IAAI,EACpD,GAAG,CAAC,CAAC;QACF,MAAM,aAAa,EAAE,UAAU,CAAC,IAAI;QACpC,MAAM,WAAW,sBAAsB,GAAG,CAAC;QAC3C,IAAI,aAAa;QACjB,IAAI,gBAAgB;QACpB,IAAI,aAAa;QAEjB,IAAI,EAAE,UAAU,CAAC,oBAAoB,EAAE;YACnC,MAAM,QAAQ,uBAAuB,GAAG,CAAC,eAAe;gBAAE,aAAa;gBAAG,WAAW;YAAE;YACvF,gBAAgB,MAAM,WAAW;YACjC,aAAa,MAAM,SAAS;YAC5B,aAAa,gBAAgB;QACjC,OAAO,IAAI,UAAU;YACjB,gBAAgB,SAAS,SAAS;YAClC,MAAM,mBAAmB,SAAS,eAAe,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK;YAC3E,aAAa,iBAAiB,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,MAAM,EAAE;YACjE,aAAa,gBAAgB;QACjC;QAEA,OAAO;YACH,GAAG,EAAE,UAAU;YACf,aAAa,EAAE,WAAW,IAAI,EAAE;YAChC,YAAY,UAAU,MAAM;YAC5B,YAAY,UAAU,cAAc;YACpC,sBAAsB,EAAE,UAAU,CAAC,oBAAoB,IAAI;YAC3D;YACA;YACA;QACJ;IACJ;AACR;AAEA,eAAe;IACX,MAAM,aAAiB,MAAM;IAC7B,IAAI,SAAS;IACb,WAAW,OAAO,CAAC,CAAC;QAChB,MAAM,OAAO,EAAE,UAAU,CAAC,IAAI,IAAI;QAClC,MAAM,QAAQ,KAAK,KAAK,CAAC;QACzB,IAAG,OAAO;YACN,MAAM,MAAM,SAAS,KAAK,CAAC,EAAE,EAAE;YAC/B,IAAI,MAAM,QAAQ;gBACd,SAAS;YACb;QACJ;IACJ;IACA,MAAM,UAAU,SAAS;IACzB,OAAO,CAAC,CAAC,EAAE,QAAQ,QAAQ,GAAG,QAAQ,CAAC,GAAG,MAAM;AACpD;AAEO,eAAe,eAAe,UAAe,EAAE,WAAoB,EAAE,UAAmB;IAC3F,IAAI;QACA,MAAM,EAAE,WAAW,EAAE,GAAG,YAAY,GAAG;QACvC,IAAI,aAAa,WAAW,IAAI;QAChC,IAAI,eAAe,YAAY;YAC3B,aAAa,MAAM;YACnB,WAAW,IAAI,GAAG;QACtB;QAEA,MAAM,SAAS,2JAAc,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC;QAExD,MAAM,YAAY;YAAE;YAAY;QAAY;QAE5C,IAAI,aAAa;YACb,MAAM,OAAO,GAAG,CAAC;QACrB,OAAO;YACH,MAAM,OAAO,MAAM,CAAC;QACxB;QAEA,IAAA,+IAAc,EAAC;QACf,OAAO;YAAE,SAAS;YAAM,MAAM;QAAU;IAC5C,EAAE,OAAO,OAAY;QACjB,OAAO;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC;IAClD;AACJ;AAEO,eAAe,eAAe,UAAkB;IACnD,IAAI;QACA,MAAM,SAAS,2JAAc,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC;QACxD,MAAM,MAAM,MAAM,OAAO,GAAG;QAE5B,IAAI,IAAI,MAAM,EAAE;YACZ,OAAO;gBAAE,SAAS;gBAAM,MAAM,IAAI,IAAI;YAAG;QAC7C,OAAO;YACH,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAAmB;QACvD;IACJ,EAAE,OAAO,OAAY;QACjB,OAAO;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC;IAClD;AACJ;AAEO,eAAe,iBAAiB,UAAkB;IACrD,IAAI;QACA,MAAM,SAAS,2JAAc,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC;QACxD,MAAM,OAAO,MAAM;QAEnB,IAAA,+IAAc,EAAC;QACf,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAY;QACjB,OAAO;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC;IAClD;AACJ;AAEO,eAAe,mBAAmB,UAAkB;IACvD,IAAI;QACA,MAAM,SAAS,2JAAc,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC;QACxD,MAAM,OAAO,MAAM,CAAC;YAAE,mCAAmC;QAAM;QAE/D,IAAA,+IAAc,EAAC;QACf,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAY;QACjB,OAAO;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC;IAClD;AACJ;AAEO,eAAe,yBAAyB,UAAkB,EAAE,QAAyB;IACxF,IAAI;QACA,MAAM,SAAS,2JAAc,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC;QACxD,MAAM,OAAO,MAAM,CAAC;YAAE,2BAA2B;QAAS;QAE1D,IAAA,+IAAc,EAAC;QACf,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAY;QACjB,OAAO;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC;IAClD;AACJ;;;IAxJsB;IA6EA;IA0BA;IAeA;IAYA;IAYA;;AA9IA,+OAAA;AA6EA,+OAAA;AA0BA,+OAAA;AAeA,+OAAA;AAYA,+OAAA;AAYA,+OAAA","debugId":null}},
    {"offset": {"line": 1234, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/customer/invoice/schema.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\nexport const invoiceItemSchema = z.object({\n  id: z.string(),\n  description: z.string().min(1, 'Description is required.'),\n  quantity: z.number().min(1, 'Quantity must be at least 1.'),\n  unitPrice: z.number().min(0, 'Unit price must be positive.'),\n  total: z.number(),\n});\n\nexport const invoiceSchema = z.object({\n  id: z.string(),\n  invoiceNo: z.string().min(1, 'Invoice number is required.'),\n  customerCode: z.string().min(1, 'Customer is required.'),\n  customerName: z.string().min(1, 'Customer name is required.'),\n  property: z.string().optional(),\n  unitCode: z.string().optional(),\n  roomCode: z.string().optional(),\n  invoiceDate: z.string().min(1, 'Invoice date is required.'),\n  dueDate: z.string().min(1, 'Due date is required.'),\n  vatRegNo: z.string().optional(),\n  items: z.array(invoiceItemSchema).min(1, 'At least one item is required.'),\n  subTotal: z.number(),\n  taxType: z.enum(['exclusive', 'inclusive']).default('exclusive'),\n  taxRate: z.number().optional().default(0),\n  tax: z.number(),\n  total: z.number(),\n  amountPaid: z.number().optional().default(0),\n  remainingBalance: z.number().optional(),\n  status: z.enum(['Draft', 'Sent', 'Paid', 'Overdue', 'Cancelled']),\n  notes: z.string().optional(),\n});\n\nexport const subscriptionInvoiceSchema = invoiceSchema.extend({\n  isSubscription: z.boolean().optional(),\n});\n\nexport type Invoice = z.infer<typeof invoiceSchema>;\nexport type InvoiceItem = z.infer<typeof invoiceItemSchema>;\n"],"names":[],"mappings":";;;;;;;;AACA;;AAEO,MAAM,oBAAoB,uKAAC,CAAC,MAAM,CAAC;IACxC,IAAI,uKAAC,CAAC,MAAM;IACZ,aAAa,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,UAAU,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,WAAW,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,OAAO,uKAAC,CAAC,MAAM;AACjB;AAEO,MAAM,gBAAgB,uKAAC,CAAC,MAAM,CAAC;IACpC,IAAI,uKAAC,CAAC,MAAM;IACZ,WAAW,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,cAAc,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,cAAc,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,aAAa,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,SAAS,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC3B,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,OAAO,uKAAC,CAAC,KAAK,CAAC,mBAAmB,GAAG,CAAC,GAAG;IACzC,UAAU,uKAAC,CAAC,MAAM;IAClB,SAAS,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAa;KAAY,EAAE,OAAO,CAAC;IACpD,SAAS,uKAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;IACvC,KAAK,uKAAC,CAAC,MAAM;IACb,OAAO,uKAAC,CAAC,MAAM;IACf,YAAY,uKAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;IAC1C,kBAAkB,uKAAC,CAAC,MAAM,GAAG,QAAQ;IACrC,QAAQ,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAS;QAAQ;QAAQ;QAAW;KAAY;IAChE,OAAO,uKAAC,CAAC,MAAM,GAAG,QAAQ;AAC5B;AAEO,MAAM,4BAA4B,cAAc,MAAM,CAAC;IAC5D,gBAAgB,uKAAC,CAAC,OAAO,GAAG,QAAQ;AACtC","debugId":null}},
    {"offset": {"line": 1289, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/customer/invoice/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { firestoreAdmin } from '@/lib/firebase/admin-config';\nimport { invoiceSchema, type Invoice } from './schema';\n\nasync function getNextInvoiceNumber(prefix: string) {\n    const querySnapshot = await firestoreAdmin.collection(\"invoices\").where(\"invoiceNo\", \">=\", prefix).where(\"invoiceNo\", \"<\", prefix + 'z').get();\n    let maxNum = 0;\n    querySnapshot.docs.forEach(doc => {\n        const match = doc.data().invoiceNo.match(new RegExp(`^${prefix}-(\\\\d+)$`));\n        if (match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `${prefix}-${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\nexport async function getInvoicesForCustomer(customerCode: string) {\n    const querySnapshot = await firestoreAdmin.collection(\"invoices\").where(\"customerCode\", \"==\", customerCode).get();\n    return querySnapshot.docs.map(doc => {\n        const data = doc.data() as Invoice;\n        return { ...data, id: doc.id, remainingBalance: data.total - (data.amountPaid || 0) };\n    });\n}\n\nexport async function getNextGeneralInvoiceNumber() {\n    return await getNextInvoiceNumber('INV');\n}\n\nexport async function getNextSubscriptionInvoiceNumber() {\n    return await getNextInvoiceNumber('SUB-INV');\n}\n\nexport async function saveInvoice(data: Omit<Invoice, 'amountPaid' | 'remainingBalance'> & { isAutoInvoiceNo?: boolean, isSubscription?: boolean }, createdBy: string) {\n    const { isAutoInvoiceNo, isSubscription, ...invoiceData } = data;\n    const validation = invoiceSchema.omit({id: true, amountPaid: true, remainingBalance: true}).safeParse(invoiceData);\n\n    if (!validation.success) {\n        console.error(\"Invoice Validation Error:\", validation.error.format());\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const isNewRecord = !data.id;\n        const validatedData = validation.data;\n        let savedInvoice: Invoice;\n\n        if (isNewRecord) {\n            let newInvoiceNo = validatedData.invoiceNo;\n            if (isAutoInvoiceNo) {\n                newInvoiceNo = isSubscription ? await getNextSubscriptionInvoiceNumber() : await getNextGeneralInvoiceNumber();\n            } else {\n                const querySnapshot = await firestoreAdmin.collection(\"invoices\").where(\"invoiceNo\", \"==\", newInvoiceNo).get();\n                if (!querySnapshot.empty) {\n                    return { success: false, error: `An invoice with number \"${newInvoiceNo}\" already exists.`};\n                }\n            }\n\n            const newInvoice: Invoice = {\n                ...validatedData,\n                invoiceNo: newInvoiceNo,\n                amountPaid: 0,\n                items: validatedData.items.map(item => ({...item, id: item.id || `item-${Date.now()}-${Math.random()}`})),\n                id: ''\n            };\n            const docRef = await firestoreAdmin.collection(\"invoices\").add(newInvoice);\n            savedInvoice = { ...newInvoice, id: docRef.id };\n            \n        } else {\n            const docRef = firestoreAdmin.collection(\"invoices\").doc(data.id as string);\n            await docRef.update(validatedData);\n            const updatedDoc = await docRef.get();\n            savedInvoice = { ...updatedDoc.data(), id: updatedDoc.id } as Invoice;\n        }\n\n        revalidatePath(`/tenancy/customer/add?code=${data.customerCode}`);\n        revalidatePath(`/tenancy/tenants/add?code=${data.customerCode}`);\n        return { success: true, data: savedInvoice };\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nexport async function saveSubscriptionInvoice(data: Omit<Invoice, 'amountPaid' | 'remainingBalance'> & { isAutoInvoiceNo?: boolean }, createdBy: string) {\n    return await saveInvoice({ ...data, isSubscription: true }, createdBy);\n}\n\n\nexport async function deleteInvoice(invoiceId: string) {\n    try {\n        const docRef = firestoreAdmin.collection(\"invoices\").doc(invoiceId);\n        const doc = await docRef.get();\n        if (!doc.exists) {\n            return { success: false, error: 'Invoice not found.' };\n        }\n        const customerCode = doc.data()?.customerCode;\n        await docRef.delete();\n        revalidatePath(`/tenancy/customer/add?code=${customerCode}`);\n        revalidatePath(`/tenancy/tenants/add?code=${customerCode}`);\n        return { success: true };\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nexport async function updateInvoiceStatus(invoiceId: string, status: Invoice['status']) {\n    try {\n        const docRef = firestoreAdmin.collection(\"invoices\").doc(invoiceId);\n        const doc = await docRef.get();\n        if (!doc.exists) {\n            return { success: false, error: 'Invoice not found to update status.' };\n        }\n        await docRef.update({ status });\n        revalidatePath(`/tenancy/customer/add?code=${doc.data()?.customerCode}`);\n        revalidatePath(`/tenancy/tenants/add?code=${doc.data()?.customerCode}`);\n        return { success: true };\n    } catch (error) {\n         return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nexport async function applyPaymentToInvoices(invoicePayments: { invoiceId: string; amount: number }[], customerCode: string) {\n    try {\n        const batch = firestoreAdmin.batch();\n        for (const payment of invoicePayments) {\n            const docRef = firestoreAdmin.collection(\"invoices\").doc(payment.invoiceId);\n            const doc = await docRef.get();\n            if (doc.exists) {\n                const invoice = doc.data() as Invoice;\n                const newAmountPaid = (invoice.amountPaid || 0) + payment.amount;\n                const remainingBalance = invoice.total - newAmountPaid;\n                const newStatus = remainingBalance <= 0.001 ? 'Paid' : invoice.status;\n                batch.update(docRef, { amountPaid: newAmountPaid, status: newStatus });\n            }\n        }\n        await batch.commit();\n\n        revalidatePath(`/tenancy/customer/add?code=${customerCode}`);\n        revalidatePath(`/tenancy/tenants/add?code=${customerCode}`);\n        return { success: true };\n    } catch (error) {\n         return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1523, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/lookups/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { type Tenant } from '@/app/tenancy/tenants/schema';\nimport { type Landlord } from '@/app/landlord/schema';\nimport { type Vendor } from '@/app/vendors/schema';\nimport { type Agent } from '@/app/vendors/agents/schema';\nimport { type Customer } from '@/app/tenancy/customer/schema';\nimport { type BankAccount } from '@/app/finance/banking/schema';\nimport { type Property } from '@/app/property/properties/list/schema';\nimport { type Unit } from '@/app/property/units/schema';\nimport { type Room } from '@/app/property/rooms/schema';\nimport { type Partition } from '@/app/property/partitions/schema';\nimport { type ReceiptBook } from '@/app/finance/book-management/schema';\nimport { type Product } from '@/app/products/schema';\nimport { type MaintenanceTicket } from '@/app/maintenance/ticket-issue/schema';\nimport { type Account } from '@/app/finance/chart-of-accounts/schema';\n\n\nasync function readData<T>(filePath: string, defaultValue: T[] = []): Promise<T[]> {\n    try {\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            try {\n                await fs.mkdir(path.dirname(filePath), { recursive: true });\n                await fs.writeFile(filePath, JSON.stringify(defaultValue, null, 2), 'utf-8');\n                return defaultValue;\n            } catch (writeError) {\n                console.error(`Error creating file ${filePath}:`, writeError);\n                throw writeError;\n            }\n        }\n        throw error;\n    }\n}\n\nexport async function getLookups() {\n    const tenantsData: {tenantData: Tenant}[] = await readData(path.join(process.cwd(), 'src/app/tenancy/tenants/tenants-data.json'));\n    const landlordsData: {landlordData: Landlord}[] = await readData(path.join(process.cwd(), 'src/app/landlord/landlords-data.json'));\n    const vendorsData: {vendorData: Vendor}[] = await readData(path.join(process.cwd(), 'src/app/vendors/vendors-data.json'));\n    const agentsData: Agent[] = await readData(path.join(process.cwd(), 'src/app/vendors/agents/agents-data.json'));\n    const customersData: {customerData: Customer}[] = await readData(path.join(process.cwd(), 'src/app/tenancy/customer/customers-data.json'));\n    const bankAccountsData: BankAccount[] = await readData(path.join(process.cwd(), 'src/app/finance/banking/accounts-data.json'));\n    const usersData: any[] = await readData(path.join(process.cwd(), 'src/app/admin/user-roles/users.json'));\n    const receiptBooksData: ReceiptBook[] = await readData(path.join(process.cwd(), 'src/app/finance/book-management/receipt-books-data.json'));\n    const propertiesData: {propertyData: Property}[] = await readData(path.join(process.cwd(), 'src/app/property/properties/list/properties-data.json'));\n    const unitsData: Unit[] = await readData(path.join(process.cwd(), 'src/app/property/units/units-data.json'));\n    const roomsData: Room[] = await readData(path.join(process.cwd(), 'src/app/property/rooms/rooms-data.json'));\n    const productsData: Product[] = await readData(path.join(process.cwd(), 'src/app/products/products-data.json'));\n    const maintenanceTicketsData: MaintenanceTicket[] = await readData(path.join(process.cwd(), 'src/app/maintenance/ticket-issue/tickets-data.json'));\n    const expenseAccountsData: Account[] = await readData(path.join(process.cwd(), 'src/app/finance/chart-of-accounts/accounts.json'));\n\n\n    return {\n        tenants: tenantsData.map(t => ({ value: t.tenantData.code, label: t.tenantData.name })),\n        landlords: landlordsData.map(l => ({ value: l.landlordData.code, label: l.landlordData.name })),\n        vendors: vendorsData.map(v => ({ value: v.vendorData.code, label: v.vendorData.name })),\n        agents: agentsData.map(a => ({ value: a.code, label: a.name })),\n        customers: customersData.map(c => ({ value: c.customerData.code, label: c.customerData.name })),\n        bankAccounts: bankAccountsData.map(b => ({ value: b.id, label: `${b.accountName} (${b.bankName})`})),\n        users: usersData.map((u: any) => ({ value: u.name, label: u.name })),\n        receiptBooks: receiptBooksData,\n        properties: propertiesData.map(p => ({ value: p.propertyData.code, label: p.propertyData.name })),\n        units: unitsData.map(u => ({ value: u.unitCode, label: u.unitCode, propertyCode: u.propertyCode })),\n        rooms: roomsData.map(r => ({ value: r.roomCode, label: r.roomCode, propertyCode: r.propertyCode, unitCode: r.unitCode })),\n        products: productsData,\n        maintenanceTickets: maintenanceTicketsData\n            .filter(t => t.status !== 'Completed' && t.status !== 'Cancelled')\n            .map(t => ({ value: t.id, label: `${t.ticketNo} - ${t.issueType}` })),\n        expenseAccounts: expenseAccountsData\n            .filter(acc => acc.type === 'Expense' && !acc.isGroup)\n            .map(acc => ({ value: acc.code, label: `${acc.name} (${acc.code})` })),\n    }\n}\n\n\nexport async function getExpenseAccounts(): Promise<{ value: string; label: string }[]> {\n    const accounts: Account[] = await readData(path.join(process.cwd(), 'src/app/finance/chart-of-accounts/accounts.json'));\n    return accounts\n        .filter(acc => acc.type === 'Expense' && !acc.isGroup)\n        .map(acc => ({ value: acc.code, label: `${acc.name} (${acc.code})` }));\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1645, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/tenancy/tenants/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCompanyProfile as '00b6be478acfdf6b7794a7b34be547b3606ebfd51c'} from 'ACTIONS_MODULE0'\nexport {saveCompanyProfile as '40c9350172a0cc49767c134a7e5ed44affe0683337'} from 'ACTIONS_MODULE0'\nexport {checkLicenseStatus as '008a29e84bd260b304f797613c7c39c01029f96950'} from 'ACTIONS_MODULE1'\nexport {getCurrencySettings as '00bf02fbdbf2069a58be66f4c215b7083c555f2e0f'} from 'ACTIONS_MODULE2'\nexport {getCombinedAccessControlData as '00484ec9aa59cb806ed9f49233b1daa442fefc4db8'} from 'ACTIONS_MODULE3'\nexport {getAllTenants as '00831fee985f82fbb15a66fe64cff566d6c6f2867b'} from 'ACTIONS_MODULE4'\nexport {deleteTenantData as '400726e3bdf468c8f88bbdb9aaa36ab5f223b4fb88'} from 'ACTIONS_MODULE4'\nexport {findTenantData as '403c44f137a3ca19d2679727ba3eaf54e85a4e3dd6'} from 'ACTIONS_MODULE4'\nexport {cancelSubscription as '40c7c6f727d1176bc496bfd420805a4dd89df95ec4'} from 'ACTIONS_MODULE4'\nexport {saveSubscriptionSettings as '6036964a174b54674356664e3bee36f62e4123d1df'} from 'ACTIONS_MODULE4'\nexport {saveTenantData as '70d98d48fadc7e403939dd6b646483c6ffbf3102b8'} from 'ACTIONS_MODULE4'\nexport {saveSubscriptionInvoice as '60213da409c92fe467dbf995967e3039ca853bc297'} from 'ACTIONS_MODULE5'\nexport {getNextSubscriptionInvoiceNumber as '002722ff09ce06e23752a07b30e008e26f6b5882d1'} from 'ACTIONS_MODULE5'\nexport {getLookups as '000e606f4bfa091a26b7d7183ad8692c928e388562'} from 'ACTIONS_MODULE6'\n"],"names":[],"mappings":";AAAA;AAEA;AACA;AACA;AACA;AAMA;AAEA","debugId":null}},
    {"offset": {"line": 1721, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 1736, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground\",\n        destructive:\n          \"bg-destructive text-destructive-foreground\",\n        outline:\n          \"border border-input bg-background\",\n        secondary:\n          \"bg-secondary text-secondary-foreground\",\n        ghost: \"\",\n        link: \"text-primary underline-offset-4\",\n        \"sidebar-accent\": \"bg-sidebar-accent text-sidebar-accent-foreground\"\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;YACN,kBAAkB;QACpB;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,mNAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1797, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/tenants/tenant-content.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const TenantContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TenantContent() from the server but TenantContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/tenancy/tenants/tenant-content.tsx <module evaluation>\",\n    \"TenantContent\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,4EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1811, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/tenants/tenant-content.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const TenantContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call TenantContent() from the server but TenantContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/tenancy/tenants/tenant-content.tsx\",\n    \"TenantContent\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,wDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1825, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1833, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/tenants/page.tsx"],"sourcesContent":["\n\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Plus, History } from 'lucide-react';\nimport { getAllTenants } from './actions';\nimport { TenantContent } from './tenant-content';\nimport { Tenant } from './schema';\nimport { getMovementHistory } from '@/app/admin/contract-continuity/actions';\n\nexport default async function TenantsPage() {\n  const tenants: Tenant[] = await getAllTenants();\n\n  return (\n    <div className=\"container mx-auto py-10\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <div>\n            <h1 className=\"text-3xl font-bold font-headline\">Tenants</h1>\n            <p className=\"text-muted-foreground\">Manage tenant profiles, properties, and contracts.</p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n            <Button asChild variant=\"outline\">\n                <Link href=\"/admin/contract-continuity\">\n                    <History className=\"mr-2 h-4 w-4\" /> Movement History\n                </Link>\n            </Button>\n            <Button asChild>\n            <Link href=\"/tenancy/tenants/add\">\n                <Plus className=\"mr-2 h-4 w-4\" /> Add New Tenant\n            </Link>\n            </Button>\n        </div>\n      </div>\n      <TenantContent tenants={tenants} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAAA;AACA;AACA;;;;;;;AAIe,eAAe;IAC5B,MAAM,UAAoB,MAAM,IAAA,4JAAa;IAE7C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACG,8OAAC;gCAAG,WAAU;0CAAmC;;;;;;0CACjD,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;kCAEzC,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,4IAAM;gCAAC,OAAO;gCAAC,SAAQ;0CACpB,cAAA,8OAAC,uKAAI;oCAAC,MAAK;;sDACP,8OAAC,mNAAO;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;0CAG5C,8OAAC,4IAAM;gCAAC,OAAO;0CACf,cAAA,8OAAC,uKAAI;oCAAC,MAAK;;sDACP,8OAAC,0MAAI;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;;;;;;;;;;;;;0BAK3C,8OAAC,uKAAa;gBAAC,SAAS;;;;;;;;;;;;AAG9B","debugId":null}}]
}