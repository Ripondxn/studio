{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,IAAA,yHAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/customer/customer-card.tsx"],"sourcesContent":["\n'use client';\n\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardFooter,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Mail, Phone, User } from 'lucide-react';\nimport type { Customer } from './schema';\nimport Link from 'next/link';\n\ninterface CustomerCardProps {\n  customer: Customer;\n}\n\nexport function CustomerCard({ customer }: CustomerCardProps) {\n\n  return (\n    <Card className=\"flex flex-col\">\n       <CardHeader className=\"flex-row items-start gap-4 space-y-0\">\n          <div className=\"flex-shrink-0\">\n              <div className=\"w-12 h-12 flex items-center justify-center bg-secondary rounded-lg\">\n                  <User className=\"h-6 w-6 text-secondary-foreground\" />\n              </div>\n          </div>\n          <div className=\"flex-1\">\n              <CardDescription>{customer.code}</CardDescription>\n              <CardTitle className=\"text-lg\">{customer.name}</CardTitle>\n          </div>\n      </CardHeader>\n      <CardContent className=\"space-y-3 flex-grow\">\n        {customer.mobile && (\n             <div className=\"flex items-center text-sm\">\n                <Phone className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                <span className=\"font-medium\">{customer.mobile}</span>\n            </div>\n        )}\n        {customer.email && (\n            <div className=\"flex items-center text-sm\">\n                <Mail className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                <span className=\"font-medium truncate\">{customer.email}</span>\n            </div>\n        )}\n      </CardContent>\n      <CardFooter>\n        <Button asChild variant=\"outline\" className=\"w-full\">\n          <Link href={`/tenancy/customer/add?code=${customer.code}`}>View Details</Link>\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AAQA;AACA;AAAA;AAAA;AAEA;AAbA;;;;;;AAmBO,SAAS,aAAa,EAAE,QAAQ,EAAqB;IAE1D,qBACE,8OAAC,wIAAI;QAAC,WAAU;;0BACb,8OAAC,8IAAU;gBAAC,WAAU;;kCACnB,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,0MAAI;gCAAC,WAAU;;;;;;;;;;;;;;;;kCAGxB,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,mJAAe;0CAAE,SAAS,IAAI;;;;;;0CAC/B,8OAAC,6IAAS;gCAAC,WAAU;0CAAW,SAAS,IAAI;;;;;;;;;;;;;;;;;;0BAGrD,8OAAC,+IAAW;gBAAC,WAAU;;oBACpB,SAAS,MAAM,kBACX,8OAAC;wBAAI,WAAU;;0CACZ,8OAAC,6MAAK;gCAAC,WAAU;;;;;;0CACjB,8OAAC;gCAAK,WAAU;0CAAe,SAAS,MAAM;;;;;;;;;;;;oBAGrD,SAAS,KAAK,kBACX,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,0MAAI;gCAAC,WAAU;;;;;;0CAChB,8OAAC;gCAAK,WAAU;0CAAwB,SAAS,KAAK;;;;;;;;;;;;;;;;;;0BAIhE,8OAAC,8IAAU;0BACT,cAAA,8OAAC,4IAAM;oBAAC,OAAO;oBAAC,SAAQ;oBAAU,WAAU;8BAC1C,cAAA,8OAAC,uKAAI;wBAAC,MAAM,CAAC,2BAA2B,EAAE,SAAS,IAAI,EAAE;kCAAE;;;;;;;;;;;;;;;;;;;;;;AAKrE","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/customer/customer-grid.tsx"],"sourcesContent":["\n'use client';\n\nimport { CustomerCard } from './customer-card';\nimport { type Customer } from './schema';\n\ninterface CustomerGridProps {\n  customers: Customer[];\n}\n\nexport function CustomerGrid({ customers }: CustomerGridProps) {\n  if (customers.length === 0) {\n    return (\n      <div className=\"text-center py-10 text-muted-foreground\">\n        <p>No customers found.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\">\n      {customers.map(customer => (\n        <CustomerCard key={customer.code} customer={customer} />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AAFA;;;AASO,SAAS,aAAa,EAAE,SAAS,EAAqB;IAC3D,IAAI,UAAU,MAAM,KAAK,GAAG;QAC1B,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;0BAAE;;;;;;;;;;;IAGT;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,UAAU,GAAG,CAAC,CAAA,yBACb,8OAAC,sKAAY;gBAAqB,UAAU;eAAzB,SAAS,IAAI;;;;;;;;;;AAIxC","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,6DACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,mNAAgB,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/customer/data-table.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    []\n  );\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    onSortingChange: setSorting,\n    getSortedRowModel: getSortedRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  return (\n    <div>\n      <div className=\"flex items-center py-4\">\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"outline\" className=\"ml-auto\">\n              Columns\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            {table\n              .getAllColumns()\n              .filter((column) => column.getCanHide())\n              .map((column) => {\n                return (\n                  <DropdownMenuCheckboxItem\n                    key={column.id}\n                    className=\"capitalize\"\n                    checked={column.getIsVisible()}\n                    onCheckedChange={(value) =>\n                      column.toggleVisibility(!!value)\n                    }\n                  >\n                    {column.id}\n                  </DropdownMenuCheckboxItem>\n                );\n              })}\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && 'selected'}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <div className=\"flex-1 text-sm text-muted-foreground\">\n          {table.getFilteredSelectedRowModel().rows.length} of{' '}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n        >\n          Previous\n        </Button>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n        >\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,4KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,iLAA2B;YAC1B,WAAW,IAAA,yHAAE,EAAC;sBAEd,cAAA,8OAAC,6MAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,4KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 622, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,mLAAyB;AAE7C,MAAM,qBAAqB,sLAA4B;AAEvD,MAAM,oBAAoB,qLAA2B;AAErD,MAAM,mCAAqB,mNAAgB,CAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,sLAA4B;QAC3B,WAAW,IAAA,yHAAE,EACX,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,mBAAmB,WAAW,GAAG,sLAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,mNAAgB,CAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,sLAA4B;gBAC3B,KAAK;gBACL,WAAW,IAAA,yHAAE,EACX,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,sLAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,mNAAgB,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oLAA0B;QACzB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,oLAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,mNAAgB,CAG7C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,0LAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,uBAAuB,WAAW,GAChC,0LAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,IAAA,oJAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,qLAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,IAAA,oJAAc,EAAC;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,qLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 758, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/customer/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { firestoreAdmin } from '@/lib/firebase/admin-config';\nimport { type Payment } from '@/app/finance/payment/schema';\n\nasync function getNextCustomerCode() {\n    const querySnapshot = await firestoreAdmin.collection(\"customers\").get();\n    let maxNum = 0;\n    querySnapshot.docs.forEach(doc => {\n        const code = doc.data().customerData.code || '';\n        const match = code.match(/^C(\\d+)$/);\n        if(match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `C${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\nexport async function getAllCustomers() {\n    const querySnapshot = await firestoreAdmin.collection(\"customers\").get();\n    return querySnapshot.docs.map(doc => ({ ...doc.data().customerData, id: doc.id, attachments: doc.data().attachments || [] }));\n}\n\nexport async function saveCustomerData(dataToSave: any, isNewRecord: boolean, isAutoCode: boolean) {\n  try {\n    let customerData = dataToSave.customerData;\n    let savedCustomer;\n\n    if (isNewRecord) {\n        if (isAutoCode) {\n            customerData.code = await getNextCustomerCode();\n        }\n\n        const { code } = customerData;\n        const querySnapshot = await firestoreAdmin.collection(\"customers\").where(\"customerData.code\", \"==\", code).get();\n        if (!querySnapshot.empty) {\n            return { success: false, error: `Customer with code \"${code}\" already exists.` };\n        }\n\n        const docRef = await firestoreAdmin.collection(\"customers\").add(dataToSave);\n        savedCustomer = { ...dataToSave, id: docRef.id };\n    } else {\n        const { code } = customerData;\n        const querySnapshot = await firestoreAdmin.collection(\"customers\").where(\"customerData.code\", \"==\", code).get();\n\n        if (!querySnapshot.empty) {\n            const docId = querySnapshot.docs[0].id;\n            await firestoreAdmin.collection(\"customers\").doc(docId).update(dataToSave);\n            savedCustomer = { ...dataToSave, id: docId };\n        } else {\n            return { success: false, error: `Customer with code \"${code}\" not found.` };\n        }\n    }\n\n    revalidatePath('/tenancy/customer');\n    return { success: true, data: savedCustomer.customerData };\n  } catch (error) {\n    console.error('Failed to save customer data:', error);\n    return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n  }\n}\n\nexport async function findCustomerData(customerCode: string) {\n  try {\n    if (customerCode === 'new') {\n        const newCode = await getNextCustomerCode();\n        return { success: true, data: { customerData: { code: newCode } } };\n    }\n\n    const querySnapshot = await firestoreAdmin.collection(\"customers\").where(\"customerData.code\", \"==\", customerCode).get();\n\n    if (!querySnapshot.empty) {\n       const doc = querySnapshot.docs[0];\n       return { success: true, data: { ...doc.data(), id: doc.id } };\n    } else {\n       return { success: false, error: \"Not Found\" };\n    }\n  } catch (error) {\n    console.error('Failed to find customer data:', error);\n    return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n  }\n}\n\nexport async function deleteCustomerData(customerCode: string) {\n    try {\n        const querySnapshot = await firestoreAdmin.collection(\"customers\").where(\"customerData.code\", \"==\", customerCode).get();\n\n        if (querySnapshot.empty) {\n            return { success: false, error: 'Customer not found.' };\n        }\n\n        const docId = querySnapshot.docs[0].id;\n        await firestoreAdmin.collection(\"customers\").doc(docId).delete();\n\n        revalidatePath('/tenancy/customer');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to delete customer data:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n\nexport async function getPaymentsForCustomer(customerCode: string): Promise<Payment[]> {\n    try {\n        const querySnapshot = await firestoreAdmin.collection(\"payments\").where(\"partyName\", \"==\", customerCode).where(\"type\", \"==\", \"Receipt\").get();\n        const customerPayments = querySnapshot.docs.map(doc => doc.data() as Payment);\n        return customerPayments.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    } catch (error) {\n        console.error('Failed to get payments for customer:', error);\n        return [];\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAwFsB,qBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 770, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/customer/columns.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { ColumnDef } from '@tanstack/react-table';\nimport { ArrowUpDown, Pencil, Trash2, MoreHorizontal } from 'lucide-react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\n\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { useToast } from '@/hooks/use-toast';\nimport { deleteCustomerData } from './actions';\nimport { Customer } from './schema';\n\nconst ActionsCell = ({ row }: { row: { original: Customer } }) => {\n  const customer = row.original;\n  const router = useRouter();\n  const { toast } = useToast();\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const handleDelete = async () => {\n    setIsDeleting(true);\n    try {\n      const result = await deleteCustomerData(customer.code);\n      if (result.success) {\n        toast({\n          title: 'Success',\n          description: `Customer \"${customer.name}\" deleted successfully.`,\n        });\n        router.refresh();\n      } else {\n        throw new Error(result.error || 'An unknown error occurred');\n      }\n    } catch (error) {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: (error as Error).message || 'Failed to delete customer.',\n      });\n    } finally {\n      setIsDeleting(false);\n      setIsDeleteDialogOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n            <AlertDialogDescription>\n              This action cannot be undone. This will permanently delete the\n              customer \"{customer.name}\" and all associated data.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={handleDelete}\n              disabled={isDeleting}\n              className=\"bg-destructive hover:bg-destructive/90\"\n            >\n              {isDeleting ? 'Deleting...' : 'Delete'}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      <div className=\"text-right\">\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n              <span className=\"sr-only\">Open menu</span>\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n            <DropdownMenuItem asChild>\n              <Link href={`/tenancy/customer/add?code=${customer.code}`}>\n                <Pencil className=\"mr-2 h-4 w-4\" />\n                Edit\n              </Link>\n            </DropdownMenuItem>\n            <DropdownMenuItem\n              className=\"text-destructive\"\n              onSelect={() => setIsDeleteDialogOpen(true)}\n            >\n              <Trash2 className=\"mr-2 h-4 w-4\" />\n              Delete\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n    </>\n  );\n};\n\n\nexport const columns: ColumnDef<Customer>[] = [\n  {\n    id: 'select',\n    header: ({ table }) => (\n      <Checkbox\n        checked={table.getIsAllPageRowsSelected()}\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: 'code',\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n        >\n          Code\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => {\n        const customer = row.original;\n        return (\n            <Button variant=\"link\" asChild className=\"p-0 h-auto font-normal\">\n                <Link href={`/tenancy/customer/add?code=${customer.code}`}>{customer.code}</Link>\n            </Button>\n        )\n    }\n  },\n  {\n    accessorKey: 'name',\n    header: 'Name',\n  },\n  {\n    accessorKey: 'mobile',\n    header: 'Mobile',\n  },\n  {\n    accessorKey: 'email',\n    header: 'Email',\n  },\n  {\n    id: 'actions',\n    cell: ({ row }) => <ActionsCell row={row} />,\n  },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1101, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/customer/customer-content.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { LayoutGrid, List } from 'lucide-react';\nimport { CustomerGrid } from './customer-grid';\nimport { DataTable } from './data-table';\nimport { columns } from './columns';\nimport { Customer } from './schema';\n\nexport function CustomerContent({ customers }: { customers: Customer[] }) {\n  const [viewMode, setViewMode] = React.useState<'grid' | 'list'>('list');\n  const [filter, setFilter] = React.useState('');\n\n  const filteredCustomers = React.useMemo(() => {\n    if (!filter) {\n      return customers;\n    }\n    return customers.filter(customer =>\n      customer.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }, [customers, filter]);\n\n  return (\n    <>\n      <div className=\"flex justify-between items-center mb-4\">\n        <Input\n          placeholder=\"Filter by name...\"\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)}\n          className=\"max-w-sm\"\n        />\n        <div className=\"flex items-center rounded-md bg-muted p-1\">\n          <Button\n            variant={viewMode === 'list' ? 'secondary' : 'ghost'}\n            size=\"icon\"\n            onClick={() => setViewMode('list')}\n          >\n            <List className=\"h-5 w-5\" />\n          </Button>\n          <Button\n            variant={viewMode === 'grid' ? 'secondary' : 'ghost'}\n            size=\"icon\"\n            onClick={() => setViewMode('grid')}\n          >\n            <LayoutGrid className=\"h-5 w-5\" />\n          </Button>\n        </div>\n      </div>\n      {viewMode === 'list' ? (\n        <DataTable columns={columns} data={filteredCustomers} />\n      ) : (\n        <CustomerGrid customers={filteredCustomers} />\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AARA;;;;;;;;;AAWO,SAAS,gBAAgB,EAAE,SAAS,EAA6B;IACtE,MAAM,CAAC,UAAU,YAAY,GAAG,iNAAc,CAAkB;IAChE,MAAM,CAAC,QAAQ,UAAU,GAAG,iNAAc,CAAC;IAE3C,MAAM,oBAAoB,gNAAa,CAAC;QACtC,IAAI,CAAC,QAAQ;YACX,OAAO;QACT;QACA,OAAO,UAAU,MAAM,CAAC,CAAA,WACtB,SAAS,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,WAAW;IAE3D,GAAG;QAAC;QAAW;KAAO;IAEtB,qBACE;;0BACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,0IAAK;wBACJ,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;wBACzC,WAAU;;;;;;kCAEZ,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,4IAAM;gCACL,SAAS,aAAa,SAAS,cAAc;gCAC7C,MAAK;gCACL,SAAS,IAAM,YAAY;0CAE3B,cAAA,8OAAC,0MAAI;oCAAC,WAAU;;;;;;;;;;;0CAElB,8OAAC,4IAAM;gCACL,SAAS,aAAa,SAAS,cAAc;gCAC7C,MAAK;gCACL,SAAS,IAAM,YAAY;0CAE3B,cAAA,8OAAC,gOAAU;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;YAI3B,aAAa,uBACZ,8OAAC,gKAAS;gBAAC,SAAS,wJAAO;gBAAE,MAAM;;;;;qCAEnC,8OAAC,sKAAY;gBAAC,WAAW;;;;;;;;AAIjC","debugId":null}}]
}