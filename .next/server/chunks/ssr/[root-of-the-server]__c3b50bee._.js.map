{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/license.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { differenceInDays, addDays, format, parseISO } from 'date-fns';\n\nconst licenseFilePath = path.join(process.cwd(), 'license.json');\nconst TRIAL_PERIOD_DAYS = 30;\n\ntype LicenseInfo = {\n    trialStartDate: string;\n};\n\nexport type LicenseStatus = {\n    isActive: boolean;\n    isTrial: boolean;\n    daysRemaining: number;\n    expiryDate: string;\n};\n\nasync function readLicenseFile(): Promise<LicenseInfo | null> {\n    try {\n        await fs.access(licenseFilePath);\n        const data = await fs.readFile(licenseFilePath, 'utf-8');\n        // Basic validation in case the file is empty or corrupted\n        if (!data) return null;\n        return JSON.parse(data);\n    } catch (error) {\n        return null; // File doesn't exist or is unreadable\n    }\n}\n\nasync function createLicenseFile(): Promise<LicenseInfo> {\n    const trialStartDate = new Date().toISOString();\n    const newLicense: LicenseInfo = { trialStartDate };\n    await fs.writeFile(licenseFilePath, JSON.stringify(newLicense, null, 2), 'utf-8');\n    return newLicense;\n}\n\nexport async function checkLicenseStatus(): Promise<LicenseStatus> {\n    let license = await readLicenseFile();\n\n    if (!license) {\n        license = await createLicenseFile();\n    }\n    \n    const startDate = parseISO(license.trialStartDate);\n    const now = new Date();\n    const expiryDate = addDays(startDate, TRIAL_PERIOD_DAYS);\n    const daysRemaining = differenceInDays(expiryDate, now);\n\n    const isActive = daysRemaining >= 0;\n\n    return {\n        isActive,\n        isTrial: true, // For now, we only have a trial license\n        daysRemaining: Math.max(0, daysRemaining),\n        expiryDate: format(expiryDate, 'PPP'),\n    };\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;AAEA,MAAM,kBAAkB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AACjD,MAAM,oBAAoB;AAa1B,eAAe;IACX,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,iBAAiB;QAChD,0DAA0D;QAC1D,IAAI,CAAC,MAAM,OAAO;QAClB,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAO,OAAO;QACZ,OAAO,MAAM,sCAAsC;IACvD;AACJ;AAEA,eAAe;IACX,MAAM,iBAAiB,IAAI,OAAO,WAAW;IAC7C,MAAM,aAA0B;QAAE;IAAe;IACjD,MAAM,yGAAE,CAAC,SAAS,CAAC,iBAAiB,KAAK,SAAS,CAAC,YAAY,MAAM,IAAI;IACzE,OAAO;AACX;AAEO,eAAe;IAClB,IAAI,UAAU,MAAM;IAEpB,IAAI,CAAC,SAAS;QACV,UAAU,MAAM;IACpB;IAEA,MAAM,YAAY,IAAA,oJAAQ,EAAC,QAAQ,cAAc;IACjD,MAAM,MAAM,IAAI;IAChB,MAAM,aAAa,IAAA,kJAAO,EAAC,WAAW;IACtC,MAAM,gBAAgB,IAAA,oKAAgB,EAAC,YAAY;IAEnD,MAAM,WAAW,iBAAiB;IAElC,OAAO;QACH;QACA,SAAS;QACT,eAAe,KAAK,GAAG,CAAC,GAAG;QAC3B,YAAY,IAAA,gKAAM,EAAC,YAAY;IACnC;AACJ;;;IApBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/currency/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\n\nexport type CurrencySettings = {\n    currencyCode: string;\n};\n\nconst settingsFilePath = path.join(process.cwd(), 'src/app/admin/currency/settings.json');\n\nconst defaultSettings: CurrencySettings = {\n    currencyCode: 'AED'\n};\n\nexport async function getCurrencySettings(): Promise<CurrencySettings> {\n    try {\n        await fs.access(settingsFilePath);\n        const data = await fs.readFile(settingsFilePath, 'utf-8');\n        return { ...defaultSettings, ...JSON.parse(data) };\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return defaultSettings;\n        }\n        throw error;\n    }\n}\n\nconst currencySettingsSchema = z.object({\n    currencyCode: z.string().length(3, \"Currency code must be 3 characters long.\").toUpperCase(),\n});\n\nexport async function saveCurrencySettings(data: CurrencySettings) {\n    const validation = currencySettingsSchema.safeParse(data);\n\n    if (!validation.success) {\n        return { success: false, error: validation.error.errors[0].message };\n    }\n\n    try {\n        await fs.writeFile(settingsFilePath, JSON.stringify(validation.data, null, 2), 'utf-8');\n        revalidatePath('/', 'layout'); // Revalidate all pages\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save currency settings:', error);\n        return { success: false, error: 'Failed to save settings.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;;;;;;;AAMA,MAAM,mBAAmB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAElD,MAAM,kBAAoC;IACtC,cAAc;AAClB;AAEO,eAAe;IAClB,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,kBAAkB;QACjD,OAAO;YAAE,GAAG,eAAe;YAAE,GAAG,KAAK,KAAK,CAAC,KAAK;QAAC;IACrD,EAAE,OAAO,OAAO;QACZ,IAAI,AAAC,MAAgC,IAAI,KAAK,UAAU;YACpD,OAAO;QACX;QACA,MAAM;IACV;AACJ;AAEA,MAAM,yBAAyB,uKAAC,CAAC,MAAM,CAAC;IACpC,cAAc,uKAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,4CAA4C,WAAW;AAC9F;AAEO,eAAe,qBAAqB,IAAsB;IAC7D,MAAM,aAAa,uBAAuB,SAAS,CAAC;IAEpD,IAAI,CAAC,WAAW,OAAO,EAAE;QACrB,OAAO;YAAE,SAAS;YAAO,OAAO,WAAW,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO;QAAC;IACvE;IAEA,IAAI;QACA,MAAM,yGAAE,CAAC,SAAS,CAAC,kBAAkB,KAAK,SAAS,CAAC,WAAW,IAAI,EAAE,MAAM,IAAI;QAC/E,IAAA,+IAAc,EAAC,KAAK,WAAW,uBAAuB;QACtD,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO;YAAE,SAAS;YAAO,OAAO;QAA2B;IAC/D;AACJ;;;IAhCsB;IAiBA;;AAjBA,+OAAA;AAiBA,+OAAA","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/access-control/permissions.ts"],"sourcesContent":["\nexport type PermissionAction = {\n  action: string;\n  description: string;\n  allowedRoles: string[];\n};\n\nexport type FeaturePermission = {\n  feature: string;\n  description: string;\n  actions: PermissionAction[];\n};\n\nexport const featurePermissions: FeaturePermission[] = [\n  {\n    feature: 'Properties',\n    description: 'Manage property listings, details, and associated units/rooms.',\n    actions: [\n      { action: 'view', description: 'View property list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit property information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a property', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Units',\n    description: 'Manage individual units within a property.',\n    actions: [\n      { action: 'view', description: 'View unit list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit unit information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a unit', allowedRoles: ['Super Admin'] },\n    ],\n  },\n   {\n    feature: 'Rent-A-Car',\n    description: 'Manage vehicle rental agreements.',\n    actions: [\n      { action: 'view', description: 'View rental agreements', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete rental agreements', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n   {\n    feature: 'Car Sales',\n    description: 'Manage vehicle buying and selling operations.',\n    actions: [\n      { action: 'view', description: 'View vehicle inventory and sales', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add, edit, and delete vehicle records', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Lease Contracts',\n    description: 'Manage lease agreements with landlords.',\n    actions: [\n      { action: 'view', description: 'View lease agreements', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'manage', description: 'Create, edit, and delete lease agreements', allowedRoles: ['Super Admin', 'Admin'] },\n    ]\n  },\n  {\n    feature: 'Project Management',\n    description: 'Manage all aspects of projects, including billing, sub-contractors, and resource allocation.',\n    actions: [\n      { action: 'view', description: 'View project list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'manage', description: 'Create, edit, and delete projects', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'manage_billing', description: 'Manage project progress billing and retention', allowedRoles: ['Super Admin', 'Accountant'] },\n    ],\n  },\n   {\n    feature: 'Vaults & Stores',\n    description: 'Manage inventory, stock levels, and store locations.',\n    actions: [\n      { action: 'view', description: 'View stores and stock levels', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete stores and manage stock transactions', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n    {\n    feature: 'Products & Services',\n    description: 'Manage the catalog of products and services offered.',\n    actions: [\n      { action: 'view', description: 'View products and services', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete products and services', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'view_pricing', description: 'View cost and sale prices', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n    ],\n  },\n  {\n    feature: 'Asset Management',\n    description: 'Manage company assets, depreciation, and assignments.',\n    actions: [\n      { action: 'view', description: 'View asset list', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage', description: 'Add, edit, and assign assets', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete', description: 'Delete assets from the register', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Maintenance',\n    description: 'Manage maintenance tickets and service contracts.',\n    actions: [\n      { action: 'view_tickets', description: 'View maintenance tickets', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage_tickets', description: 'Create, edit, and update tickets', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'view_contracts', description: 'View service contracts', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage_contracts', description: 'Manage service contracts', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Workflow',\n    description: 'Manage document approval workflows.',\n    actions: [\n      { action: 'view', description: 'View workflow queue', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'manage', description: 'Approve or reject transactions', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Data Processing',\n    description: 'Extract data from documents using AI.',\n    actions: [\n      { action: 'access', description: 'Access document processing and data extraction features', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n    ],\n  },\n   {\n    feature: 'Utilities',\n    description: 'Manage utility accounts and bill payments.',\n    actions: [\n      { action: 'view', description: 'View utility accounts', allowedRoles: ['Super Admin', 'Admin', 'Accountant', 'User'] },\n      { action: 'manage', description: 'Add, edit, and delete utility accounts', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Landlords',\n    description: 'Manage landlord profiles and their associated contracts.',\n    actions: [\n      { action: 'view', description: 'View landlord list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant'] },\n      { action: 'edit', description: 'Edit landlord information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a landlord', allowedRoles: ['Super Admin'] },\n    ],\n  },\n    {\n    feature: 'Vendors',\n    description: 'Manage supplier and vendor profiles.',\n    actions: [\n      { action: 'view', description: 'View vendor list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit vendor information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a vendor', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Tenants',\n    description: 'Manage tenant profiles and their tenancy contracts.',\n    actions: [\n      { action: 'view', description: 'View tenant list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit tenant information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a tenant', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Customers',\n    description: 'Manage general customers for non-rental services.',\n    actions: [\n      { action: 'view', description: 'View customer list and details', allowedRoles: ['Super Admin', 'Admin', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit customer information', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete', description: 'Delete a customer', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Finance',\n    description: 'Access to financial modules like banking, payments, and chart of accounts.',\n    actions: [\n      { action: 'view_banking', description: 'View Banking and Petty Cash', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage_banking', description: 'Add/Edit/Delete bank accounts', allowedRoles: ['Super Admin'] },\n      { action: 'view_payments', description: 'View payment and receipt history', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'record_payment', description: 'Record new payments or receipts', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'delete_payment', description: 'Delete financial transactions', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'User Management',\n    description: 'Control over user accounts and their roles.',\n    actions: [\n      { action: 'view', description: 'View user list', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'add_user', description: 'Add new users', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'edit_user', description: 'Edit user details and roles', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete_user', description: 'Delete a user', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Settings',\n    description: 'Access to administrative settings.',\n    actions: [\n        { action: 'access_control', description: 'Manage user roles and permissions', allowedRoles: ['Super Admin'] },\n        { action: 'communication', description: 'Manage communication (Email/SMS) settings', allowedRoles: ['Super Admin', 'Admin'] },\n        { action: 'backup', description: 'Manage data backup and restore', allowedRoles: ['Super Admin'] },\n        { action: 'external_storage', description: 'Configure external storage (e.g., Google Drive)', allowedRoles: ['Developer'] },\n        { action: 'notifications', description: 'Send system-wide notifications', allowedRoles: ['Super Admin', 'Admin'] },\n        { action: 'contract_continuity', description: 'Review and fix contract data issues', allowedRoles: ['Super Admin'] },\n    ]\n  }\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/access-control/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport { type FeaturePermission, featurePermissions } from './permissions';\nimport { type UserRole } from '../user-roles/schema';\nimport { type ModuleSettings } from './schema';\n\nconst permissionsFilePath = path.join(process.cwd(), 'src/app/admin/access-control/permissions.json');\nconst usersFilePath = path.join(process.cwd(), 'src/app/admin/user-roles/users.json');\nconst moduleSettingsFilePath = path.join(process.cwd(), 'src/app/admin/access-control/module-settings.json');\nconst userOverridesFilePath = path.join(process.cwd(), 'src/app/admin/access-control/user-overrides.json');\n\nasync function readData(filePath: string) {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            // Return a default structure that can be safely merged\n            if (filePath.endsWith('permissions.json')) return [];\n            if (filePath.endsWith('users.json')) return [];\n            if (filePath.endsWith('module-settings.json')) return { modules: [] }; \n            if (filePath.endsWith('user-overrides.json')) return [];\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function getPermissions(): Promise<FeaturePermission[]> {\n     const savedPermissions = await readData(permissionsFilePath);\n     // Merge saved permissions with the default structure to ensure all features are listed\n    const allPermissions = featurePermissions.map(feature => {\n        const savedFeature = savedPermissions.find((p: any) => p.feature === feature.feature);\n        const actions = feature.actions.map(action => {\n        const savedAction = savedFeature?.actions.find((a: any) => a.action === action.action);\n        return {\n            ...action,\n            allowedRoles: savedAction ? savedAction.allowedRoles : action.allowedRoles,\n        };\n        });\n        return {\n        ...feature,\n        actions,\n        };\n    });\n    return allPermissions;\n}\n\nexport async function savePermissions(permissions: FeaturePermission[]) {\n    try {\n        await fs.writeFile(permissionsFilePath, JSON.stringify(permissions, null, 2), 'utf-8');\n        revalidatePath('/admin/access-control');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save permissions:', error);\n        return { success: false, error: 'Failed to save permissions.' };\n    }\n}\n\nexport async function updatePermission(featureName: string, actionName: string, role: string, isChecked: boolean) {\n    const currentPermissions = await getPermissions();\n    const feature = currentPermissions.find(f => f.feature === featureName);\n    if (feature) {\n        const action = feature.actions.find(a => a.action === actionName);\n        if (action) {\n            if (isChecked) {\n                if (!action.allowedRoles.includes(role)) {\n                    action.allowedRoles.push(role);\n                }\n            } else {\n                action.allowedRoles = action.allowedRoles.filter(r => r !== role);\n            }\n        }\n    }\n    return await savePermissions(currentPermissions);\n}\n\n\nexport async function getRoles(): Promise<string[]> {\n    try {\n        const users: UserRole[] = await readData(usersFilePath);\n        const allRoles = users.map(u => u.role);\n        // Add default roles that might not be in use yet\n        const defaultRoles = ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User', 'Developer'];\n        const uniqueRoles = Array.from(new Set([...allRoles, ...defaultRoles]));\n        return uniqueRoles;\n    } catch (error) {\n        console.error(\"Failed to read user roles\", error);\n        return ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User', 'Developer'];\n    }\n}\n\nexport type UserOverride = {\n    email: string;\n    allowedModules: string[];\n}\n\nexport async function getUserOverrides(): Promise<UserOverride[]> {\n    return (await readData(userOverridesFilePath)) as UserOverride[];\n}\n\nexport async function saveUserOverrides(overrides: UserOverride[]) {\n     try {\n        await fs.writeFile(userOverridesFilePath, JSON.stringify(overrides, null, 2), 'utf-8');\n        revalidatePath('/', 'layout');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save user overrides:', error);\n        return { success: false, error: 'Failed to save user overrides.' };\n    }\n}\n\n\nexport async function getCombinedAccessControlData() {\n    try {\n        const [permissions, moduleSettings, userOverrides] = await Promise.all([\n            getPermissions(),\n            readData(moduleSettingsFilePath) as Promise<ModuleSettings>,\n            getUserOverrides()\n        ]);\n        return { success: true, permissions, moduleSettings, userOverrides };\n    } catch(error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 954, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/project-management/projects/schema.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\nexport const progressBillingSchema = z.object({\n  id: z.string(),\n  date: z.string(),\n  description: z.string(),\n  percentage: z.number(),\n  amount: z.number(),\n  status: z.enum(['Draft', 'Submitted', 'Paid', 'Cancelled']),\n});\n\nexport const projectSchema = z.object({\n  id: z.string(),\n  projectNo: z.string().min(1, 'Project number is required.'),\n  projectName: z.string().min(1, 'Project name is required.'),\n  projectType: z.enum(['Main Contractor', 'Subcontractor']),\n  partyType: z.enum(['Customer', 'Vendor']),\n  partyCode: z.string().min(1, 'A customer or vendor is required.'),\n  partyName: z.string(),\n  status: z.enum(['Planning', 'In Progress', 'Completed', 'On Hold', 'Cancelled']),\n  startDate: z.string(),\n  endDate: z.string(),\n  contractValue: z.number().min(0),\n  retentionPercentage: z.number().min(0).max(100).optional().default(0),\n  retentionReleaseDate: z.string().optional(),\n  notes: z.string().optional(),\n  progressBillings: z.array(progressBillingSchema).optional().default([]),\n});\n\nexport type Project = z.infer<typeof projectSchema>;\nexport type ProgressBilling = z.infer<typeof progressBillingSchema>;\n"],"names":[],"mappings":";;;;;;AACA;;AAEO,MAAM,wBAAwB,uKAAC,CAAC,MAAM,CAAC;IAC5C,IAAI,uKAAC,CAAC,MAAM;IACZ,MAAM,uKAAC,CAAC,MAAM;IACd,aAAa,uKAAC,CAAC,MAAM;IACrB,YAAY,uKAAC,CAAC,MAAM;IACpB,QAAQ,uKAAC,CAAC,MAAM;IAChB,QAAQ,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAS;QAAa;QAAQ;KAAY;AAC5D;AAEO,MAAM,gBAAgB,uKAAC,CAAC,MAAM,CAAC;IACpC,IAAI,uKAAC,CAAC,MAAM;IACZ,WAAW,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,aAAa,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,aAAa,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAmB;KAAgB;IACxD,WAAW,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAY;KAAS;IACxC,WAAW,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,WAAW,uKAAC,CAAC,MAAM;IACnB,QAAQ,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAY;QAAe;QAAa;QAAW;KAAY;IAC/E,WAAW,uKAAC,CAAC,MAAM;IACnB,SAAS,uKAAC,CAAC,MAAM;IACjB,eAAe,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAC9B,qBAAqB,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,QAAQ,GAAG,OAAO,CAAC;IACnE,sBAAsB,uKAAC,CAAC,MAAM,GAAG,QAAQ;IACzC,OAAO,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC1B,kBAAkB,uKAAC,CAAC,KAAK,CAAC,uBAAuB,QAAQ,GAAG,OAAO,CAAC,EAAE;AACxE","debugId":null}},
    {"offset": {"line": 1008, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/project-management/projects/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\n// import { firestoreAdmin } from '@/lib/firebase/admin-config';\nimport { projectSchema, type Project } from './schema';\n\nconst formSchema = projectSchema.omit({ id: true });\n\nasync function getNextProjectNumber() {\n    // const querySnapshot = await firestoreAdmin.collection(\"projects\").get();\n    // let maxNum = 0;\n    // querySnapshot.docs.forEach(doc => {\n    //     const project = doc.data() as Project;\n    //     const match = project.projectNo.match(/^PROJ-(\\d+)$/);\n    //     if (match) {\n    //         const num = parseInt(match[1], 10);\n    //         if (num > maxNum) {\n    //             maxNum = num;\n    //         }\n    //     }\n    // });\n    // return `PROJ-${(maxNum + 1).toString().padStart(4, '0')}`;\n    return 'PROJ-0001';\n}\n\nexport async function getAllProjects(): Promise<Project[]> {\n    // const querySnapshot = await firestoreAdmin.collection(\"projects\").get();\n    // return querySnapshot.docs.map(doc => ({ ...doc.data(), id: doc.id })) as Project[];\n    return [];\n}\n\nexport async function saveProject(data: Omit<Project, 'id'> & { id?: string, isAutoProjectNo?: boolean }) {\n    const { isAutoProjectNo, ...projectData } = data;\n    const validation = formSchema.safeParse(projectData);\n    if (!validation.success) {\n        return { success: false, error: validation.error.errors.map(e => e.message).join(', ') };\n    }\n\n    try {\n        let savedProject: Project;\n\n        if (!data.id) { // Create new\n            let newProjectNo = projectData.projectNo;\n            if (isAutoProjectNo || !newProjectNo) {\n                newProjectNo = await getNextProjectNumber();\n            }\n            const newProject = { ...validation.data, projectNo: newProjectNo };\n            // const docRef = await firestoreAdmin.collection(\"projects\").add(newProject);\n            // savedProject = { ...newProject, id: docRef.id };\n            savedProject = { ...newProject, id: 'mock-id' };\n        } else { // Update\n            // const docRef = firestoreAdmin.collection(\"projects\").doc(data.id);\n            // await docRef.update(validation.data);\n            // const updatedDoc = await docRef.get();\n            // savedProject = { ...updatedDoc.data(), id: updatedDoc.id } as Project;\n            savedProject = { ...validation.data, id: data.id } as Project;\n        }\n\n        revalidatePath('/project-management/projects');\n        return { success: true, data: savedProject };\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n\nexport async function deleteProject(id: string) {\n    try {\n        // await firestoreAdmin.collection(\"projects\").doc(id).delete();\n        revalidatePath('/project-management/projects');\n        return { success: true };\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;AAIA;AACA,gEAAgE;AAChE;;;;;AAEA,MAAM,aAAa,0KAAa,CAAC,IAAI,CAAC;IAAE,IAAI;AAAK;AAEjD,eAAe;IACX,2EAA2E;IAC3E,kBAAkB;IAClB,sCAAsC;IACtC,6CAA6C;IAC7C,6DAA6D;IAC7D,mBAAmB;IACnB,8CAA8C;IAC9C,8BAA8B;IAC9B,4BAA4B;IAC5B,YAAY;IACZ,QAAQ;IACR,MAAM;IACN,6DAA6D;IAC7D,OAAO;AACX;AAEO,eAAe;IAClB,2EAA2E;IAC3E,sFAAsF;IACtF,OAAO,EAAE;AACb;AAEO,eAAe,YAAY,IAAsE;IACpG,MAAM,EAAE,eAAe,EAAE,GAAG,aAAa,GAAG;IAC5C,MAAM,aAAa,WAAW,SAAS,CAAC;IACxC,IAAI,CAAC,WAAW,OAAO,EAAE;QACrB,OAAO;YAAE,SAAS;YAAO,OAAO,WAAW,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,OAAO,EAAE,IAAI,CAAC;QAAM;IAC3F;IAEA,IAAI;QACA,IAAI;QAEJ,IAAI,CAAC,KAAK,EAAE,EAAE;YACV,IAAI,eAAe,YAAY,SAAS;YACxC,IAAI,mBAAmB,CAAC,cAAc;gBAClC,eAAe,MAAM;YACzB;YACA,MAAM,aAAa;gBAAE,GAAG,WAAW,IAAI;gBAAE,WAAW;YAAa;YACjE,8EAA8E;YAC9E,mDAAmD;YACnD,eAAe;gBAAE,GAAG,UAAU;gBAAE,IAAI;YAAU;QAClD,OAAO;YACH,qEAAqE;YACrE,wCAAwC;YACxC,yCAAyC;YACzC,yEAAyE;YACzE,eAAe;gBAAE,GAAG,WAAW,IAAI;gBAAE,IAAI,KAAK,EAAE;YAAC;QACrD;QAEA,IAAA,+IAAc,EAAC;QACf,OAAO;YAAE,SAAS;YAAM,MAAM;QAAa;IAC/C,EAAE,OAAO,OAAO;QACZ,OAAO;YAAE,SAAS;YAAO,OAAO,AAAC,MAAgB,OAAO;QAAC;IAC7D;AACJ;AAEO,eAAe,cAAc,EAAU;IAC1C,IAAI;QACA,gEAAgE;QAChE,IAAA,+IAAc,EAAC;QACf,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAO;QACZ,OAAO;YAAE,SAAS;YAAO,OAAO,AAAC,MAAgB,OAAO;QAAC;IAC7D;AACJ;;;IAhDsB;IAMA;IAkCA;;AAxCA,+OAAA;AAMA,+OAAA;AAkCA,+OAAA","debugId":null}},
    {"offset": {"line": 1123, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/lookups/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { type Tenant } from '@/app/tenancy/tenants/schema';\nimport { type Landlord } from '@/app/landlord/schema';\nimport { type Vendor } from '@/app/vendors/schema';\nimport { type Agent } from '@/app/vendors/agents/schema';\nimport { type Customer } from '@/app/tenancy/customer/schema';\nimport { type BankAccount } from '@/app/finance/banking/schema';\nimport { type Property } from '@/app/property/properties/list/schema';\nimport { type Unit } from '@/app/property/units/schema';\nimport { type Room } from '@/app/property/rooms/schema';\nimport { type Partition } from '@/app/property/partitions/schema';\nimport { type ReceiptBook } from '@/app/finance/book-management/schema';\nimport { type Product } from '@/app/products/schema';\nimport { type MaintenanceTicket } from '@/app/maintenance/ticket-issue/schema';\nimport { type Account } from '@/app/finance/chart-of-accounts/schema';\n\n\nasync function readData<T>(filePath: string, defaultValue: T[] = []): Promise<T[]> {\n    try {\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            try {\n                await fs.mkdir(path.dirname(filePath), { recursive: true });\n                await fs.writeFile(filePath, JSON.stringify(defaultValue, null, 2), 'utf-8');\n                return defaultValue;\n            } catch (writeError) {\n                console.error(`Error creating file ${filePath}:`, writeError);\n                throw writeError;\n            }\n        }\n        throw error;\n    }\n}\n\nexport async function getLookups() {\n    const tenantsData: {tenantData: Tenant}[] = await readData(path.join(process.cwd(), 'src/app/tenancy/tenants/tenants-data.json'));\n    const landlordsData: {landlordData: Landlord}[] = await readData(path.join(process.cwd(), 'src/app/landlord/landlords-data.json'));\n    const vendorsData: {vendorData: Vendor}[] = await readData(path.join(process.cwd(), 'src/app/vendors/vendors-data.json'));\n    const agentsData: Agent[] = await readData(path.join(process.cwd(), 'src/app/vendors/agents/agents-data.json'));\n    const customersData: {customerData: Customer}[] = await readData(path.join(process.cwd(), 'src/app/tenancy/customer/customers-data.json'));\n    const bankAccountsData: BankAccount[] = await readData(path.join(process.cwd(), 'src/app/finance/banking/accounts-data.json'));\n    const usersData: any[] = await readData(path.join(process.cwd(), 'src/app/admin/user-roles/users.json'));\n    const receiptBooksData: ReceiptBook[] = await readData(path.join(process.cwd(), 'src/app/finance/book-management/receipt-books-data.json'));\n    const propertiesData: {propertyData: Property}[] = await readData(path.join(process.cwd(), 'src/app/property/properties/list/properties-data.json'));\n    const unitsData: Unit[] = await readData(path.join(process.cwd(), 'src/app/property/units/units-data.json'));\n    const roomsData: Room[] = await readData(path.join(process.cwd(), 'src/app/property/rooms/rooms-data.json'));\n    const productsData: Product[] = await readData(path.join(process.cwd(), 'src/app/products/products-data.json'));\n    const maintenanceTicketsData: MaintenanceTicket[] = await readData(path.join(process.cwd(), 'src/app/maintenance/ticket-issue/tickets-data.json'));\n    const expenseAccountsData: Account[] = await readData(path.join(process.cwd(), 'src/app/finance/chart-of-accounts/accounts.json'));\n\n\n    return {\n        tenants: tenantsData.map(t => ({ value: t.tenantData.code, label: t.tenantData.name })),\n        landlords: landlordsData.map(l => ({ value: l.landlordData.code, label: l.landlordData.name })),\n        vendors: vendorsData.map(v => ({ value: v.vendorData.code, label: v.vendorData.name })),\n        agents: agentsData.map(a => ({ value: a.code, label: a.name })),\n        customers: customersData.map(c => ({ value: c.customerData.code, label: c.customerData.name })),\n        bankAccounts: bankAccountsData.map(b => ({ value: b.id, label: `${b.accountName} (${b.bankName})`})),\n        users: usersData.map((u: any) => ({ value: u.name, label: u.name })),\n        receiptBooks: receiptBooksData,\n        properties: propertiesData.map(p => ({ value: p.propertyData.code, label: p.propertyData.name })),\n        units: unitsData.map(u => ({ value: u.unitCode, label: u.unitCode, propertyCode: u.propertyCode })),\n        rooms: roomsData.map(r => ({ value: r.roomCode, label: r.roomCode, propertyCode: r.propertyCode, unitCode: r.unitCode })),\n        products: productsData,\n        maintenanceTickets: maintenanceTicketsData\n            .filter(t => t.status !== 'Completed' && t.status !== 'Cancelled')\n            .map(t => ({ value: t.id, label: `${t.ticketNo} - ${t.issueType}` })),\n        expenseAccounts: expenseAccountsData\n            .filter(acc => acc.type === 'Expense' && !acc.isGroup)\n            .map(acc => ({ value: acc.code, label: `${acc.name} (${acc.code})` })),\n    }\n}\n\n\nexport async function getExpenseAccounts(): Promise<{ value: string; label: string }[]> {\n    const accounts: Account[] = await readData(path.join(process.cwd(), 'src/app/finance/chart-of-accounts/accounts.json'));\n    return accounts\n        .filter(acc => acc.type === 'Expense' && !acc.isGroup)\n        .map(acc => ({ value: acc.code, label: `${acc.name} (${acc.code})` }));\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1245, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/project-management/projects/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCompanyProfile as '00b6be478acfdf6b7794a7b34be547b3606ebfd51c'} from 'ACTIONS_MODULE0'\nexport {saveCompanyProfile as '40c9350172a0cc49767c134a7e5ed44affe0683337'} from 'ACTIONS_MODULE0'\nexport {checkLicenseStatus as '008a29e84bd260b304f797613c7c39c01029f96950'} from 'ACTIONS_MODULE1'\nexport {getCurrencySettings as '00bf02fbdbf2069a58be66f4c215b7083c555f2e0f'} from 'ACTIONS_MODULE2'\nexport {getCombinedAccessControlData as '00484ec9aa59cb806ed9f49233b1daa442fefc4db8'} from 'ACTIONS_MODULE3'\nexport {getAllProjects as '00a491b7073afdcca4bcc14b0befeb5ba9bf7d3d7d'} from 'ACTIONS_MODULE4'\nexport {deleteProject as '4018c68f3149c93c4c3d01d4aa38b1c1ebd19617e6'} from 'ACTIONS_MODULE4'\nexport {saveProject as '401fc94bf49ec01e0815ad69c723dde5ca41190db1'} from 'ACTIONS_MODULE4'\nexport {getLookups as '000e606f4bfa091a26b7d7183ad8692c928e388562'} from 'ACTIONS_MODULE5'\n"],"names":[],"mappings":";AAAA;AAEA;AACA;AACA;AACA;AAGA","debugId":null}},
    {"offset": {"line": 1304, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/project-management/projects/projects-client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ProjectsClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProjectsClient() from the server but ProjectsClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/project-management/projects/projects-client.tsx <module evaluation>\",\n    \"ProjectsClient\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,yFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1318, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/project-management/projects/projects-client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ProjectsClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProjectsClient() from the server but ProjectsClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/project-management/projects/projects-client.tsx\",\n    \"ProjectsClient\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,qEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1340, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/project-management/projects/page.tsx"],"sourcesContent":["\nimport { ProjectsClient } from './projects-client';\nimport { getAllProjects } from './actions';\nimport { type Project } from './schema';\n\nexport default async function ProjectsPage() {\n  const projects: Project[] = await getAllProjects();\n\n  return <ProjectsClient initialProjects={projects} />;\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;;;;AAGe,eAAe;IAC5B,MAAM,WAAsB,MAAM,IAAA,4KAAc;IAEhD,qBAAO,8OAAC,wLAAc;QAAC,iBAAiB;;;;;;AAC1C","debugId":null}}]
}