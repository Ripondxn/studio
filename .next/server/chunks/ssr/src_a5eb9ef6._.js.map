{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,6DACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,mNAAgB,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,IAAA,yHAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/products/data-table.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    onSortingChange: setSorting,\n    getSortedRowModel: getSortedRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    getFilteredRowModel: getFilteredRowModel(),\n    state: {\n      sorting,\n      columnFilters,\n    },\n  });\n  \n  return (\n    <div className=\"rounded-md border p-4\">\n      <div className=\"flex items-center py-4 gap-4\">\n        <Input\n          placeholder=\"Filter by item name...\"\n          value={(table.getColumn('itemName')?.getFilterValue() as string) ?? ''}\n          onChange={(event) =>\n            table.getColumn('itemName')?.setFilterValue(event.target.value)\n          }\n          className=\"max-w-sm\"\n        />\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && 'selected'}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No products or services found.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n        >\n          Previous\n        </Button>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n        >\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAaA;AAQA;AACA;AAzBA;;;;;;;AAgCO,SAAS,UAAyB,EACvC,OAAO,EACP,IAAI,EAC0B;IAC9B,MAAM,CAAC,SAAS,WAAW,GAAG,iNAAc,CAAe,EAAE;IAC7D,MAAM,CAAC,eAAe,iBAAiB,GAAG,iNAAc,CAAqB,EAAE;IAE/E,MAAM,QAAQ,IAAA,uMAAa,EAAC;QAC1B;QACA;QACA,iBAAiB,IAAA,wLAAe;QAChC,uBAAuB,IAAA,8LAAqB;QAC5C,iBAAiB;QACjB,mBAAmB,IAAA,0LAAiB;QACpC,uBAAuB;QACvB,qBAAqB,IAAA,4LAAmB;QACxC,OAAO;YACL;YACA;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,0IAAK;oBACJ,aAAY;oBACZ,OAAO,AAAC,MAAM,SAAS,CAAC,aAAa,oBAA+B;oBACpE,UAAU,CAAC,QACT,MAAM,SAAS,CAAC,aAAa,eAAe,MAAM,MAAM,CAAC,KAAK;oBAEhE,WAAU;;;;;;;;;;;0BAGd,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,0IAAK;;sCACJ,8OAAC,gJAAW;sCACT,MAAM,eAAe,GAAG,GAAG,CAAC,CAAC,4BAC5B,8OAAC,6IAAQ;8CACN,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC;wCACxB,qBACE,8OAAC,8IAAS;sDACP,OAAO,aAAa,GACjB,OACA,IAAA,oMAAU,EACR,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,EAC9B,OAAO,UAAU;2CALT,OAAO,EAAE;;;;;oCAS7B;mCAZa,YAAY,EAAE;;;;;;;;;;sCAgBjC,8OAAC,8IAAS;sCACP,MAAM,WAAW,GAAG,IAAI,EAAE,SACzB,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,oBAC5B,8OAAC,6IAAQ;oCAEP,cAAY,IAAI,aAAa,MAAM;8CAElC,IAAI,eAAe,GAAG,GAAG,CAAC,CAAC,qBAC1B,8OAAC,8IAAS;sDACP,IAAA,oMAAU,EACT,KAAK,MAAM,CAAC,SAAS,CAAC,IAAI,EAC1B,KAAK,UAAU;2CAHH,KAAK,EAAE;;;;;mCAJpB,IAAI,EAAE;;;;0DAcf,8OAAC,6IAAQ;0CACP,cAAA,8OAAC,8IAAS;oCACR,SAAS,QAAQ,MAAM;oCACvB,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQX,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,4IAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,SAAS,IAAM,MAAM,YAAY;wBACjC,UAAU,CAAC,MAAM,kBAAkB;kCACpC;;;;;;kCAGD,8OAAC,4IAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,SAAS,IAAM,MAAM,QAAQ;wBAC7B,UAAU,CAAC,MAAM,cAAc;kCAChC;;;;;;;;;;;;;;;;;;AAMT","debugId":null}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,0KAAoB;AAEnC,MAAM,gBAAgB,6KAAuB;AAE7C,MAAM,eAAe,4KAAsB;AAE3C,MAAM,cAAc,2KAAqB;AAEzC,MAAM,8BAAgB,mNAAgB,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,6KAAuB;QACtB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,6KAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,mNAAgB,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,6KAAuB;gBACtB,KAAK;gBACL,WAAW,IAAA,yHAAE,EACX,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,2KAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,iMAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,6KAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,2KAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,iLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,IAAA,uKAAG,EACvB;AAGF,MAAM,sBAAQ,mNAAgB,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,yKAAmB;QAClB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,yKAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/products/schema.ts"],"sourcesContent":["import { z } from 'zod';\n\nexport const productSchema = z.object({\n  id: z.string(),\n  itemCode: z.string().min(1, 'Item code is required.'),\n  itemName: z.string().min(1, 'Item name is required.'),\n  itemType: z.enum(['Product', 'Service']),\n  salePrice: z.number().min(0, 'Sale price must be a positive number.'),\n  costPrice: z.number().min(0, 'Cost price must be a positive number.'),\n});\n\nexport type Product = z.infer<typeof productSchema>;\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,gBAAgB,uKAAC,CAAC,MAAM,CAAC;IACpC,IAAI,uKAAC,CAAC,MAAM;IACZ,UAAU,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAW;KAAU;IACvC,WAAW,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,WAAW,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC/B","debugId":null}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/products/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { productSchema, type Product } from './schema';\n\nconst productsFilePath = path.join(process.cwd(), 'src/app/products/products-data.json');\n\n\nasync function readProducts(): Promise<Product[]> {\n    try {\n        await fs.access(productsFilePath);\n        const data = await fs.readFile(productsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await writeProducts([]);\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeProducts(data: Product[]) {\n    await fs.writeFile(productsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getProducts(): Promise<Product[]> {\n    return await readProducts();\n}\n\nexport async function getNextItemCode() {\n    const allProducts = await readProducts();\n    let maxNum = 0;\n    allProducts.forEach(p => {\n        const match = p.itemCode.match(/^ITEM-(\\d+)$/);\n        if(match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `ITEM-${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\n\nconst productFormSchema = productSchema.omit({ id: true });\n\nexport async function saveProduct(data: z.infer<typeof productFormSchema>, id?: string, isAutoCode?: boolean) {\n    const validation = productFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allProducts = await readProducts();\n        \n        if (id) { // Update existing\n            const index = allProducts.findIndex(p => p.id === id);\n            if(index === -1) return { success: false, error: 'Product not found.'};\n            allProducts[index] = { ...allProducts[index], ...validation.data };\n        } else { // Create new\n            let itemCode = validation.data.itemCode;\n            if (isAutoCode) {\n                itemCode = await getNextItemCode();\n            } else {\n                const itemExists = allProducts.some(p => p.itemCode === itemCode);\n                if (itemExists) {\n                    return { success: false, error: `Item with code \"${itemCode}\" already exists.` };\n                }\n            }\n\n            const newProduct: Product = {\n                ...validation.data,\n                itemCode,\n                id: `PROD-${Date.now()}`,\n            };\n            allProducts.push(newProduct);\n        }\n\n        await writeProducts(allProducts);\n        revalidatePath('/products');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteProduct(productId: string) {\n     try {\n        const allProducts = await readProducts();\n        const updatedProducts = allProducts.filter(p => p.id !== productId);\n        \n        if (allProducts.length === updatedProducts.length) {\n            return { success: false, error: 'Product not found.' };\n        }\n\n        await writeProducts(updatedProducts);\n        revalidatePath('/products');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAoDsB,cAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/products/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { productSchema, type Product } from './schema';\n\nconst productsFilePath = path.join(process.cwd(), 'src/app/products/products-data.json');\n\n\nasync function readProducts(): Promise<Product[]> {\n    try {\n        await fs.access(productsFilePath);\n        const data = await fs.readFile(productsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await writeProducts([]);\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeProducts(data: Product[]) {\n    await fs.writeFile(productsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getProducts(): Promise<Product[]> {\n    return await readProducts();\n}\n\nexport async function getNextItemCode() {\n    const allProducts = await readProducts();\n    let maxNum = 0;\n    allProducts.forEach(p => {\n        const match = p.itemCode.match(/^ITEM-(\\d+)$/);\n        if(match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `ITEM-${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\n\nconst productFormSchema = productSchema.omit({ id: true });\n\nexport async function saveProduct(data: z.infer<typeof productFormSchema>, id?: string, isAutoCode?: boolean) {\n    const validation = productFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allProducts = await readProducts();\n        \n        if (id) { // Update existing\n            const index = allProducts.findIndex(p => p.id === id);\n            if(index === -1) return { success: false, error: 'Product not found.'};\n            allProducts[index] = { ...allProducts[index], ...validation.data };\n        } else { // Create new\n            let itemCode = validation.data.itemCode;\n            if (isAutoCode) {\n                itemCode = await getNextItemCode();\n            } else {\n                const itemExists = allProducts.some(p => p.itemCode === itemCode);\n                if (itemExists) {\n                    return { success: false, error: `Item with code \"${itemCode}\" already exists.` };\n                }\n            }\n\n            const newProduct: Product = {\n                ...validation.data,\n                itemCode,\n                id: `PROD-${Date.now()}`,\n            };\n            allProducts.push(newProduct);\n        }\n\n        await writeProducts(allProducts);\n        revalidatePath('/products');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteProduct(productId: string) {\n     try {\n        const allProducts = await readProducts();\n        const updatedProducts = allProducts.filter(p => p.id !== productId);\n        \n        if (allProducts.length === updatedProducts.length) {\n            return { success: false, error: 'Product not found.' };\n        }\n\n        await writeProducts(updatedProducts);\n        revalidatePath('/products');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAkCsB,kBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 531, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,mNAAgB,CAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,0KAAqB;QACpB,WAAW,IAAA,yHAAE,EACX,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,2KAAsB;YACrB,WAAW,IAAA,yHAAE,EACX;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,0KAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 566, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/products/add-product-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';\nimport { Plus, Loader2 } from 'lucide-react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { productSchema, type Product } from './schema';\nimport { saveProduct, getNextItemCode } from './actions';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\n\nconst formSchema = productSchema.omit({ id: true });\n\ntype ProductFormData = z.infer<typeof formSchema>;\n\ninterface AddProductDialogProps {\n    product?: Product;\n    onProductAdded: () => void;\n    children?: React.ReactNode;\n    isOpen?: boolean;\n    setIsOpen?: (open: boolean) => void;\n}\n\nexport function AddProductDialog({ product, onProductAdded, children, isOpen: externalOpen, setIsOpen: setExternalOpen }: AddProductDialogProps) {\n  const [internalOpen, setInternalOpen] = useState(false);\n  const isOpen = externalOpen ?? internalOpen;\n  const setIsOpen = setExternalOpen ?? setInternalOpen;\n\n  const [isSaving, setIsSaving] = useState(false);\n  const [isAutoCode, setIsAutoCode] = useState(true);\n  const { toast } = useToast();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    setValue,\n    formState: { errors },\n  } = useForm<ProductFormData>({\n    resolver: zodResolver(formSchema),\n  });\n\n  useEffect(() => {\n    const initializeForm = async () => {\n        if (product) {\n            reset(product);\n            setIsAutoCode(false); // When editing, code is always manual\n        } else {\n            const nextCode = await getNextItemCode();\n            reset({\n                itemCode: nextCode,\n                itemName: '',\n                itemType: 'Product',\n                salePrice: 0,\n                costPrice: 0,\n            });\n            setIsAutoCode(true);\n        }\n    }\n    if (isOpen) {\n        initializeForm();\n    }\n  }, [isOpen, product, reset]);\n\n  const onSubmit = async (data: ProductFormData) => {\n    setIsSaving(true);\n    const result = await saveProduct(data, product?.id, !product && isAutoCode);\n\n    if (result.success) {\n      toast({\n        title: product ? 'Item Updated' : 'Item Added',\n        description: `Successfully ${product ? 'updated' : 'added'} item \"${data.itemName}\".`,\n      });\n      setIsOpen(false);\n      onProductAdded();\n    } else {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: result.error,\n      });\n    }\n    setIsSaving(false);\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      {children ? (\n            <DialogTrigger asChild>{children}</DialogTrigger>\n      ) : (\n        <DialogTrigger asChild>\n            <Button>\n                <Plus className=\"mr-2 h-4 w-4\" /> Add New Item\n            </Button>\n        </DialogTrigger>\n      )}\n      <DialogContent className=\"sm:max-w-lg\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <DialogHeader>\n                <DialogTitle>{product ? 'Edit Item' : 'Add New Item'}</DialogTitle>\n                <DialogDescription>\n                    Fill in the details for your product or service.\n                </DialogDescription>\n            </DialogHeader>\n            <div className=\"grid gap-4 py-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"itemCode\">Item Code</Label>\n                        <Input id=\"itemCode\" {...register('itemCode')} disabled={isAutoCode} />\n                        {errors.itemCode && <p className=\"text-destructive text-xs mt-1\">{errors.itemCode.message}</p>}\n                    </div>\n                     <div className=\"flex items-end space-x-2 pb-1\">\n                        <Switch\n                            id=\"auto-code-switch\"\n                            checked={isAutoCode}\n                            onCheckedChange={setIsAutoCode}\n                            disabled={!!product}\n                        />\n                        <Label htmlFor=\"auto-code-switch\">Auto-generate Code</Label>\n                    </div>\n                </div>\n                 <div className=\"space-y-2\">\n                    <Label htmlFor=\"itemName\">Item Name</Label>\n                    <Input id=\"itemName\" {...register('itemName')} />\n                    {errors.itemName && <p className=\"text-destructive text-xs mt-1\">{errors.itemName.message}</p>}\n                </div>\n                 <div className=\"space-y-2\">\n                    <Label htmlFor=\"itemType\">Item Type</Label>\n                    <Controller\n                        name=\"itemType\"\n                        control={control}\n                        render={({ field }) => (\n                            <Select onValueChange={field.onChange} value={field.value}>\n                                <SelectTrigger><SelectValue/></SelectTrigger>\n                                <SelectContent>\n                                    <SelectItem value=\"Product\">Product</SelectItem>\n                                    <SelectItem value=\"Service\">Service</SelectItem>\n                                </SelectContent>\n                            </Select>\n                        )} />\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"salePrice\">Sale Price</Label>\n                        <Input id=\"salePrice\" type=\"number\" {...register('salePrice', { valueAsNumber: true })} />\n                        {errors.salePrice && <p className=\"text-destructive text-xs mt-1\">{errors.salePrice.message}</p>}\n                    </div>\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"costPrice\">Cost Price</Label>\n                        <Input id=\"costPrice\" type=\"number\" {...register('costPrice', { valueAsNumber: true })} />\n                        {errors.costPrice && <p className=\"text-destructive text-xs mt-1\">{errors.costPrice.message}</p>}\n                    </div>\n                </div>\n            </div>\n            <DialogFooter>\n                <DialogClose asChild>\n                    <Button type=\"button\" variant=\"outline\" onClick={() => reset()}>Cancel</Button>\n                </DialogClose>\n                <Button type=\"submit\" disabled={isSaving}>\n                    {isSaving && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                    {product ? 'Save Changes' : 'Add Item'}\n                </Button>\n            </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1047, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,mLAAyB;AAE7C,MAAM,qBAAqB,sLAA4B;AAEvD,MAAM,oBAAoB,qLAA2B;AAErD,MAAM,mCAAqB,mNAAgB,CAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,sLAA4B;QAC3B,WAAW,IAAA,yHAAE,EACX,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,mBAAmB,WAAW,GAAG,sLAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,mNAAgB,CAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,sLAA4B;gBAC3B,KAAK;gBACL,WAAW,IAAA,yHAAE,EACX,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,sLAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,mNAAgB,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oLAA0B;QACzB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,oLAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,mNAAgB,CAG7C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,0LAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,uBAAuB,WAAW,GAChC,0LAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,IAAA,oJAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,qLAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,IAAA,oJAAc,EAAC;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,qLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1183, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/products/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { productSchema, type Product } from './schema';\n\nconst productsFilePath = path.join(process.cwd(), 'src/app/products/products-data.json');\n\n\nasync function readProducts(): Promise<Product[]> {\n    try {\n        await fs.access(productsFilePath);\n        const data = await fs.readFile(productsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await writeProducts([]);\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeProducts(data: Product[]) {\n    await fs.writeFile(productsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getProducts(): Promise<Product[]> {\n    return await readProducts();\n}\n\nexport async function getNextItemCode() {\n    const allProducts = await readProducts();\n    let maxNum = 0;\n    allProducts.forEach(p => {\n        const match = p.itemCode.match(/^ITEM-(\\d+)$/);\n        if(match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `ITEM-${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\n\nconst productFormSchema = productSchema.omit({ id: true });\n\nexport async function saveProduct(data: z.infer<typeof productFormSchema>, id?: string, isAutoCode?: boolean) {\n    const validation = productFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allProducts = await readProducts();\n        \n        if (id) { // Update existing\n            const index = allProducts.findIndex(p => p.id === id);\n            if(index === -1) return { success: false, error: 'Product not found.'};\n            allProducts[index] = { ...allProducts[index], ...validation.data };\n        } else { // Create new\n            let itemCode = validation.data.itemCode;\n            if (isAutoCode) {\n                itemCode = await getNextItemCode();\n            } else {\n                const itemExists = allProducts.some(p => p.itemCode === itemCode);\n                if (itemExists) {\n                    return { success: false, error: `Item with code \"${itemCode}\" already exists.` };\n                }\n            }\n\n            const newProduct: Product = {\n                ...validation.data,\n                itemCode,\n                id: `PROD-${Date.now()}`,\n            };\n            allProducts.push(newProduct);\n        }\n\n        await writeProducts(allProducts);\n        revalidatePath('/products');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteProduct(productId: string) {\n     try {\n        const allProducts = await readProducts();\n        const updatedProducts = allProducts.filter(p => p.id !== productId);\n        \n        if (allProducts.length === updatedProducts.length) {\n            return { success: false, error: 'Product not found.' };\n        }\n\n        await writeProducts(updatedProducts);\n        revalidatePath('/products');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IA8FsB,gBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 1195, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 1237, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/products/columns.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { ColumnDef } from '@tanstack/react-table';\nimport { MoreHorizontal, Edit, Trash2 } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { type Product } from './schema';\nimport { AddProductDialog } from './add-product-dialog';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { deleteProduct } from './actions';\nimport { useToast } from '@/hooks/use-toast';\nimport { useCurrency } from '@/context/currency-context';\nimport { Badge } from '@/components/ui/badge';\n\nconst ActionsCell = ({ row, onProductUpdate }: { row: { original: Product }, onProductUpdate: () => void }) => {\n    const product = row.original;\n    const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n    const [isDeleting, setIsDeleting] = useState(false);\n    const { toast } = useToast();\n\n    const handleDelete = async () => {\n        setIsDeleting(true);\n        const result = await deleteProduct(product.id);\n        if (result.success) {\n            toast({ title: 'Success', description: 'Item has been deleted.' });\n            onProductUpdate();\n        } else {\n            toast({ variant: 'destructive', title: 'Error', description: result.error });\n        }\n        setIsDeleting(false);\n        setIsDeleteDialogOpen(false);\n    };\n    \n    return (\n        <>\n            <AddProductDialog \n                product={product} \n                isOpen={isEditDialogOpen}\n                setIsOpen={setIsEditDialogOpen}\n                onProductAdded={onProductUpdate}\n            >\n                 <span className=\"w-full\"/>\n            </AddProductDialog>\n             <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n                        <AlertDialogDescription>This action cannot be undone. This will permanently delete the item \"{product.itemName}\".</AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel>Cancel</AlertDialogCancel>\n                        <AlertDialogAction onClick={handleDelete} disabled={isDeleting}>\n                            {isDeleting ? 'Deleting...' : 'Delete'}\n                        </AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n            <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                    <span className=\"sr-only\">Open menu</span>\n                    <MoreHorizontal className=\"h-4 w-4\" />\n                </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\">\n                    <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                    <DropdownMenuItem onSelect={() => setIsEditDialogOpen(true)}>\n                        <Edit className=\"mr-2 h-4 w-4\" /> Edit Details\n                    </DropdownMenuItem>\n                    <DropdownMenuItem className=\"text-destructive\" onSelect={() => setIsDeleteDialogOpen(true)}>\n                        <Trash2 className=\"mr-2 h-4 w-4\" /> Delete\n                    </DropdownMenuItem>\n                </DropdownMenuContent>\n            </DropdownMenu>\n        </>\n    );\n};\n\n\nexport const columns = ({ onProductUpdate }: { onProductUpdate: () => void }): ColumnDef<Product>[] => [\n    {\n      accessorKey: 'itemCode',\n      header: 'Item Code',\n    },\n    {\n      accessorKey: 'itemName',\n      header: 'Item Name',\n    },\n    {\n        accessorKey: 'itemType',\n        header: 'Type',\n        cell: ({row}) => {\n            const type = row.original.itemType;\n            return <Badge variant={type === 'Service' ? 'secondary' : 'outline'}>{type}</Badge>\n        }\n    },\n    {\n      accessorKey: 'salePrice',\n      header: () => <div className=\"text-right\">Sale Price</div>,\n      cell: function Cell({ row }) {\n        const { formatCurrency } = useCurrency();\n        const amount = parseFloat(String(row.getValue('salePrice')));\n        return <div className=\"text-right font-medium\">{formatCurrency(amount)}</div>\n      },\n    },\n    {\n      accessorKey: 'costPrice',\n      header: () => <div className=\"text-right\">Cost Price</div>,\n      cell: function Cell({ row }) {\n        const { formatCurrency } = useCurrency();\n        const amount = parseFloat(String(row.getValue('costPrice')));\n        return <div className=\"text-right font-medium\">{formatCurrency(amount)}</div>\n      },\n    },\n    {\n      id: 'actions',\n      cell: ({ row }) => <ActionsCell row={row} onProductUpdate={onProductUpdate} />,\n    },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1556, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/products/product-list.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { DataTable } from './data-table';\nimport { columns } from './columns';\nimport { type Product } from './schema';\n\nexport function ProductList({ initialProducts, onProductUpdate }: { initialProducts: Product[], onProductUpdate: () => void }) {\n  const [products, setProducts] = useState(initialProducts);\n  \n  useEffect(() => {\n    setProducts(initialProducts);\n  }, [initialProducts]);\n\n  return <DataTable columns={columns({ onProductUpdate })} data={products} />;\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAOO,SAAS,YAAY,EAAE,eAAe,EAAE,eAAe,EAA+D;IAC3H,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IAEzC,IAAA,kNAAS,EAAC;QACR,YAAY;IACd,GAAG;QAAC;KAAgB;IAEpB,qBAAO,8OAAC,qJAAS;QAAC,SAAS,IAAA,6IAAO,EAAC;YAAE;QAAgB;QAAI,MAAM;;;;;;AACjE","debugId":null}},
    {"offset": {"line": 1591, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/products/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { productSchema, type Product } from './schema';\n\nconst productsFilePath = path.join(process.cwd(), 'src/app/products/products-data.json');\n\n\nasync function readProducts(): Promise<Product[]> {\n    try {\n        await fs.access(productsFilePath);\n        const data = await fs.readFile(productsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await writeProducts([]);\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeProducts(data: Product[]) {\n    await fs.writeFile(productsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getProducts(): Promise<Product[]> {\n    return await readProducts();\n}\n\nexport async function getNextItemCode() {\n    const allProducts = await readProducts();\n    let maxNum = 0;\n    allProducts.forEach(p => {\n        const match = p.itemCode.match(/^ITEM-(\\d+)$/);\n        if(match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `ITEM-${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\n\nconst productFormSchema = productSchema.omit({ id: true });\n\nexport async function saveProduct(data: z.infer<typeof productFormSchema>, id?: string, isAutoCode?: boolean) {\n    const validation = productFormSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allProducts = await readProducts();\n        \n        if (id) { // Update existing\n            const index = allProducts.findIndex(p => p.id === id);\n            if(index === -1) return { success: false, error: 'Product not found.'};\n            allProducts[index] = { ...allProducts[index], ...validation.data };\n        } else { // Create new\n            let itemCode = validation.data.itemCode;\n            if (isAutoCode) {\n                itemCode = await getNextItemCode();\n            } else {\n                const itemExists = allProducts.some(p => p.itemCode === itemCode);\n                if (itemExists) {\n                    return { success: false, error: `Item with code \"${itemCode}\" already exists.` };\n                }\n            }\n\n            const newProduct: Product = {\n                ...validation.data,\n                itemCode,\n                id: `PROD-${Date.now()}`,\n            };\n            allProducts.push(newProduct);\n        }\n\n        await writeProducts(allProducts);\n        revalidatePath('/products');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteProduct(productId: string) {\n     try {\n        const allProducts = await readProducts();\n        const updatedProducts = allProducts.filter(p => p.id !== productId);\n        \n        if (allProducts.length === updatedProducts.length) {\n            return { success: false, error: 'Product not found.' };\n        }\n\n        await writeProducts(updatedProducts);\n        revalidatePath('/products');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IA8BsB,cAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 1603, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/products/products-client.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { ProductList } from './product-list';\nimport { AddProductDialog } from './add-product-dialog';\nimport { type Product } from './schema';\nimport { getProducts } from './actions';\nimport { Button } from '@/components/ui/button';\nimport { Plus } from 'lucide-react';\n\nexport function ProductsClient({ initialProducts }: { initialProducts: Product[] }) {\n  const [products, setProducts] = useState(initialProducts);\n\n  const refreshProducts = async () => {\n    const updatedProducts = await getProducts();\n    setProducts(updatedProducts);\n  };\n\n  useEffect(() => {\n    setProducts(initialProducts);\n  }, [initialProducts]);\n\n  return (\n    <div>\n        <div className=\"flex justify-end mb-4\">\n             <AddProductDialog onProductAdded={refreshProducts}>\n                <Button>\n                    <Plus className=\"mr-2 h-4 w-4\" /> Add New Item\n                </Button>\n            </AddProductDialog>\n        </div>\n        <ProductList initialProducts={products} onProductUpdate={refreshProducts} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AARA;;;;;;;;AAUO,SAAS,eAAe,EAAE,eAAe,EAAkC;IAChF,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IAEzC,MAAM,kBAAkB;QACtB,MAAM,kBAAkB,MAAM,IAAA,6KAAW;QACzC,YAAY;IACd;IAEA,IAAA,kNAAS,EAAC;QACR,YAAY;IACd,GAAG;QAAC;KAAgB;IAEpB,qBACE,8OAAC;;0BACG,8OAAC;gBAAI,WAAU;0BACV,cAAA,8OAAC,uKAAgB;oBAAC,gBAAgB;8BAC/B,cAAA,8OAAC,4IAAM;;0CACH,8OAAC,0MAAI;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;0BAI7C,8OAAC,yJAAW;gBAAC,iBAAiB;gBAAU,iBAAiB;;;;;;;;;;;;AAGjE","debugId":null}}]
}