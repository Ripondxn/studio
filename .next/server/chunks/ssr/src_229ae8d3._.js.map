{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,4KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,iLAA2B;YAC1B,WAAW,IAAA,yHAAE,EAAC;sBAEd,cAAA,8OAAC,6MAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,4KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,mLAAyB;AAE7C,MAAM,qBAAqB,sLAA4B;AAEvD,MAAM,oBAAoB,qLAA2B;AAErD,MAAM,mCAAqB,mNAAgB,CAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,sLAA4B;QAC3B,WAAW,IAAA,yHAAE,EACX,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,mBAAmB,WAAW,GAAG,sLAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,mNAAgB,CAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,sLAA4B;gBAC3B,KAAK;gBACL,WAAW,IAAA,yHAAE,EACX,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,sLAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,mNAAgB,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oLAA0B;QACzB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,oLAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,mNAAgB,CAG7C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,0LAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,uBAAuB,WAAW,GAChC,0LAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,IAAA,oJAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,qLAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,IAAA,oJAAc,EAAC;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,qLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/user-roles/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { userRoleSchema, UserRole } from './schema';\nimport { revalidatePath } from 'next/cache';\n\n\nconst usersFilePath = path.join(process.cwd(), 'src/app/admin/user-roles/users.json');\n\nasync function readUsers(): Promise<UserRole[]> {\n    try {\n        const data = await fs.readFile(usersFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return []; // Return empty array if file doesn't exist\n        }\n        throw error;\n    }\n}\n\nasync function writeUsers(data: UserRole[]) {\n    await fs.writeFile(usersFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getUsers() {\n    return await readUsers();\n}\n\nconst addUserFormSchema = userRoleSchema.omit({ id: true, lastLogin: true });\n\nexport async function addUser(userData: z.infer<typeof addUserFormSchema>, creator: { name: string }) {\n    const validation = addUserFormSchema.safeParse(userData);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allUsers = await readUsers();\n\n        const userExists = allUsers.some(u => u.email === userData.email);\n        if (userExists) {\n            return { success: false, error: `User with email \"${userData.email}\" already exists.` };\n        }\n\n        const newUser: UserRole = {\n            ...validation.data,\n            id: `USR-${Date.now()}`,\n            lastLogin: new Date().toISOString(),\n            createdAt: new Date().toISOString(),\n            createdBy: creator.name,\n        };\n\n        allUsers.push(newUser);\n        await writeUsers(allUsers);\n        \n        revalidatePath('/admin/user-roles');\n        return { success: true, data: newUser };\n\n    } catch (error) {\n        console.error('Failed to add user:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nconst updateUserFormSchema = userRoleSchema.omit({ lastLogin: true }).partial();\n\nexport async function updateUser(userData: z.infer<typeof updateUserFormSchema>, modifier: { name: string }) {\n     const validation = userRoleSchema.partial().safeParse(userData);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n    \n    const { id, ...dataToUpdate } = validation.data;\n\n    try {\n        const allUsers = await readUsers();\n\n        const userIndex = allUsers.findIndex(u => u.id === id);\n        if (userIndex === -1) {\n            return { success: false, error: 'User not found.' };\n        }\n        \n        // Check if email is being changed to one that already exists\n        if (dataToUpdate.email && dataToUpdate.email !== allUsers[userIndex].email) {\n            const emailExists = allUsers.some((u, index) => index !== userIndex && u.email === dataToUpdate.email);\n            if(emailExists){\n                return { success: false, error: `Another user with email \"${dataToUpdate.email}\" already exists.` };\n            }\n        }\n\n        // If password is not provided, keep the old one\n        if (!dataToUpdate.password) {\n            dataToUpdate.password = allUsers[userIndex].password;\n        }\n        \n        allUsers[userIndex] = { \n            ...allUsers[userIndex], \n            ...dataToUpdate,\n            modifiedAt: new Date().toISOString(),\n            modifiedBy: modifier.name,\n        };\n        \n        await writeUsers(allUsers);\n        \n        revalidatePath('/admin/user-roles');\n        return { success: true, data: allUsers[userIndex] };\n\n    } catch (error) {\n        console.error('Failed to update user:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteUser(userId: string) {\n    try {\n        const allUsers = await readUsers();\n        const updatedUsers = allUsers.filter(u => u.id !== userId);\n\n        if (allUsers.length === updatedUsers.length) {\n            return { success: false, error: 'User not found.' };\n        }\n        \n        await writeUsers(updatedUsers);\n        revalidatePath('/admin/user-roles');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to delete user:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAuHsB,aAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,0KAAoB;AAEnC,MAAM,gBAAgB,6KAAuB;AAE7C,MAAM,eAAe,4KAAsB;AAE3C,MAAM,cAAc,2KAAqB;AAEzC,MAAM,8BAAgB,mNAAgB,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,6KAAuB;QACtB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,6KAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,mNAAgB,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,6KAAuB;gBACtB,KAAK;gBACL,WAAW,IAAA,yHAAE,EACX,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,2KAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,iMAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,6KAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,2KAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,iLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,IAAA,yHAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,IAAA,uKAAG,EACvB;AAGF,MAAM,sBAAQ,mNAAgB,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,yKAAmB;QAClB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,yKAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/user-roles/schema.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\nexport const userRoleSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  email: z.string().email(),\n  password: z.string().min(6, 'Password must be at least 6 characters long.'),\n  role: z.enum(['User', 'Admin', 'Super Admin', 'Property Manager', 'Accountant', 'Developer']),\n  status: z.enum(['Active', 'Inactive']),\n  lastLogin: z.string(),\n  createdAt: z.string().optional(),\n  createdBy: z.string().optional(),\n  modifiedAt: z.string().optional(),\n  modifiedBy: z.string().optional(),\n});\n\nexport type UserRole = z.infer<typeof userRoleSchema>;\n"],"names":[],"mappings":";;;;AACA;;AAEO,MAAM,iBAAiB,uKAAC,CAAC,MAAM,CAAC;IACrC,IAAI,uKAAC,CAAC,MAAM;IACZ,MAAM,uKAAC,CAAC,MAAM;IACd,OAAO,uKAAC,CAAC,MAAM,GAAG,KAAK;IACvB,UAAU,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,MAAM,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAS;QAAe;QAAoB;QAAc;KAAY;IAC5F,QAAQ,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAU;KAAW;IACrC,WAAW,uKAAC,CAAC,MAAM;IACnB,WAAW,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,WAAW,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,YAAY,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC/B,YAAY,uKAAC,CAAC,MAAM,GAAG,QAAQ;AACjC","debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/user-roles/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { userRoleSchema, UserRole } from './schema';\nimport { revalidatePath } from 'next/cache';\n\n\nconst usersFilePath = path.join(process.cwd(), 'src/app/admin/user-roles/users.json');\n\nasync function readUsers(): Promise<UserRole[]> {\n    try {\n        const data = await fs.readFile(usersFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return []; // Return empty array if file doesn't exist\n        }\n        throw error;\n    }\n}\n\nasync function writeUsers(data: UserRole[]) {\n    await fs.writeFile(usersFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getUsers() {\n    return await readUsers();\n}\n\nconst addUserFormSchema = userRoleSchema.omit({ id: true, lastLogin: true });\n\nexport async function addUser(userData: z.infer<typeof addUserFormSchema>, creator: { name: string }) {\n    const validation = addUserFormSchema.safeParse(userData);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allUsers = await readUsers();\n\n        const userExists = allUsers.some(u => u.email === userData.email);\n        if (userExists) {\n            return { success: false, error: `User with email \"${userData.email}\" already exists.` };\n        }\n\n        const newUser: UserRole = {\n            ...validation.data,\n            id: `USR-${Date.now()}`,\n            lastLogin: new Date().toISOString(),\n            createdAt: new Date().toISOString(),\n            createdBy: creator.name,\n        };\n\n        allUsers.push(newUser);\n        await writeUsers(allUsers);\n        \n        revalidatePath('/admin/user-roles');\n        return { success: true, data: newUser };\n\n    } catch (error) {\n        console.error('Failed to add user:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nconst updateUserFormSchema = userRoleSchema.omit({ lastLogin: true }).partial();\n\nexport async function updateUser(userData: z.infer<typeof updateUserFormSchema>, modifier: { name: string }) {\n     const validation = userRoleSchema.partial().safeParse(userData);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n    \n    const { id, ...dataToUpdate } = validation.data;\n\n    try {\n        const allUsers = await readUsers();\n\n        const userIndex = allUsers.findIndex(u => u.id === id);\n        if (userIndex === -1) {\n            return { success: false, error: 'User not found.' };\n        }\n        \n        // Check if email is being changed to one that already exists\n        if (dataToUpdate.email && dataToUpdate.email !== allUsers[userIndex].email) {\n            const emailExists = allUsers.some((u, index) => index !== userIndex && u.email === dataToUpdate.email);\n            if(emailExists){\n                return { success: false, error: `Another user with email \"${dataToUpdate.email}\" already exists.` };\n            }\n        }\n\n        // If password is not provided, keep the old one\n        if (!dataToUpdate.password) {\n            dataToUpdate.password = allUsers[userIndex].password;\n        }\n        \n        allUsers[userIndex] = { \n            ...allUsers[userIndex], \n            ...dataToUpdate,\n            modifiedAt: new Date().toISOString(),\n            modifiedBy: modifier.name,\n        };\n        \n        await writeUsers(allUsers);\n        \n        revalidatePath('/admin/user-roles');\n        return { success: true, data: allUsers[userIndex] };\n\n    } catch (error) {\n        console.error('Failed to update user:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteUser(userId: string) {\n    try {\n        const allUsers = await readUsers();\n        const updatedUsers = allUsers.filter(u => u.id !== userId);\n\n        if (allUsers.length === updatedUsers.length) {\n            return { success: false, error: 'User not found.' };\n        }\n        \n        await writeUsers(updatedUsers);\n        revalidatePath('/admin/user-roles');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to delete user:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAuEsB,aAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 482, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/user-roles/edit-user-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { z } from 'zod';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n  } from '@/components/ui/select';\nimport { useToast } from '@/hooks/use-toast';\nimport { Loader2 } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\n\nimport { userRoleSchema, type UserRole } from './schema';\nimport { updateUser } from './actions';\n\n\ntype UserFormData = Omit<UserRole, 'lastLogin'>;\n\n// We need a slightly different schema for the form (no lastLogin)\n// Also making password optional for editing, so users don't have to re-enter it every time.\nconst userFormSchema = userRoleSchema.omit({ lastLogin: true }).extend({\n    password: z.string().min(6, 'Password must be at least 6 characters long.').or(z.literal(''))\n});\n\n\nexport function EditUserDialog({ user, isOpen, setIsOpen }: { user: UserRole, isOpen: boolean, setIsOpen: (open: boolean) => void }) {\n  const [isSaving, setIsSaving] = useState(false);\n  const { toast } = useToast();\n  const router = useRouter();\n  const [currentUser, setCurrentUser] = useState<{name: string} | null>(null);\n\n  useEffect(() => {\n    const storedProfile = sessionStorage.getItem('userProfile');\n    if (storedProfile) {\n        setCurrentUser(JSON.parse(storedProfile));\n    }\n  }, []);\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    formState: { errors, isDirty },\n  } = useForm<UserFormData>({\n    resolver: zodResolver(userFormSchema),\n  });\n\n  // Reset form when user data changes or dialog opens/closes\n  useEffect(() => {\n    if(isOpen) {\n        reset({\n            ...user,\n            password: '', // Don't pre-fill password for security\n        });\n    }\n  }, [user, reset, isOpen]);\n\n  const onSubmit = async (data: UserFormData) => {\n    if (!currentUser) {\n        toast({ variant: 'destructive', title: 'Error', description: 'Cannot determine current user. Please log in again.'});\n        return;\n    }\n    setIsSaving(true);\n    \n    // Don't send an empty password to the update function.\n    const dataToSubmit = { ...data };\n    if (!dataToSubmit.password) {\n      // @ts-ignore\n      delete dataToSubmit.password;\n    }\n\n    const result = await updateUser(dataToSubmit, currentUser);\n\n    if (result.success) {\n      toast({\n        title: 'User Updated',\n        description: `Successfully updated user \"${data.name}\".`,\n      });\n      setIsOpen(false);\n      router.refresh();\n    } else {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: result.error,\n      });\n    }\n    setIsSaving(false);\n  };\n  \n  const handleOpenChange = (open: boolean) => {\n    if (!open) {\n        reset(); // Reset form if dialog is closed without saving\n    }\n    setIsOpen(open);\n  }\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleOpenChange}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <DialogHeader>\n            <DialogTitle>Edit User</DialogTitle>\n            <DialogDescription>\n                Update the details for {user.name}. Click save when you're done.\n            </DialogDescription>\n            </DialogHeader>\n            <div className=\"grid gap-4 py-4\">\n                <Input type=\"hidden\" {...register('id')} />\n                <div className=\"grid grid-cols-4 items-center gap-4\">\n                    <Label htmlFor=\"name\" className=\"text-right\">\n                        Name\n                    </Label>\n                    <div className=\"col-span-3\">\n                        <Input id=\"name\" {...register('name')} />\n                        {errors.name && <p className=\"text-destructive text-xs mt-1\">{errors.name.message}</p>}\n                    </div>\n                </div>\n                <div className=\"grid grid-cols-4 items-center gap-4\">\n                    <Label htmlFor=\"email\" className=\"text-right\">\n                        Email\n                    </Label>\n                    <div className=\"col-span-3\">\n                        <Input id=\"email\" {...register('email')} />\n                         {errors.email && <p className=\"text-destructive text-xs mt-1\">{errors.email.message}</p>}\n                    </div>\n                </div>\n                 <div className=\"grid grid-cols-4 items-center gap-4\">\n                    <Label htmlFor=\"password\" className=\"text-right\">\n                        Password\n                    </Label>\n                    <div className=\"col-span-3\">\n                        <Input id=\"password\" type=\"password\" {...register('password')} placeholder=\"Leave blank to keep unchanged\" />\n                         {errors.password && <p className=\"text-destructive text-xs mt-1\">{errors.password.message}</p>}\n                    </div>\n                </div>\n                <div className=\"grid grid-cols-4 items-center gap-4\">\n                    <Label htmlFor=\"role\" className=\"text-right\">\n                        Role\n                    </Label>\n                     <div className=\"col-span-3\">\n                        <Controller\n                            name=\"role\"\n                            control={control}\n                            render={({ field }) => (\n                                <Select onValueChange={field.onChange} value={field.value}>\n                                    <SelectTrigger>\n                                        <SelectValue placeholder=\"Select a role\" />\n                                    </SelectTrigger>\n                                    <SelectContent>\n                                        <SelectItem value=\"User\">User</SelectItem>\n                                        <SelectItem value=\"Admin\">Admin</SelectItem>\n                                        <SelectItem value=\"Super Admin\">Super Admin</SelectItem>\n                                        <SelectItem value=\"Property Manager\">Property Manager</SelectItem>\n                                        <SelectItem value=\"Accountant\">Accountant</SelectItem>\n                                        <SelectItem value=\"Developer\">Developer</SelectItem>\n                                    </SelectContent>\n                                </Select>\n                            )}\n                        />\n                         {errors.role && <p className=\"text-destructive text-xs mt-1\">{errors.role.message}</p>}\n                    </div>\n                </div>\n                <div className=\"grid grid-cols-4 items-center gap-4\">\n                    <Label htmlFor=\"status\" className=\"text-right\">\n                        Status\n                    </Label>\n                    <div className=\"col-span-3\">\n                        <Controller\n                            name=\"status\"\n                            control={control}\n                            render={({ field }) => (\n                                <Select onValueChange={field.onChange} value={field.value}>\n                                    <SelectTrigger>\n                                        <SelectValue placeholder=\"Select a status\" />\n                                    </SelectTrigger>\n                                    <SelectContent>\n                                        <SelectItem value=\"Active\">Active</SelectItem>\n                                        <SelectItem value=\"Inactive\">Inactive</SelectItem>\n                                    </SelectContent>\n                                </Select>\n                            )}\n                        />\n                         {errors.status && <p className=\"text-destructive text-xs mt-1\">{errors.status.message}</p>}\n                    </div>\n                </div>\n            </div>\n            <DialogFooter>\n                <DialogClose asChild>\n                    <Button type=\"button\" variant=\"outline\">Cancel</Button>\n                </DialogClose>\n                <Button type=\"submit\" disabled={isSaving}>\n                    {isSaving && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                    Save Changes\n                </Button>\n            </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1049, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/user-roles/columns.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { ColumnDef } from '@tanstack/react-table';\nimport { ArrowUpDown, MoreHorizontal, Pencil, Trash2, ShieldQuestion, UserPlus, Code } from 'lucide-react';\nimport { format, formatDistanceToNow } from 'date-fns';\nimport { useRouter } from 'next/navigation';\n\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator,\n} from '@/components/ui/dropdown-menu';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { useToast } from '@/hooks/use-toast';\nimport { deleteUser } from './actions';\nimport { EditUserDialog } from './edit-user-dialog';\n\nimport { UserRole } from './schema';\n\nconst roleVariantMap: { [key in UserRole['role']]: \"default\" | \"secondary\" | \"destructive\" | \"outline\" } = {\n    'Super Admin': 'destructive',\n    'Admin': 'default',\n    'User': 'secondary',\n    'Property Manager': 'outline',\n    'Accountant': 'outline',\n    'Developer': 'default'\n};\n\nconst ActionsCell = ({ row }: { row: { original: UserRole } }) => {\n    const user = row.original;\n    const router = useRouter();\n    const { toast } = useToast();\n    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n    const [isDeleting, setIsDeleting] = useState(false);\n    const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n\n    const handleDelete = async () => {\n        setIsDeleting(true);\n        const result = await deleteUser(user.id);\n        if (result.success) {\n            toast({\n                title: 'User Deleted',\n                description: `User \"${user.name}\" has been deleted.`,\n            });\n            router.refresh();\n        } else {\n            toast({\n                variant: 'destructive',\n                title: 'Error',\n                description: result.error,\n            });\n        }\n        setIsDeleting(false);\n        setIsDeleteDialogOpen(false);\n    };\n\n    return (\n        <>\n            <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n                        <AlertDialogDescription>\n                            This action cannot be undone. This will permanently delete the user \"{user.name}\".\n                        </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel>Cancel</AlertDialogCancel>\n                        <AlertDialogAction onClick={handleDelete} disabled={isDeleting} className=\"bg-destructive hover:bg-destructive/90\">\n                            {isDeleting ? 'Deleting...' : 'Delete'}\n                        </AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n            \n            <EditUserDialog \n              user={user} \n              isOpen={isEditDialogOpen} \n              setIsOpen={setIsEditDialogOpen}\n            />\n\n            <div className=\"text-right\">\n                <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                            <span className=\"sr-only\">Open menu</span>\n                            <MoreHorizontal className=\"h-4 w-4\" />\n                        </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align=\"end\">\n                        <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                        <DropdownMenuItem onSelect={() => setIsEditDialogOpen(true)}>\n                            <Pencil className=\"mr-2 h-4 w-4\" />\n                            Edit User\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onSelect={() => setIsEditDialogOpen(true)}>\n                            <ShieldQuestion className=\"mr-2 h-4 w-4\" />\n                            Change Role\n                        </DropdownMenuItem>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem className=\"text-destructive\" onClick={() => setIsDeleteDialogOpen(true)}>\n                            <Trash2 className=\"mr-2 h-4 w-4\" />\n                            Delete User\n                        </DropdownMenuItem>\n                    </DropdownMenuContent>\n                </DropdownMenu>\n            </div>\n        </>\n    );\n};\n\nconst DateCell = ({ dateString, prefix }: { dateString?: string; prefix: string; }) => {\n    const [formattedDate, setFormattedDate] = useState('');\n\n    useEffect(() => {\n        if(!dateString) {\n            setFormattedDate('N/A');\n            return;\n        }\n        try {\n            setFormattedDate(`${prefix} ${formatDistanceToNow(new Date(dateString), { addSuffix: true })}`);\n        } catch (e) {\n            setFormattedDate('Invalid Date');\n        }\n    }, [dateString, prefix]);\n\n    return <span className=\"text-xs text-muted-foreground\">{formattedDate}</span>\n}\n\n\nexport const columns: ColumnDef<UserRole>[] = [\n  {\n    id: 'select',\n    header: ({ table }) => (\n      <Checkbox\n        checked={table.getIsAllPageRowsSelected()}\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: 'name',\n    header: ({ column }) => (\n      <Button\n        variant=\"ghost\"\n        onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n      >\n        Name\n        <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n      </Button>\n    ),\n    cell: ({ row }) => {\n        const user = row.original;\n        return (\n            <div className=\"flex flex-col\">\n                <span className=\"font-medium\">{user.name}</span>\n                <span className=\"text-xs text-muted-foreground\">{user.email}</span>\n            </div>\n        )\n    }\n  },\n  {\n    accessorKey: 'role',\n    header: 'Role',\n    cell: ({ row }) => {\n        const role = row.getValue('role') as UserRole['role'];\n        if (role === 'Developer') {\n            return <Badge variant=\"destructive\" className=\"bg-purple-600 hover:bg-purple-700\"><Code className=\"mr-1 h-3 w-3\"/>{role}</Badge>;\n        }\n        return <Badge variant={roleVariantMap[role]}>{role}</Badge>;\n    }\n  },\n  {\n    accessorKey: 'status',\n    header: 'Status',\n    cell: ({ row }) => {\n      const status = row.getValue('status') as string;\n      const variant = status === 'Active' ? 'default' : 'secondary';\n      return <Badge variant={variant} className={status === 'Active' ? 'bg-green-500/20 text-green-700 border-transparent' : ''}>{status}</Badge>;\n    },\n  },\n  {\n    accessorKey: 'lastLogin',\n    header: 'Last Login',\n    cell: ({ row }) => <DateCell dateString={row.original.lastLogin} prefix=\"Last login\" />\n  },\n  {\n    accessorKey: 'createdBy',\n    header: 'Audit Trail',\n    cell: ({ row }) => {\n      const user = row.original;\n      return (\n        <div className=\"flex flex-col items-start text-xs\">\n          <span className=\"flex items-center gap-1\">\n            <UserPlus className=\"h-3 w-3\" />\n            Created by <strong>{user.createdBy || 'System'}</strong> <DateCell dateString={user.createdAt} prefix=\"\" />\n          </span>\n           {user.modifiedBy && (\n            <span className=\"flex items-center gap-1 mt-1\">\n              <Pencil className=\"h-3 w-3\" />\n              Modified by <strong>{user.modifiedBy}</strong> <DateCell dateString={user.modifiedAt} prefix=\"\" />\n            </span>\n           )}\n        </div>\n      )\n    }\n  },\n  {\n    id: 'actions',\n    cell: ActionsCell,\n  },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1576, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,6DACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,mNAAgB,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1692, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/user-roles/data-table.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\n\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    onSortingChange: setSorting,\n    getSortedRowModel: getSortedRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  return (\n    <div>\n      <div className=\"flex items-center py-4\">\n        <Input\n          placeholder=\"Filter by name or email...\"\n          value={(table.getColumn('name')?.getFilterValue() as string) ?? ''}\n          onChange={(event) =>\n            table.getColumn('name')?.setFilterValue(event.target.value)\n          }\n          className=\"max-w-sm\"\n        />\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"outline\" className=\"ml-auto\">\n              Columns\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            {table\n              .getAllColumns()\n              .filter((column) => column.getCanHide())\n              .map((column) => {\n                return (\n                  <DropdownMenuCheckboxItem\n                    key={column.id}\n                    className=\"capitalize\"\n                    checked={column.getIsVisible()}\n                    onCheckedChange={(value) =>\n                      column.toggleVisibility(!!value)\n                    }\n                  >\n                    {column.id}\n                  </DropdownMenuCheckboxItem>\n                );\n              })}\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && 'selected'}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <div className=\"flex-1 text-sm text-muted-foreground\">\n          {table.getFilteredSelectedRowModel().rows.length} of{' '}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n        >\n          Previous\n        </Button>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n        >\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1925, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/user-roles/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { userRoleSchema, UserRole } from './schema';\nimport { revalidatePath } from 'next/cache';\n\n\nconst usersFilePath = path.join(process.cwd(), 'src/app/admin/user-roles/users.json');\n\nasync function readUsers(): Promise<UserRole[]> {\n    try {\n        const data = await fs.readFile(usersFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return []; // Return empty array if file doesn't exist\n        }\n        throw error;\n    }\n}\n\nasync function writeUsers(data: UserRole[]) {\n    await fs.writeFile(usersFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getUsers() {\n    return await readUsers();\n}\n\nconst addUserFormSchema = userRoleSchema.omit({ id: true, lastLogin: true });\n\nexport async function addUser(userData: z.infer<typeof addUserFormSchema>, creator: { name: string }) {\n    const validation = addUserFormSchema.safeParse(userData);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const allUsers = await readUsers();\n\n        const userExists = allUsers.some(u => u.email === userData.email);\n        if (userExists) {\n            return { success: false, error: `User with email \"${userData.email}\" already exists.` };\n        }\n\n        const newUser: UserRole = {\n            ...validation.data,\n            id: `USR-${Date.now()}`,\n            lastLogin: new Date().toISOString(),\n            createdAt: new Date().toISOString(),\n            createdBy: creator.name,\n        };\n\n        allUsers.push(newUser);\n        await writeUsers(allUsers);\n        \n        revalidatePath('/admin/user-roles');\n        return { success: true, data: newUser };\n\n    } catch (error) {\n        console.error('Failed to add user:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nconst updateUserFormSchema = userRoleSchema.omit({ lastLogin: true }).partial();\n\nexport async function updateUser(userData: z.infer<typeof updateUserFormSchema>, modifier: { name: string }) {\n     const validation = userRoleSchema.partial().safeParse(userData);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n    \n    const { id, ...dataToUpdate } = validation.data;\n\n    try {\n        const allUsers = await readUsers();\n\n        const userIndex = allUsers.findIndex(u => u.id === id);\n        if (userIndex === -1) {\n            return { success: false, error: 'User not found.' };\n        }\n        \n        // Check if email is being changed to one that already exists\n        if (dataToUpdate.email && dataToUpdate.email !== allUsers[userIndex].email) {\n            const emailExists = allUsers.some((u, index) => index !== userIndex && u.email === dataToUpdate.email);\n            if(emailExists){\n                return { success: false, error: `Another user with email \"${dataToUpdate.email}\" already exists.` };\n            }\n        }\n\n        // If password is not provided, keep the old one\n        if (!dataToUpdate.password) {\n            dataToUpdate.password = allUsers[userIndex].password;\n        }\n        \n        allUsers[userIndex] = { \n            ...allUsers[userIndex], \n            ...dataToUpdate,\n            modifiedAt: new Date().toISOString(),\n            modifiedBy: modifier.name,\n        };\n        \n        await writeUsers(allUsers);\n        \n        revalidatePath('/admin/user-roles');\n        return { success: true, data: allUsers[userIndex] };\n\n    } catch (error) {\n        console.error('Failed to update user:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function deleteUser(userId: string) {\n    try {\n        const allUsers = await readUsers();\n        const updatedUsers = allUsers.filter(u => u.id !== userId);\n\n        if (allUsers.length === updatedUsers.length) {\n            return { success: false, error: 'User not found.' };\n        }\n        \n        await writeUsers(updatedUsers);\n        revalidatePath('/admin/user-roles');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to delete user:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAkCsB,UAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 1937, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/user-roles/add-user-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n  } from '@/components/ui/select';\nimport { useToast } from '@/hooks/use-toast';\nimport { Plus, Loader2 } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useAuthorization } from '@/context/permission-context';\n\nimport { userRoleSchema, type UserRole } from './schema';\nimport { addUser } from './actions';\n\n\ntype UserFormData = Omit<UserRole, 'id' | 'lastLogin'>;\n\n// We need a slightly different schema for the form (no id, no lastLogin)\nconst userFormSchema = userRoleSchema.omit({ id: true, lastLogin: true });\n\n\nexport function AddUserDialog() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const { toast } = useToast();\n  const router = useRouter();\n  const [currentUser, setCurrentUser] = useState<{name: string} | null>(null);\n  const { can } = useAuthorization();\n\n\n  useEffect(() => {\n    const storedProfile = sessionStorage.getItem('userProfile');\n    if (storedProfile) {\n        setCurrentUser(JSON.parse(storedProfile));\n    }\n  }, []);\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    formState: { errors },\n  } = useForm<UserFormData>({\n    resolver: zodResolver(userFormSchema),\n    defaultValues: {\n        name: '',\n        email: '',\n        password: '',\n        role: 'User',\n        status: 'Active',\n    }\n  });\n\n  const onSubmit = async (data: UserFormData) => {\n    if (!currentUser) {\n        toast({ variant: 'destructive', title: 'Error', description: 'Cannot determine current user. Please log in again.'});\n        return;\n    }\n    setIsSaving(true);\n    const result = await addUser(data, currentUser);\n\n    if (result.success) {\n      toast({\n        title: 'User Added',\n        description: `Successfully added new user \"${data.name}\".`,\n      });\n      setIsOpen(false);\n      router.refresh();\n      reset();\n    } else {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: result.error,\n      });\n    }\n    setIsSaving(false);\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogTrigger asChild>\n        <Button disabled={!can('User Management', 'add_user')}>\n          <Plus className=\"mr-2 h-4 w-4\" /> Add New User\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <DialogHeader>\n            <DialogTitle>Add New User</DialogTitle>\n            <DialogDescription>\n                Fill in the details below to create a new user account.\n            </DialogDescription>\n            </DialogHeader>\n            <div className=\"grid gap-4 py-4\">\n                <div className=\"grid grid-cols-4 items-center gap-4\">\n                    <Label htmlFor=\"name\" className=\"text-right\">\n                        Name\n                    </Label>\n                    <div className=\"col-span-3\">\n                        <Input id=\"name\" {...register('name')} />\n                        {errors.name && <p className=\"text-destructive text-xs mt-1\">{errors.name.message}</p>}\n                    </div>\n                </div>\n                <div className=\"grid grid-cols-4 items-center gap-4\">\n                    <Label htmlFor=\"email\" className=\"text-right\">\n                        Email\n                    </Label>\n                    <div className=\"col-span-3\">\n                        <Input id=\"email\" {...register('email')} />\n                         {errors.email && <p className=\"text-destructive text-xs mt-1\">{errors.email.message}</p>}\n                    </div>\n                </div>\n                <div className=\"grid grid-cols-4 items-center gap-4\">\n                    <Label htmlFor=\"password\" className=\"text-right\">\n                        Password\n                    </Label>\n                    <div className=\"col-span-3\">\n                        <Input id=\"password\" type=\"password\" {...register('password')} />\n                         {errors.password && <p className=\"text-destructive text-xs mt-1\">{errors.password.message}</p>}\n                    </div>\n                </div>\n                <div className=\"grid grid-cols-4 items-center gap-4\">\n                    <Label htmlFor=\"role\" className=\"text-right\">\n                        Role\n                    </Label>\n                     <div className=\"col-span-3\">\n                        <Controller\n                            name=\"role\"\n                            control={control}\n                            render={({ field }) => (\n                                <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                    <SelectTrigger>\n                                        <SelectValue placeholder=\"Select a role\" />\n                                    </SelectTrigger>\n                                    <SelectContent>\n                                        <SelectItem value=\"User\">User</SelectItem>\n                                        <SelectItem value=\"Admin\">Admin</SelectItem>\n                                        <SelectItem value=\"Super Admin\">Super Admin</SelectItem>\n                                        <SelectItem value=\"Property Manager\">Property Manager</SelectItem>\n                                        <SelectItem value=\"Accountant\">Accountant</SelectItem>\n                                        <SelectItem value=\"Developer\">Developer</SelectItem>\n                                    </SelectContent>\n                                </Select>\n                            )}\n                        />\n                         {errors.role && <p className=\"text-destructive text-xs mt-1\">{errors.role.message}</p>}\n                    </div>\n                </div>\n                <div className=\"grid grid-cols-4 items-center gap-4\">\n                    <Label htmlFor=\"status\" className=\"text-right\">\n                        Status\n                    </Label>\n                    <div className=\"col-span-3\">\n                        <Controller\n                            name=\"status\"\n                            control={control}\n                            render={({ field }) => (\n                                <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                    <SelectTrigger>\n                                        <SelectValue placeholder=\"Select a status\" />\n                                    </SelectTrigger>\n                                    <SelectContent>\n                                        <SelectItem value=\"Active\">Active</SelectItem>\n                                        <SelectItem value=\"Inactive\">Inactive</SelectItem>\n                                    </SelectContent>\n                                </Select>\n                            )}\n                        />\n                         {errors.status && <p className=\"text-destructive text-xs mt-1\">{errors.status.message}</p>}\n                    </div>\n                </div>\n            </div>\n            <DialogFooter>\n                <DialogClose asChild>\n                    <Button type=\"button\" variant=\"outline\" onClick={() => reset()}>Cancel</Button>\n                </DialogClose>\n                <Button type=\"submit\" disabled={isSaving}>\n                    {isSaving && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                    Save User\n                </Button>\n            </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}