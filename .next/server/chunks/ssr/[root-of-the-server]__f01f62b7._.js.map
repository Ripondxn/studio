{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/license.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { differenceInDays, addDays, format, parseISO } from 'date-fns';\n\nconst licenseFilePath = path.join(process.cwd(), 'license.json');\nconst TRIAL_PERIOD_DAYS = 30;\n\ntype LicenseInfo = {\n    trialStartDate: string;\n};\n\nexport type LicenseStatus = {\n    isActive: boolean;\n    isTrial: boolean;\n    daysRemaining: number;\n    expiryDate: string;\n};\n\nasync function readLicenseFile(): Promise<LicenseInfo | null> {\n    try {\n        await fs.access(licenseFilePath);\n        const data = await fs.readFile(licenseFilePath, 'utf-8');\n        // Basic validation in case the file is empty or corrupted\n        if (!data) return null;\n        return JSON.parse(data);\n    } catch (error) {\n        return null; // File doesn't exist or is unreadable\n    }\n}\n\nasync function createLicenseFile(): Promise<LicenseInfo> {\n    const trialStartDate = new Date().toISOString();\n    const newLicense: LicenseInfo = { trialStartDate };\n    await fs.writeFile(licenseFilePath, JSON.stringify(newLicense, null, 2), 'utf-8');\n    return newLicense;\n}\n\nexport async function checkLicenseStatus(): Promise<LicenseStatus> {\n    let license = await readLicenseFile();\n\n    if (!license) {\n        license = await createLicenseFile();\n    }\n    \n    const startDate = parseISO(license.trialStartDate);\n    const now = new Date();\n    const expiryDate = addDays(startDate, TRIAL_PERIOD_DAYS);\n    const daysRemaining = differenceInDays(expiryDate, now);\n\n    const isActive = daysRemaining >= 0;\n\n    return {\n        isActive,\n        isTrial: true, // For now, we only have a trial license\n        daysRemaining: Math.max(0, daysRemaining),\n        expiryDate: format(expiryDate, 'PPP'),\n    };\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;AAEA,MAAM,kBAAkB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AACjD,MAAM,oBAAoB;AAa1B,eAAe;IACX,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,iBAAiB;QAChD,0DAA0D;QAC1D,IAAI,CAAC,MAAM,OAAO;QAClB,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAO,OAAO;QACZ,OAAO,MAAM,sCAAsC;IACvD;AACJ;AAEA,eAAe;IACX,MAAM,iBAAiB,IAAI,OAAO,WAAW;IAC7C,MAAM,aAA0B;QAAE;IAAe;IACjD,MAAM,yGAAE,CAAC,SAAS,CAAC,iBAAiB,KAAK,SAAS,CAAC,YAAY,MAAM,IAAI;IACzE,OAAO;AACX;AAEO,eAAe;IAClB,IAAI,UAAU,MAAM;IAEpB,IAAI,CAAC,SAAS;QACV,UAAU,MAAM;IACpB;IAEA,MAAM,YAAY,IAAA,oJAAQ,EAAC,QAAQ,cAAc;IACjD,MAAM,MAAM,IAAI;IAChB,MAAM,aAAa,IAAA,kJAAO,EAAC,WAAW;IACtC,MAAM,gBAAgB,IAAA,oKAAgB,EAAC,YAAY;IAEnD,MAAM,WAAW,iBAAiB;IAElC,OAAO;QACH;QACA,SAAS;QACT,eAAe,KAAK,GAAG,CAAC,GAAG;QAC3B,YAAY,IAAA,gKAAM,EAAC,YAAY;IACnC;AACJ;;;IApBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/currency/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\n\nexport type CurrencySettings = {\n    currencyCode: string;\n};\n\nconst settingsFilePath = path.join(process.cwd(), 'src/app/admin/currency/settings.json');\n\nconst defaultSettings: CurrencySettings = {\n    currencyCode: 'AED'\n};\n\nexport async function getCurrencySettings(): Promise<CurrencySettings> {\n    try {\n        await fs.access(settingsFilePath);\n        const data = await fs.readFile(settingsFilePath, 'utf-8');\n        return { ...defaultSettings, ...JSON.parse(data) };\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return defaultSettings;\n        }\n        throw error;\n    }\n}\n\nconst currencySettingsSchema = z.object({\n    currencyCode: z.string().length(3, \"Currency code must be 3 characters long.\").toUpperCase(),\n});\n\nexport async function saveCurrencySettings(data: CurrencySettings) {\n    const validation = currencySettingsSchema.safeParse(data);\n\n    if (!validation.success) {\n        return { success: false, error: validation.error.errors[0].message };\n    }\n\n    try {\n        await fs.writeFile(settingsFilePath, JSON.stringify(validation.data, null, 2), 'utf-8');\n        revalidatePath('/', 'layout'); // Revalidate all pages\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save currency settings:', error);\n        return { success: false, error: 'Failed to save settings.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;;;;;;;AAMA,MAAM,mBAAmB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAElD,MAAM,kBAAoC;IACtC,cAAc;AAClB;AAEO,eAAe;IAClB,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,kBAAkB;QACjD,OAAO;YAAE,GAAG,eAAe;YAAE,GAAG,KAAK,KAAK,CAAC,KAAK;QAAC;IACrD,EAAE,OAAO,OAAO;QACZ,IAAI,AAAC,MAAgC,IAAI,KAAK,UAAU;YACpD,OAAO;QACX;QACA,MAAM;IACV;AACJ;AAEA,MAAM,yBAAyB,uKAAC,CAAC,MAAM,CAAC;IACpC,cAAc,uKAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,4CAA4C,WAAW;AAC9F;AAEO,eAAe,qBAAqB,IAAsB;IAC7D,MAAM,aAAa,uBAAuB,SAAS,CAAC;IAEpD,IAAI,CAAC,WAAW,OAAO,EAAE;QACrB,OAAO;YAAE,SAAS;YAAO,OAAO,WAAW,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO;QAAC;IACvE;IAEA,IAAI;QACA,MAAM,yGAAE,CAAC,SAAS,CAAC,kBAAkB,KAAK,SAAS,CAAC,WAAW,IAAI,EAAE,MAAM,IAAI;QAC/E,IAAA,+IAAc,EAAC,KAAK,WAAW,uBAAuB;QACtD,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO;YAAE,SAAS;YAAO,OAAO;QAA2B;IAC/D;AACJ;;;IAhCsB;IAiBA;;AAjBA,+OAAA;AAiBA,+OAAA","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/access-control/permissions.ts"],"sourcesContent":["\nexport type PermissionAction = {\n  action: string;\n  description: string;\n  allowedRoles: string[];\n};\n\nexport type FeaturePermission = {\n  feature: string;\n  description: string;\n  actions: PermissionAction[];\n};\n\nexport const featurePermissions: FeaturePermission[] = [\n  {\n    feature: 'Properties',\n    description: 'Manage property listings, details, and associated units/rooms.',\n    actions: [\n      { action: 'view', description: 'View property list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit property information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a property', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Units',\n    description: 'Manage individual units within a property.',\n    actions: [\n      { action: 'view', description: 'View unit list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit unit information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a unit', allowedRoles: ['Super Admin'] },\n    ],\n  },\n   {\n    feature: 'Rent-A-Car',\n    description: 'Manage vehicle rental agreements.',\n    actions: [\n      { action: 'view', description: 'View rental agreements', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete rental agreements', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n   {\n    feature: 'Car Sales',\n    description: 'Manage vehicle buying and selling operations.',\n    actions: [\n      { action: 'view', description: 'View vehicle inventory and sales', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add, edit, and delete vehicle records', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Lease Contracts',\n    description: 'Manage lease agreements with landlords.',\n    actions: [\n      { action: 'view', description: 'View lease agreements', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'manage', description: 'Create, edit, and delete lease agreements', allowedRoles: ['Super Admin', 'Admin'] },\n    ]\n  },\n  {\n    feature: 'Project Management',\n    description: 'Manage all aspects of projects, including billing, sub-contractors, and resource allocation.',\n    actions: [\n      { action: 'view', description: 'View project list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'manage', description: 'Create, edit, and delete projects', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'manage_billing', description: 'Manage project progress billing and retention', allowedRoles: ['Super Admin', 'Accountant'] },\n    ],\n  },\n   {\n    feature: 'Vaults & Stores',\n    description: 'Manage inventory, stock levels, and store locations.',\n    actions: [\n      { action: 'view', description: 'View stores and stock levels', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete stores and manage stock transactions', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n    {\n    feature: 'Products & Services',\n    description: 'Manage the catalog of products and services offered.',\n    actions: [\n      { action: 'view', description: 'View products and services', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete products and services', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'view_pricing', description: 'View cost and sale prices', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n    ],\n  },\n  {\n    feature: 'Asset Management',\n    description: 'Manage company assets, depreciation, and assignments.',\n    actions: [\n      { action: 'view', description: 'View asset list', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage', description: 'Add, edit, and assign assets', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete', description: 'Delete assets from the register', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Maintenance',\n    description: 'Manage maintenance tickets and service contracts.',\n    actions: [\n      { action: 'view_tickets', description: 'View maintenance tickets', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage_tickets', description: 'Create, edit, and update tickets', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'view_contracts', description: 'View service contracts', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage_contracts', description: 'Manage service contracts', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Workflow',\n    description: 'Manage document approval workflows.',\n    actions: [\n      { action: 'view', description: 'View workflow queue', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'manage', description: 'Approve or reject transactions', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Data Processing',\n    description: 'Extract data from documents using AI.',\n    actions: [\n      { action: 'access', description: 'Access document processing and data extraction features', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n    ],\n  },\n   {\n    feature: 'Utilities',\n    description: 'Manage utility accounts and bill payments.',\n    actions: [\n      { action: 'view', description: 'View utility accounts', allowedRoles: ['Super Admin', 'Admin', 'Accountant', 'User'] },\n      { action: 'manage', description: 'Add, edit, and delete utility accounts', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Landlords',\n    description: 'Manage landlord profiles and their associated contracts.',\n    actions: [\n      { action: 'view', description: 'View landlord list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant'] },\n      { action: 'edit', description: 'Edit landlord information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a landlord', allowedRoles: ['Super Admin'] },\n    ],\n  },\n    {\n    feature: 'Vendors',\n    description: 'Manage supplier and vendor profiles.',\n    actions: [\n      { action: 'view', description: 'View vendor list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit vendor information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a vendor', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Tenants',\n    description: 'Manage tenant profiles and their tenancy contracts.',\n    actions: [\n      { action: 'view', description: 'View tenant list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit tenant information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a tenant', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Customers',\n    description: 'Manage general customers for non-rental services.',\n    actions: [\n      { action: 'view', description: 'View customer list and details', allowedRoles: ['Super Admin', 'Admin', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit customer information', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete', description: 'Delete a customer', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Finance',\n    description: 'Access to financial modules like banking, payments, and chart of accounts.',\n    actions: [\n      { action: 'view_banking', description: 'View Banking and Petty Cash', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage_banking', description: 'Add/Edit/Delete bank accounts', allowedRoles: ['Super Admin'] },\n      { action: 'view_payments', description: 'View payment and receipt history', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'record_payment', description: 'Record new payments or receipts', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'delete_payment', description: 'Delete financial transactions', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'User Management',\n    description: 'Control over user accounts and their roles.',\n    actions: [\n      { action: 'view', description: 'View user list', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'add_user', description: 'Add new users', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'edit_user', description: 'Edit user details and roles', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete_user', description: 'Delete a user', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Settings',\n    description: 'Access to administrative settings.',\n    actions: [\n        { action: 'access_control', description: 'Manage user roles and permissions', allowedRoles: ['Super Admin'] },\n        { action: 'communication', description: 'Manage communication (Email/SMS) settings', allowedRoles: ['Super Admin', 'Admin'] },\n        { action: 'backup', description: 'Manage data backup and restore', allowedRoles: ['Super Admin'] },\n        { action: 'external_storage', description: 'Configure external storage (e.g., Google Drive)', allowedRoles: ['Developer'] },\n        { action: 'notifications', description: 'Send system-wide notifications', allowedRoles: ['Super Admin', 'Admin'] },\n        { action: 'contract_continuity', description: 'Review and fix contract data issues', allowedRoles: ['Super Admin'] },\n    ]\n  }\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/access-control/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport { type FeaturePermission, featurePermissions } from './permissions';\nimport { type UserRole } from '../user-roles/schema';\nimport { type ModuleSettings } from './schema';\n\nconst permissionsFilePath = path.join(process.cwd(), 'src/app/admin/access-control/permissions.json');\nconst usersFilePath = path.join(process.cwd(), 'src/app/admin/user-roles/users.json');\nconst moduleSettingsFilePath = path.join(process.cwd(), 'src/app/admin/access-control/module-settings.json');\nconst userOverridesFilePath = path.join(process.cwd(), 'src/app/admin/access-control/user-overrides.json');\n\nasync function readData(filePath: string) {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            // Return a default structure that can be safely merged\n            if (filePath.endsWith('permissions.json')) return [];\n            if (filePath.endsWith('users.json')) return [];\n            if (filePath.endsWith('module-settings.json')) return { modules: [] }; \n            if (filePath.endsWith('user-overrides.json')) return [];\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function getPermissions(): Promise<FeaturePermission[]> {\n     const savedPermissions = await readData(permissionsFilePath);\n     // Merge saved permissions with the default structure to ensure all features are listed\n    const allPermissions = featurePermissions.map(feature => {\n        const savedFeature = savedPermissions.find((p: any) => p.feature === feature.feature);\n        const actions = feature.actions.map(action => {\n        const savedAction = savedFeature?.actions.find((a: any) => a.action === action.action);\n        return {\n            ...action,\n            allowedRoles: savedAction ? savedAction.allowedRoles : action.allowedRoles,\n        };\n        });\n        return {\n        ...feature,\n        actions,\n        };\n    });\n    return allPermissions;\n}\n\nexport async function savePermissions(permissions: FeaturePermission[]) {\n    try {\n        await fs.writeFile(permissionsFilePath, JSON.stringify(permissions, null, 2), 'utf-8');\n        revalidatePath('/admin/access-control');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save permissions:', error);\n        return { success: false, error: 'Failed to save permissions.' };\n    }\n}\n\nexport async function updatePermission(featureName: string, actionName: string, role: string, isChecked: boolean) {\n    const currentPermissions = await getPermissions();\n    const feature = currentPermissions.find(f => f.feature === featureName);\n    if (feature) {\n        const action = feature.actions.find(a => a.action === actionName);\n        if (action) {\n            if (isChecked) {\n                if (!action.allowedRoles.includes(role)) {\n                    action.allowedRoles.push(role);\n                }\n            } else {\n                action.allowedRoles = action.allowedRoles.filter(r => r !== role);\n            }\n        }\n    }\n    return await savePermissions(currentPermissions);\n}\n\n\nexport async function getRoles(): Promise<string[]> {\n    try {\n        const users: UserRole[] = await readData(usersFilePath);\n        const allRoles = users.map(u => u.role);\n        // Add default roles that might not be in use yet\n        const defaultRoles = ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User', 'Developer'];\n        const uniqueRoles = Array.from(new Set([...allRoles, ...defaultRoles]));\n        return uniqueRoles;\n    } catch (error) {\n        console.error(\"Failed to read user roles\", error);\n        return ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User', 'Developer'];\n    }\n}\n\nexport type UserOverride = {\n    email: string;\n    allowedModules: string[];\n}\n\nexport async function getUserOverrides(): Promise<UserOverride[]> {\n    return (await readData(userOverridesFilePath)) as UserOverride[];\n}\n\nexport async function saveUserOverrides(overrides: UserOverride[]) {\n     try {\n        await fs.writeFile(userOverridesFilePath, JSON.stringify(overrides, null, 2), 'utf-8');\n        revalidatePath('/', 'layout');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save user overrides:', error);\n        return { success: false, error: 'Failed to save user overrides.' };\n    }\n}\n\n\nexport async function getCombinedAccessControlData() {\n    try {\n        const [permissions, moduleSettings, userOverrides] = await Promise.all([\n            getPermissions(),\n            readData(moduleSettingsFilePath) as Promise<ModuleSettings>,\n            getUserOverrides()\n        ]);\n        return { success: true, permissions, moduleSettings, userOverrides };\n    } catch(error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 954, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/lease/contract/schema.ts"],"sourcesContent":["\n\nimport { z } from 'zod';\n\nexport const paymentInstallmentSchema = z.object({\n  installment: z.number(),\n  dueDate: z.string(),\n  amount: z.number(),\n  status: z.enum(['paid', 'unpaid']),\n  chequeNo: z.string().optional(),\n  bankName: z.string().optional(),\n});\n\nexport const leaseContractSchema = z.object({\n  id: z.string(),\n  contractNo: z.string().min(1, \"Contract number is required.\"),\n  contractDate: z.string().min(1, \"Contract date is required.\"),\n  property: z.string().min(1, \"Property is required.\"),\n  landlordCode: z.string().min(1, \"Landlord is required.\"),\n  startDate: z.string().min(1, \"Start date is required.\"),\n  endDate: z.string().min(1, \"End date is required.\"),\n  totalRent: z.number().min(0, \"Total rent must be a positive number.\"),\n  vatPercentage: z.number().optional(),\n  vatAmount: z.number().optional(),\n  totalRentWithVat: z.number().optional(),\n  paymentMode: z.enum(['cash', 'cheque', 'bank-transfer']),\n  status: z.enum(['New', 'Renew', 'Cancel']).optional(),\n  terminationDate: z.string().optional(),\n  paymentFrequency: z.enum(['Monthly', 'Quarterly', 'Half-Yearly', 'Yearly', 'Custom']).optional(),\n  numberOfPayments: z.number().optional(),\n  paymentSchedule: z.array(paymentInstallmentSchema),\n  terms: z.string().optional(),\n  gracePeriod: z.number().optional(),\n});\n\nexport type PaymentInstallment = z.infer<typeof paymentInstallmentSchema>;\nexport type LeaseContract = z.infer<typeof leaseContractSchema>;\n"],"names":[],"mappings":";;;;;;AAEA;;AAEO,MAAM,2BAA2B,uKAAC,CAAC,MAAM,CAAC;IAC/C,aAAa,uKAAC,CAAC,MAAM;IACrB,SAAS,uKAAC,CAAC,MAAM;IACjB,QAAQ,uKAAC,CAAC,MAAM;IAChB,QAAQ,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAS;IACjC,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;AAC/B;AAEO,MAAM,sBAAsB,uKAAC,CAAC,MAAM,CAAC;IAC1C,IAAI,uKAAC,CAAC,MAAM;IACZ,YAAY,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC9B,cAAc,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,UAAU,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,cAAc,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,WAAW,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,SAAS,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC3B,WAAW,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,eAAe,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAClC,WAAW,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,kBAAkB,uKAAC,CAAC,MAAM,GAAG,QAAQ;IACrC,aAAa,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAU;KAAgB;IACvD,QAAQ,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAO;QAAS;KAAS,EAAE,QAAQ;IACnD,iBAAiB,uKAAC,CAAC,MAAM,GAAG,QAAQ;IACpC,kBAAkB,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAW;QAAa;QAAe;QAAU;KAAS,EAAE,QAAQ;IAC9F,kBAAkB,uKAAC,CAAC,MAAM,GAAG,QAAQ;IACrC,iBAAiB,uKAAC,CAAC,KAAK,CAAC;IACzB,OAAO,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC1B,aAAa,uKAAC,CAAC,MAAM,GAAG,QAAQ;AAClC","debugId":null}},
    {"offset": {"line": 1012, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/lease/contract/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { leaseContractSchema, type LeaseContract } from './schema';\nimport { type Contract as TenancyContract } from '@/app/tenancy/contract/schema';\n\nconst contractsFilePath = path.join(process.cwd(), 'src/app/lease/contract/contracts-data.json');\nconst tenancyContractsFilePath = path.join(process.cwd(), 'src/app/tenancy/contract/contracts-data.json');\nconst propertiesFilePath = path.join(process.cwd(), 'src/app/property/properties/list/properties-data.json');\nconst landlordsFilePath = path.join(process.cwd(), 'src/app/landlord/landlords-data.json');\n\n\nasync function readContracts(): Promise<LeaseContract[]> {\n    try {\n        await fs.access(contractsFilePath);\n        const data = await fs.readFile(contractsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            // If the file doesn't exist, create it with an empty array\n            await writeContracts([]);\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeContracts(data: LeaseContract[]) {\n    await fs.writeFile(contractsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\n\nexport async function getAllLeaseContracts() {\n    return await readContracts();\n}\n\nexport async function saveLeaseContractData(data: Omit<LeaseContract, 'id'> & { id?: string, isAutoContractNo?: boolean }, isNewRecord: boolean) {\n    const { isAutoContractNo, ...contractData } = data;\n    const validation = leaseContractSchema.omit({id: true}).safeParse(contractData);\n\n    if (!validation.success) {\n        const errors = validation.error.errors.map(e => e.message).join(', ');\n        return { success: false, error: errors };\n    }\n\n    try {\n        const allContracts = await readContracts();\n        let savedContract: LeaseContract;\n        const validatedData = validation.data;\n        \n        if (isNewRecord) {\n             let newContractNo = validatedData.contractNo;\n             if (isAutoContractNo || !newContractNo) {\n                newContractNo = await getNextContractNumber();\n             } else {\n                 const contractExists = allContracts.some(c => c.contractNo === newContractNo);\n                 if (contractExists) {\n                    return { success: false, error: `A contract with number \"${newContractNo}\" already exists.`};\n                 }\n             }\n\n             const newContract: LeaseContract = {\n                ...validatedData,\n                contractNo: newContractNo,\n                id: `LCON-${Date.now()}`,\n            };\n            allContracts.push(newContract);\n            savedContract = newContract;\n        } else {\n            const index = allContracts.findIndex(c => c.id === data.id);\n            if (index !== -1) {\n                allContracts[index] = validatedData as LeaseContract;\n                savedContract = validatedData as LeaseContract;\n            } else {\n                 return { success: false, error: `Lease Contract with ID \"${data.id}\" not found.` };\n            }\n        }\n        \n        await writeContracts(allContracts);\n\n        revalidatePath('/lease/contracts');\n        revalidatePath('/finance/pdc-cheque');\n        revalidatePath(`/lease/contract?id=${savedContract.id}`);\n        revalidatePath('/'); // Revalidate dashboard\n        return { success: true, data: savedContract };\n\n    } catch (error) {\n        console.error('Failed to save lease contract:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nasync function getNextContractNumber() {\n    const allContracts = await readContracts();\n    let maxNum = 0;\n    allContracts.forEach(c => {\n        const match = c.contractNo.match(/^LA-(\\d+)$/);\n        if (match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `LA-${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\nexport async function findLeaseContract(query: { contractId?: string; contractNo?: string }): Promise<{ success: boolean; data?: LeaseContract; error?: string }> {\n    try {\n        const allContracts = await readContracts();\n        let foundContract: LeaseContract | undefined;\n\n        if (query.contractId === 'new') {\n            const newContractNo = await getNextContractNumber();\n            return { success: true, data: { ...initialContractState, contractNo: newContractNo } };\n        }\n        \n        if (query.contractId) {\n            foundContract = allContracts.find(c => c.id === query.contractId);\n        } else if (query.contractNo) {\n            foundContract = allContracts.find(c => c.contractNo === query.contractNo);\n        }\n\n        if (foundContract) {\n            return { success: true, data: foundContract };\n        } else {\n            return { success: false, error: 'Lease Contract not found.' };\n        }\n    } catch (error) {\n        console.error('Failed to find lease contract:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n\nconst initialContractState: LeaseContract = {\n    id: '',\n    contractNo: '',\n    contractDate: '',\n    property: '',\n    landlordCode: '',\n    startDate: '',\n    endDate: '',\n    totalRent: 0,\n    vatPercentage: 0,\n    vatAmount: 0,\n    totalRentWithVat: 0,\n    paymentMode: 'cash',\n    status: 'New',\n    terminationDate: '',\n    paymentFrequency: 'Monthly',\n    numberOfPayments: 1,\n    gracePeriod: 0,\n    paymentSchedule: [],\n    terms: '',\n};\n\n\nexport async function deleteLeaseContract(contractId: string) {\n    try {\n        const allContracts = await readContracts();\n        const updatedContracts = allContracts.filter(c => c.id !== contractId);\n\n        if (allContracts.length === updatedContracts.length) {\n            return { success: false, error: 'Lease Contract not found.' };\n        }\n        \n        await writeContracts(updatedContracts);\n        revalidatePath('/lease/contracts');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to delete lease contract:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nasync function readLandlords() {\n    try {\n        const data = await fs.readFile(path.join(process.cwd(), 'src/app/landlord/landlords-data.json'), 'utf-8');\n        return JSON.parse(data);\n    } catch(e) {\n        return [];\n    }\n}\n\nasync function readProperties() {\n    try {\n        const data = await fs.readFile(propertiesFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch(e) {\n        return [];\n    }\n}\n\nasync function readTenancyContracts(): Promise<TenancyContract[]> {\n    try {\n        const data = await fs.readFile(tenancyContractsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch(e) {\n        return [];\n    }\n}\n\nexport async function getLookups() {\n    const landlords = await readLandlords();\n    const properties = await readProperties();\n    const tenancyContracts = await readTenancyContracts();\n\n    const propertiesMap = new Map(properties.map((p: any) => [(p.propertyData || p).name, (p.propertyData || p).landlordCode]));\n\n    return {\n        landlords: landlords.map((l:any) => ({ value: l.landlordData.code, label: l.landlordData.name })),\n        properties: properties.map((p:any) => ({ value: (p.propertyData || p).name, label: (p.propertyData || p).name })),\n        tenancyContracts: tenancyContracts.map((c: any) => ({ \n            value: c.contractNo, \n            label: `${c.contractNo} (${c.tenantName})`,\n            landlordCode: c.property ? propertiesMap.get(c.property) : undefined,\n            property: c.property\n        })),\n    }\n}\n\nexport async function getContractDetails(contractNo: string) {\n    const allTenancyContracts = await readTenancyContracts();\n    const contract = allTenancyContracts.find(c => c.contractNo === contractNo);\n\n    if (!contract) {\n        return { success: false, error: 'Tenancy contract not found' };\n    }\n    \n    const allProperties = await readProperties();\n    const property = allProperties.find(p => (p.propertyData || p).name === contract.property);\n\n    if (!property) {\n        return { success: true, data: { tenantName: contract.tenantName, property: contract.property, totalRent: contract.totalRent } };\n    }\n\n    const landlordCode = (property.propertyData || property).landlordCode;\n\n    return { success: true, data: {\n        tenantName: contract.tenantName,\n        property: contract.property,\n        landlordCode: landlordCode,\n        totalRent: contract.totalRent\n    }}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1322, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/lease/contracts/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCompanyProfile as '00b6be478acfdf6b7794a7b34be547b3606ebfd51c'} from 'ACTIONS_MODULE0'\nexport {saveCompanyProfile as '40c9350172a0cc49767c134a7e5ed44affe0683337'} from 'ACTIONS_MODULE0'\nexport {checkLicenseStatus as '008a29e84bd260b304f797613c7c39c01029f96950'} from 'ACTIONS_MODULE1'\nexport {getCurrencySettings as '00bf02fbdbf2069a58be66f4c215b7083c555f2e0f'} from 'ACTIONS_MODULE2'\nexport {getCombinedAccessControlData as '00484ec9aa59cb806ed9f49233b1daa442fefc4db8'} from 'ACTIONS_MODULE3'\nexport {getAllLeaseContracts as '002dd67f94e796d46c50bf0b59e78aeb120126f43d'} from 'ACTIONS_MODULE4'\nexport {getLookups as '00c4c28efb0e411f39f5cbe6d87afd81f87bb6591b'} from 'ACTIONS_MODULE4'\nexport {findLeaseContract as '403d0f3789a7f5172cb46b15f3e2b46b38f32a7294'} from 'ACTIONS_MODULE4'\nexport {getContractDetails as '4047ba22d411813196a8e466b1e3e3bd261496f1ed'} from 'ACTIONS_MODULE4'\nexport {deleteLeaseContract as '406b67638be157b763aa8ba9259de662295f0f0535'} from 'ACTIONS_MODULE4'\nexport {saveLeaseContractData as '60a6bbca499d4a778e146d416240bb2821f30cd88b'} from 'ACTIONS_MODULE4'\n"],"names":[],"mappings":";AAAA;AAEA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 1385, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/lease/contracts/columns.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const columns = registerClientReference(\n    function() { throw new Error(\"Attempted to call columns() from the server but columns is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/lease/contracts/columns.tsx <module evaluation>\",\n    \"columns\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,UAAU,IAAA,wQAAuB,EAC1C;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,qEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1399, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/lease/contracts/columns.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const columns = registerClientReference(\n    function() { throw new Error(\"Attempted to call columns() from the server but columns is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/lease/contracts/columns.tsx\",\n    \"columns\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,UAAU,IAAA,wQAAuB,EAC1C;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,iDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1421, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/lease/contracts/data-table.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DataTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTable() from the server but DataTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/lease/contracts/data-table.tsx <module evaluation>\",\n    \"DataTable\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,wEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1435, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/lease/contracts/data-table.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DataTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTable() from the server but DataTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/lease/contracts/data-table.tsx\",\n    \"DataTable\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1457, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 1472, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground\",\n        destructive:\n          \"bg-destructive text-destructive-foreground\",\n        outline:\n          \"border border-input bg-background\",\n        secondary:\n          \"bg-secondary text-secondary-foreground\",\n        ghost: \"\",\n        link: \"text-primary underline-offset-4\",\n        \"sidebar-accent\": \"bg-sidebar-accent text-sidebar-accent-foreground\"\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;YACN,kBAAkB;QACpB;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,mNAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1533, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/lease/contracts/page.tsx"],"sourcesContent":["\nimport Link from 'next/link';\nimport { columns } from './columns';\nimport { DataTable } from './data-table';\nimport { Button } from '@/components/ui/button';\nimport { Plus } from 'lucide-react';\nimport { getAllLeaseContracts } from '../contract/actions';\n\nexport default async function LeaseContractsPage() {\n  const contracts = await getAllLeaseContracts();\n\n  return (\n    <div className=\"container mx-auto py-10\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-3xl font-bold font-headline\">Lease Contracts</h1>\n        <Button asChild>\n          <Link href=\"/lease/contract\">\n            <Plus className=\"mr-2 h-4 w-4\" /> Add New Lease Contract\n          </Link>\n        </Button>\n      </div>\n      <DataTable columns={columns} data={contracts} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEe,eAAe;IAC5B,MAAM,YAAY,MAAM,IAAA,kKAAoB;IAE5C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,8OAAC,4IAAM;wBAAC,OAAO;kCACb,cAAA,8OAAC,uKAAI;4BAAC,MAAK;;8CACT,8OAAC,0MAAI;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;;;;;;0BAIvC,8OAAC,+JAAS;gBAAC,SAAS,uJAAO;gBAAE,MAAM;;;;;;;;;;;;AAGzC","debugId":null}}]
}