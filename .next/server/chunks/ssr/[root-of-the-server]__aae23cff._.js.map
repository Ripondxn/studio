{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/license.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { differenceInDays, addDays, format, parseISO } from 'date-fns';\n\nconst licenseFilePath = path.join(process.cwd(), 'license.json');\nconst TRIAL_PERIOD_DAYS = 30;\n\ntype LicenseInfo = {\n    trialStartDate: string;\n};\n\nexport type LicenseStatus = {\n    isActive: boolean;\n    isTrial: boolean;\n    daysRemaining: number;\n    expiryDate: string;\n};\n\nasync function readLicenseFile(): Promise<LicenseInfo | null> {\n    try {\n        await fs.access(licenseFilePath);\n        const data = await fs.readFile(licenseFilePath, 'utf-8');\n        // Basic validation in case the file is empty or corrupted\n        if (!data) return null;\n        return JSON.parse(data);\n    } catch (error) {\n        return null; // File doesn't exist or is unreadable\n    }\n}\n\nasync function createLicenseFile(): Promise<LicenseInfo> {\n    const trialStartDate = new Date().toISOString();\n    const newLicense: LicenseInfo = { trialStartDate };\n    await fs.writeFile(licenseFilePath, JSON.stringify(newLicense, null, 2), 'utf-8');\n    return newLicense;\n}\n\nexport async function checkLicenseStatus(): Promise<LicenseStatus> {\n    let license = await readLicenseFile();\n\n    if (!license) {\n        license = await createLicenseFile();\n    }\n    \n    const startDate = parseISO(license.trialStartDate);\n    const now = new Date();\n    const expiryDate = addDays(startDate, TRIAL_PERIOD_DAYS);\n    const daysRemaining = differenceInDays(expiryDate, now);\n\n    const isActive = daysRemaining >= 0;\n\n    return {\n        isActive,\n        isTrial: true, // For now, we only have a trial license\n        daysRemaining: Math.max(0, daysRemaining),\n        expiryDate: format(expiryDate, 'PPP'),\n    };\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;AAEA,MAAM,kBAAkB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AACjD,MAAM,oBAAoB;AAa1B,eAAe;IACX,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,iBAAiB;QAChD,0DAA0D;QAC1D,IAAI,CAAC,MAAM,OAAO;QAClB,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAO,OAAO;QACZ,OAAO,MAAM,sCAAsC;IACvD;AACJ;AAEA,eAAe;IACX,MAAM,iBAAiB,IAAI,OAAO,WAAW;IAC7C,MAAM,aAA0B;QAAE;IAAe;IACjD,MAAM,yGAAE,CAAC,SAAS,CAAC,iBAAiB,KAAK,SAAS,CAAC,YAAY,MAAM,IAAI;IACzE,OAAO;AACX;AAEO,eAAe;IAClB,IAAI,UAAU,MAAM;IAEpB,IAAI,CAAC,SAAS;QACV,UAAU,MAAM;IACpB;IAEA,MAAM,YAAY,IAAA,oJAAQ,EAAC,QAAQ,cAAc;IACjD,MAAM,MAAM,IAAI;IAChB,MAAM,aAAa,IAAA,kJAAO,EAAC,WAAW;IACtC,MAAM,gBAAgB,IAAA,oKAAgB,EAAC,YAAY;IAEnD,MAAM,WAAW,iBAAiB;IAElC,OAAO;QACH;QACA,SAAS;QACT,eAAe,KAAK,GAAG,CAAC,GAAG;QAC3B,YAAY,IAAA,gKAAM,EAAC,YAAY;IACnC;AACJ;;;IApBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/currency/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\n\nexport type CurrencySettings = {\n    currencyCode: string;\n};\n\nconst settingsFilePath = path.join(process.cwd(), 'src/app/admin/currency/settings.json');\n\nconst defaultSettings: CurrencySettings = {\n    currencyCode: 'AED'\n};\n\nexport async function getCurrencySettings(): Promise<CurrencySettings> {\n    try {\n        await fs.access(settingsFilePath);\n        const data = await fs.readFile(settingsFilePath, 'utf-8');\n        return { ...defaultSettings, ...JSON.parse(data) };\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return defaultSettings;\n        }\n        throw error;\n    }\n}\n\nconst currencySettingsSchema = z.object({\n    currencyCode: z.string().length(3, \"Currency code must be 3 characters long.\").toUpperCase(),\n});\n\nexport async function saveCurrencySettings(data: CurrencySettings) {\n    const validation = currencySettingsSchema.safeParse(data);\n\n    if (!validation.success) {\n        return { success: false, error: validation.error.errors[0].message };\n    }\n\n    try {\n        await fs.writeFile(settingsFilePath, JSON.stringify(validation.data, null, 2), 'utf-8');\n        revalidatePath('/', 'layout'); // Revalidate all pages\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save currency settings:', error);\n        return { success: false, error: 'Failed to save settings.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;;;;;;;AAMA,MAAM,mBAAmB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAElD,MAAM,kBAAoC;IACtC,cAAc;AAClB;AAEO,eAAe;IAClB,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,kBAAkB;QACjD,OAAO;YAAE,GAAG,eAAe;YAAE,GAAG,KAAK,KAAK,CAAC,KAAK;QAAC;IACrD,EAAE,OAAO,OAAO;QACZ,IAAI,AAAC,MAAgC,IAAI,KAAK,UAAU;YACpD,OAAO;QACX;QACA,MAAM;IACV;AACJ;AAEA,MAAM,yBAAyB,uKAAC,CAAC,MAAM,CAAC;IACpC,cAAc,uKAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,4CAA4C,WAAW;AAC9F;AAEO,eAAe,qBAAqB,IAAsB;IAC7D,MAAM,aAAa,uBAAuB,SAAS,CAAC;IAEpD,IAAI,CAAC,WAAW,OAAO,EAAE;QACrB,OAAO;YAAE,SAAS;YAAO,OAAO,WAAW,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO;QAAC;IACvE;IAEA,IAAI;QACA,MAAM,yGAAE,CAAC,SAAS,CAAC,kBAAkB,KAAK,SAAS,CAAC,WAAW,IAAI,EAAE,MAAM,IAAI;QAC/E,IAAA,+IAAc,EAAC,KAAK,WAAW,uBAAuB;QACtD,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO;YAAE,SAAS;YAAO,OAAO;QAA2B;IAC/D;AACJ;;;IAhCsB;IAiBA;;AAjBA,+OAAA;AAiBA,+OAAA","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/access-control/permissions.ts"],"sourcesContent":["\nexport type PermissionAction = {\n  action: string;\n  description: string;\n  allowedRoles: string[];\n};\n\nexport type FeaturePermission = {\n  feature: string;\n  description: string;\n  actions: PermissionAction[];\n};\n\nexport const featurePermissions: FeaturePermission[] = [\n  {\n    feature: 'Properties',\n    description: 'Manage property listings, details, and associated units/rooms.',\n    actions: [\n      { action: 'view', description: 'View property list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit property information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a property', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Units',\n    description: 'Manage individual units within a property.',\n    actions: [\n      { action: 'view', description: 'View unit list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit unit information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a unit', allowedRoles: ['Super Admin'] },\n    ],\n  },\n   {\n    feature: 'Rent-A-Car',\n    description: 'Manage vehicle rental agreements.',\n    actions: [\n      { action: 'view', description: 'View rental agreements', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete rental agreements', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n   {\n    feature: 'Car Sales',\n    description: 'Manage vehicle buying and selling operations.',\n    actions: [\n      { action: 'view', description: 'View vehicle inventory and sales', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add, edit, and delete vehicle records', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Lease Contracts',\n    description: 'Manage lease agreements with landlords.',\n    actions: [\n      { action: 'view', description: 'View lease agreements', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'manage', description: 'Create, edit, and delete lease agreements', allowedRoles: ['Super Admin', 'Admin'] },\n    ]\n  },\n  {\n    feature: 'Project Management',\n    description: 'Manage all aspects of projects, including billing, sub-contractors, and resource allocation.',\n    actions: [\n      { action: 'view', description: 'View project list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'manage', description: 'Create, edit, and delete projects', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'manage_billing', description: 'Manage project progress billing and retention', allowedRoles: ['Super Admin', 'Accountant'] },\n    ],\n  },\n   {\n    feature: 'Vaults & Stores',\n    description: 'Manage inventory, stock levels, and store locations.',\n    actions: [\n      { action: 'view', description: 'View stores and stock levels', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete stores and manage stock transactions', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n    {\n    feature: 'Products & Services',\n    description: 'Manage the catalog of products and services offered.',\n    actions: [\n      { action: 'view', description: 'View products and services', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete products and services', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'view_pricing', description: 'View cost and sale prices', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n    ],\n  },\n  {\n    feature: 'Asset Management',\n    description: 'Manage company assets, depreciation, and assignments.',\n    actions: [\n      { action: 'view', description: 'View asset list', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage', description: 'Add, edit, and assign assets', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete', description: 'Delete assets from the register', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Maintenance',\n    description: 'Manage maintenance tickets and service contracts.',\n    actions: [\n      { action: 'view_tickets', description: 'View maintenance tickets', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage_tickets', description: 'Create, edit, and update tickets', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'view_contracts', description: 'View service contracts', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage_contracts', description: 'Manage service contracts', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Workflow',\n    description: 'Manage document approval workflows.',\n    actions: [\n      { action: 'view', description: 'View workflow queue', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'manage', description: 'Approve or reject transactions', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Data Processing',\n    description: 'Extract data from documents using AI.',\n    actions: [\n      { action: 'access', description: 'Access document processing and data extraction features', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n    ],\n  },\n   {\n    feature: 'Utilities',\n    description: 'Manage utility accounts and bill payments.',\n    actions: [\n      { action: 'view', description: 'View utility accounts', allowedRoles: ['Super Admin', 'Admin', 'Accountant', 'User'] },\n      { action: 'manage', description: 'Add, edit, and delete utility accounts', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Landlords',\n    description: 'Manage landlord profiles and their associated contracts.',\n    actions: [\n      { action: 'view', description: 'View landlord list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant'] },\n      { action: 'edit', description: 'Edit landlord information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a landlord', allowedRoles: ['Super Admin'] },\n    ],\n  },\n    {\n    feature: 'Vendors',\n    description: 'Manage supplier and vendor profiles.',\n    actions: [\n      { action: 'view', description: 'View vendor list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit vendor information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a vendor', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Tenants',\n    description: 'Manage tenant profiles and their tenancy contracts.',\n    actions: [\n      { action: 'view', description: 'View tenant list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit tenant information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a tenant', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Customers',\n    description: 'Manage general customers for non-rental services.',\n    actions: [\n      { action: 'view', description: 'View customer list and details', allowedRoles: ['Super Admin', 'Admin', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit customer information', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete', description: 'Delete a customer', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Finance',\n    description: 'Access to financial modules like banking, payments, and chart of accounts.',\n    actions: [\n      { action: 'view_banking', description: 'View Banking and Petty Cash', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage_banking', description: 'Add/Edit/Delete bank accounts', allowedRoles: ['Super Admin'] },\n      { action: 'view_payments', description: 'View payment and receipt history', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'record_payment', description: 'Record new payments or receipts', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'delete_payment', description: 'Delete financial transactions', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'User Management',\n    description: 'Control over user accounts and their roles.',\n    actions: [\n      { action: 'view', description: 'View user list', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'add_user', description: 'Add new users', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'edit_user', description: 'Edit user details and roles', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete_user', description: 'Delete a user', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Settings',\n    description: 'Access to administrative settings.',\n    actions: [\n        { action: 'access_control', description: 'Manage user roles and permissions', allowedRoles: ['Super Admin'] },\n        { action: 'communication', description: 'Manage communication (Email/SMS) settings', allowedRoles: ['Super Admin', 'Admin'] },\n        { action: 'backup', description: 'Manage data backup and restore', allowedRoles: ['Super Admin'] },\n        { action: 'external_storage', description: 'Configure external storage (e.g., Google Drive)', allowedRoles: ['Developer'] },\n        { action: 'notifications', description: 'Send system-wide notifications', allowedRoles: ['Super Admin', 'Admin'] },\n        { action: 'contract_continuity', description: 'Review and fix contract data issues', allowedRoles: ['Super Admin'] },\n    ]\n  }\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/access-control/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport { type FeaturePermission, featurePermissions } from './permissions';\nimport { type UserRole } from '../user-roles/schema';\nimport { type ModuleSettings } from './schema';\n\nconst permissionsFilePath = path.join(process.cwd(), 'src/app/admin/access-control/permissions.json');\nconst usersFilePath = path.join(process.cwd(), 'src/app/admin/user-roles/users.json');\nconst moduleSettingsFilePath = path.join(process.cwd(), 'src/app/admin/access-control/module-settings.json');\nconst userOverridesFilePath = path.join(process.cwd(), 'src/app/admin/access-control/user-overrides.json');\n\nasync function readData(filePath: string) {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            // Return a default structure that can be safely merged\n            if (filePath.endsWith('permissions.json')) return [];\n            if (filePath.endsWith('users.json')) return [];\n            if (filePath.endsWith('module-settings.json')) return { modules: [] }; \n            if (filePath.endsWith('user-overrides.json')) return [];\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function getPermissions(): Promise<FeaturePermission[]> {\n     const savedPermissions = await readData(permissionsFilePath);\n     // Merge saved permissions with the default structure to ensure all features are listed\n    const allPermissions = featurePermissions.map(feature => {\n        const savedFeature = savedPermissions.find((p: any) => p.feature === feature.feature);\n        const actions = feature.actions.map(action => {\n        const savedAction = savedFeature?.actions.find((a: any) => a.action === action.action);\n        return {\n            ...action,\n            allowedRoles: savedAction ? savedAction.allowedRoles : action.allowedRoles,\n        };\n        });\n        return {\n        ...feature,\n        actions,\n        };\n    });\n    return allPermissions;\n}\n\nexport async function savePermissions(permissions: FeaturePermission[]) {\n    try {\n        await fs.writeFile(permissionsFilePath, JSON.stringify(permissions, null, 2), 'utf-8');\n        revalidatePath('/admin/access-control');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save permissions:', error);\n        return { success: false, error: 'Failed to save permissions.' };\n    }\n}\n\nexport async function updatePermission(featureName: string, actionName: string, role: string, isChecked: boolean) {\n    const currentPermissions = await getPermissions();\n    const feature = currentPermissions.find(f => f.feature === featureName);\n    if (feature) {\n        const action = feature.actions.find(a => a.action === actionName);\n        if (action) {\n            if (isChecked) {\n                if (!action.allowedRoles.includes(role)) {\n                    action.allowedRoles.push(role);\n                }\n            } else {\n                action.allowedRoles = action.allowedRoles.filter(r => r !== role);\n            }\n        }\n    }\n    return await savePermissions(currentPermissions);\n}\n\n\nexport async function getRoles(): Promise<string[]> {\n    try {\n        const users: UserRole[] = await readData(usersFilePath);\n        const allRoles = users.map(u => u.role);\n        // Add default roles that might not be in use yet\n        const defaultRoles = ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User', 'Developer'];\n        const uniqueRoles = Array.from(new Set([...allRoles, ...defaultRoles]));\n        return uniqueRoles;\n    } catch (error) {\n        console.error(\"Failed to read user roles\", error);\n        return ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User', 'Developer'];\n    }\n}\n\nexport type UserOverride = {\n    email: string;\n    allowedModules: string[];\n}\n\nexport async function getUserOverrides(): Promise<UserOverride[]> {\n    return (await readData(userOverridesFilePath)) as UserOverride[];\n}\n\nexport async function saveUserOverrides(overrides: UserOverride[]) {\n     try {\n        await fs.writeFile(userOverridesFilePath, JSON.stringify(overrides, null, 2), 'utf-8');\n        revalidatePath('/', 'layout');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save user overrides:', error);\n        return { success: false, error: 'Failed to save user overrides.' };\n    }\n}\n\n\nexport async function getCombinedAccessControlData() {\n    try {\n        const [permissions, moduleSettings, userOverrides] = await Promise.all([\n            getPermissions(),\n            readData(moduleSettingsFilePath) as Promise<ModuleSettings>,\n            getUserOverrides()\n        ]);\n        return { success: true, permissions, moduleSettings, userOverrides };\n    } catch(error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 954, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/stores/schema.ts"],"sourcesContent":["\n\nimport { z } from 'zod';\n\nexport const storeSchema = z.object({\n  id: z.string(),\n  name: z.string().min(1, 'Store name is required.'),\n  location: z.string().optional(),\n});\n\nexport const stockItemSchema = z.object({\n  id: z.string(),\n  storeId: z.string(),\n  productId: z.string(),\n  quantity: z.number().min(0),\n  // These are added dynamically\n  itemName: z.string().optional(),\n  itemCode: z.string().optional(),\n});\n\nexport const stockTransactionSchema = z.object({\n    id: z.string(),\n    date: z.string(),\n    storeId: z.string(),\n    storeName: z.string(),\n    productId: z.string(),\n    productName: z.string(),\n    quantity: z.number(),\n    type: z.enum(['IN', 'OUT']),\n    notes: z.string().optional(),\n    jobId: z.string().optional(),\n});\n\n\nexport type Store = z.infer<typeof storeSchema>;\nexport type StockItem = z.infer<typeof stockItemSchema>;\nexport type StockTransaction = z.infer<typeof stockTransactionSchema>;\nexport type Product = z.infer<typeof productSchema>;\n\nconst productSchema = z.object({\n  id: z.string(),\n  itemCode: z.string().min(1, 'Item code is required.'),\n  itemName: z.string().min(1, 'Item name is required.'),\n  itemType: z.enum(['Product', 'Service']),\n  salePrice: z.number().min(0, 'Sale price must be a positive number.'),\n  costPrice: z.number().min(0, 'Cost price must be a positive number.'),\n});\n"],"names":[],"mappings":";;;;;;;;AAEA;;AAEO,MAAM,cAAc,uKAAC,CAAC,MAAM,CAAC;IAClC,IAAI,uKAAC,CAAC,MAAM;IACZ,MAAM,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;AAC/B;AAEO,MAAM,kBAAkB,uKAAC,CAAC,MAAM,CAAC;IACtC,IAAI,uKAAC,CAAC,MAAM;IACZ,SAAS,uKAAC,CAAC,MAAM;IACjB,WAAW,uKAAC,CAAC,MAAM;IACnB,UAAU,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IACzB,8BAA8B;IAC9B,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;AAC/B;AAEO,MAAM,yBAAyB,uKAAC,CAAC,MAAM,CAAC;IAC3C,IAAI,uKAAC,CAAC,MAAM;IACZ,MAAM,uKAAC,CAAC,MAAM;IACd,SAAS,uKAAC,CAAC,MAAM;IACjB,WAAW,uKAAC,CAAC,MAAM;IACnB,WAAW,uKAAC,CAAC,MAAM;IACnB,aAAa,uKAAC,CAAC,MAAM;IACrB,UAAU,uKAAC,CAAC,MAAM;IAClB,MAAM,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAM;KAAM;IAC1B,OAAO,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC1B,OAAO,uKAAC,CAAC,MAAM,GAAG,QAAQ;AAC9B;AAQA,MAAM,gBAAgB,uKAAC,CAAC,MAAM,CAAC;IAC7B,IAAI,uKAAC,CAAC,MAAM;IACZ,UAAU,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAW;KAAU;IACvC,WAAW,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,WAAW,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC/B","debugId":null}},
    {"offset": {"line": 1008, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/stores/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { storeSchema, stockItemSchema, type Store, type StockItem, type StockTransaction } from './schema';\nimport { type Product } from '@/app/products/schema';\n\nconst storesFilePath = path.join(process.cwd(), 'src/app/stores/stores-data.json');\nconst stockFilePath = path.join(process.cwd(), 'src/app/stores/stock-data.json');\nconst stockTransactionsFilePath = path.join(process.cwd(), 'src/app/stores/stock-transactions.json');\nconst productsFilePath = path.join(process.cwd(), 'src/app/products/products-data.json');\n\n\nasync function readData<T>(filePath: string, defaultValue: T[] = []): Promise<T[]> {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await fs.writeFile(filePath, JSON.stringify(defaultValue, null, 2), 'utf-8');\n            return defaultValue;\n        }\n        throw error;\n    }\n}\n\nasync function writeData(filePath: string, data: any) {\n    await fs.writeFile(filePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\n\n// Store Actions\nexport async function getStores(): Promise<Store[]> {\n    return await readData<Store>(storesFilePath);\n}\n\nexport async function saveStore(data: Omit<Store, 'id'> & { id?: string }) {\n    const validation = storeSchema.omit({id: true}).safeParse(data);\n    if (!validation.success) return { success: false, error: 'Invalid data format.' };\n\n    const stores = await getStores();\n    if (data.id) { // Update\n        const index = stores.findIndex(s => s.id === data.id);\n        if (index === -1) return { success: false, error: 'Store not found.' };\n        stores[index] = { ...stores[index], ...validation.data };\n    } else { // Create\n        const newStore: Store = { ...validation.data, id: `STORE-${Date.now()}` };\n        stores.push(newStore);\n    }\n\n    await writeData(storesFilePath, stores);\n    revalidatePath('/stores');\n    return { success: true };\n}\n\nexport async function deleteStore(storeId: string) {\n    const stores = await getStores();\n    const updatedStores = stores.filter(s => s.id !== storeId);\n    if (stores.length === updatedStores.length) {\n        return { success: false, error: 'Store not found.' };\n    }\n    await writeData(storesFilePath, updatedStores);\n    revalidatePath('/stores');\n    return { success: true };\n}\n\n\n// Stock Actions\nexport async function getStockForStore(storeId: string): Promise<StockItem[]> {\n    const allStock = await readData<StockItem>(stockFilePath);\n    const products = await readData<Product>(productsFilePath);\n    const productMap = new Map(products.map(p => [p.id, p]));\n\n    return allStock\n        .filter(item => item.storeId === storeId)\n        .map(item => ({\n            ...item,\n            itemName: productMap.get(item.productId)?.itemName || 'Unknown Item',\n            itemCode: productMap.get(item.productId)?.itemCode || 'Unknown',\n        }));\n}\n\nexport async function getAggregatedStock(): Promise<any[]> {\n    const allStock = await readData<StockItem>(stockFilePath);\n    const products = await readData<Product>(productsFilePath);\n    const stores = await getStores();\n\n    const productMap = new Map(products.map(p => [p.id, p]));\n    const storeMap = new Map(stores.map(s => [s.id, s]));\n    \n    const aggregatedStock = new Map<string, any>();\n\n    for(const item of allStock) {\n        if (!productMap.has(item.productId)) continue;\n\n        if (!aggregatedStock.has(item.productId)) {\n            const product = productMap.get(item.productId)!;\n            aggregatedStock.set(item.productId, {\n                productId: item.productId,\n                itemName: product.itemName,\n                itemCode: product.itemCode,\n                totalQuantity: 0,\n                locations: [],\n            });\n        }\n\n        const aggItem = aggregatedStock.get(item.productId)!;\n        aggItem.totalQuantity += item.quantity;\n        aggItem.locations.push({\n            storeName: storeMap.get(item.storeId)?.name || 'Unknown Store',\n            quantity: item.quantity,\n        });\n    }\n\n    return Array.from(aggregatedStock.values());\n}\n\n\nexport async function getProductsForSelect(): Promise<{value: string, label: string}[]> {\n    const products = await readData<Product>(productsFilePath);\n    return products.map(p => ({ value: p.id, label: `${p.itemName} (${p.itemCode})`}));\n}\n\n\n// Transaction Actions\nconst transactionSchema = z.object({\n    storeId: z.string(),\n    productId: z.string(),\n    quantity: z.coerce.number().min(1, 'Quantity must be at least 1.'),\n    transactionType: z.enum(['IN', 'OUT']),\n    notes: z.string().optional(),\n    jobId: z.string().optional(),\n});\n\n\nexport async function recordStockTransaction(data: z.infer<typeof transactionSchema>) {\n    const validation = transactionSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    const { storeId, productId, quantity, transactionType, notes, jobId } = validation.data;\n    \n    // 1. Update Stock Level\n    const allStock = await readData<StockItem>(stockFilePath);\n    const stockItemIndex = allStock.findIndex(item => item.storeId === storeId && item.productId === productId);\n\n    if (transactionType === 'IN') {\n        if (stockItemIndex > -1) {\n            allStock[stockItemIndex].quantity += quantity;\n        } else {\n            allStock.push({\n                id: `STOCK-${Date.now()}`,\n                storeId,\n                productId,\n                quantity,\n            });\n        }\n    } else { // OUT\n        if (stockItemIndex === -1 || allStock[stockItemIndex].quantity < quantity) {\n            return { success: false, error: 'Insufficient stock for this transaction.' };\n        }\n        allStock[stockItemIndex].quantity -= quantity;\n    }\n\n    await writeData(stockFilePath, allStock);\n    \n    // 2. Record Transaction\n    const allTransactions = await readData<StockTransaction>(stockTransactionsFilePath);\n    const products = await readData<Product>(productsFilePath);\n    const product = products.find(p => p.id === productId);\n    const store = (await getStores()).find(s => s.id === storeId);\n    \n    const newTransaction: StockTransaction = {\n        id: `TXN-${Date.now()}`,\n        date: new Date().toISOString(),\n        storeId,\n        storeName: store?.name || 'Unknown Store',\n        productId,\n        productName: product?.itemName || 'Unknown Item',\n        quantity,\n        type: transactionType,\n        notes,\n        jobId\n    };\n    allTransactions.push(newTransaction);\n    await writeData(stockTransactionsFilePath, allTransactions);\n\n    // 3. Financial Impact\n    const cost = product?.costPrice || 0;\n    const value = quantity * cost;\n    \n    // This is a simplified financial integration.\n    // A more robust system would create journal entries.\n    const allAccounts = await readData<any>(path.join(process.cwd(), 'src/app/finance/chart-of-accounts/accounts.json'));\n    const inventoryAccountIndex = allAccounts.findIndex(a => a.code === '1140');\n    const expenseAccountIndex = allAccounts.findIndex(a => a.code === '5140'); // Maintenance & Repairs\n\n    if (transactionType === 'IN') {\n        if (inventoryAccountIndex > -1) {\n            allAccounts[inventoryAccountIndex].balance = (allAccounts[inventoryAccountIndex].balance || 0) + value;\n        }\n    } else { // OUT\n        if (inventoryAccountIndex > -1) {\n             allAccounts[inventoryAccountIndex].balance = (allAccounts[inventoryAccountIndex].balance || 0) - value;\n        }\n        if (expenseAccountIndex > -1) {\n             allAccounts[expenseAccountIndex].balance = (allAccounts[expenseAccountIndex].balance || 0) + value;\n        }\n    }\n    \n    await writeData(path.join(process.cwd(), 'src/app/finance/chart-of-accounts/accounts.json'), allAccounts);\n\n\n    revalidatePath('/stores');\n    revalidatePath('/finance/chart-of-accounts');\n    return { success: true };\n}\n\nexport async function getTransactionHistory(): Promise<StockTransaction[]> {\n    return await readData<StockTransaction>(stockTransactionsFilePath);\n}\n\nconst transferSchema = z.object({\n  fromStoreId: z.string().min(1, 'Source store is required'),\n  toStoreId: z.string().min(1, 'Destination store is required'),\n  productId: z.string().min(1, 'Product is required'),\n  quantity: z.coerce.number().min(1, 'Quantity must be at least 1'),\n  notes: z.string().optional(),\n}).refine(data => data.fromStoreId !== data.toStoreId, {\n    message: \"Source and destination stores cannot be the same.\",\n    path: ['toStoreId'],\n});\n\nexport async function transferStock(data: z.infer<typeof transferSchema>) {\n    const validation = transferSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: validation.error.errors[0].message };\n    }\n\n    const { fromStoreId, toStoreId, productId, quantity, notes } = validation.data;\n    \n    const allStock = await readData<StockItem>(stockFilePath);\n    const sourceStockIndex = allStock.findIndex(item => item.storeId === fromStoreId && item.productId === productId);\n    \n    // Check for sufficient stock\n    if (sourceStockIndex === -1 || allStock[sourceStockIndex].quantity < quantity) {\n        return { success: false, error: 'Insufficient stock in the source store.' };\n    }\n\n    // Decrement from source\n    allStock[sourceStockIndex].quantity -= quantity;\n\n    // Increment in destination\n    const destinationStockIndex = allStock.findIndex(item => item.storeId === toStoreId && item.productId === productId);\n    if (destinationStockIndex > -1) {\n        allStock[destinationStockIndex].quantity += quantity;\n    } else {\n        allStock.push({ id: `STOCK-${Date.now()}`, storeId: toStoreId, productId, quantity });\n    }\n\n    await writeData(stockFilePath, allStock);\n    \n    // Record transactions\n    const allTransactions = await readData<StockTransaction>(stockTransactionsFilePath);\n    const stores = await getStores();\n    const products = await readData<Product>(productsFilePath);\n    const fromStoreName = stores.find(s => s.id === fromStoreId)?.name || 'Unknown';\n    const toStoreName = stores.find(s => s.id === toStoreId)?.name || 'Unknown';\n    const productName = products.find(p => p.id === productId)?.itemName || 'Unknown';\n    const transferRef = `TRN-${Date.now()}`;\n\n    allTransactions.push({\n        id: `TXN-${Date.now()}-OUT`,\n        date: new Date().toISOString(),\n        storeId: fromStoreId,\n        storeName: fromStoreName,\n        productId,\n        productName,\n        quantity,\n        type: 'OUT',\n        notes: `Transfer to ${toStoreName}. Ref: ${transferRef}. ${notes || ''}`,\n    });\n\n    allTransactions.push({\n        id: `TXN-${Date.now()}-IN`,\n        date: new Date().toISOString(),\n        storeId: toStoreId,\n        storeName: toStoreName,\n        productId,\n        productName,\n        quantity,\n        type: 'IN',\n        notes: `Transfer from ${fromStoreName}. Ref: ${transferRef}. ${notes || ''}`,\n    });\n\n    await writeData(stockTransactionsFilePath, allTransactions);\n\n    revalidatePath('/stores');\n    return { success: true };\n}\n\n\nexport async function deleteStockTransaction(transactionId: string) {\n    const allTransactions = await readData<StockTransaction>(stockTransactionsFilePath);\n    const transactionToDelete = allTransactions.find(t => t.id === transactionId);\n\n    if (!transactionToDelete) {\n        return { success: false, error: \"Transaction not found.\" };\n    }\n    \n    // Reverse stock level\n    const allStock = await readData<StockItem>(stockFilePath);\n    const stockItemIndex = allStock.findIndex(item => item.storeId === transactionToDelete.storeId && item.productId === transactionToDelete.productId);\n\n    if (stockItemIndex > -1) {\n        if (transactionToDelete.type === 'IN') {\n            allStock[stockItemIndex].quantity -= transactionToDelete.quantity;\n        } else { // OUT\n            allStock[stockItemIndex].quantity += transactionToDelete.quantity;\n        }\n        await writeData(stockFilePath, allStock);\n    }\n\n    // Reverse financial impact\n    const products = await readData<Product>(productsFilePath);\n    const product = products.find(p => p.id === transactionToDelete.productId);\n    const cost = product?.costPrice || 0;\n    const value = transactionToDelete.quantity * cost;\n    const allAccounts = await readData<any>(path.join(process.cwd(), 'src/app/finance/chart-of-accounts/accounts.json'));\n    const inventoryAccountIndex = allAccounts.findIndex(a => a.code === '1140');\n    const expenseAccountIndex = allAccounts.findIndex(a => a.code === '5140');\n\n    if (transactionToDelete.type === 'IN') {\n        if (inventoryAccountIndex > -1) {\n            allAccounts[inventoryAccountIndex].balance -= value;\n        }\n    } else { // OUT\n        if (inventoryAccountIndex > -1) {\n             allAccounts[inventoryAccountIndex].balance += value;\n        }\n        if (expenseAccountIndex > -1) {\n             allAccounts[expenseAccountIndex].balance -= value;\n        }\n    }\n    await writeData(path.join(process.cwd(), 'src/app/finance/chart-of-accounts/accounts.json'), allAccounts);\n\n    // Remove transaction log\n    const updatedTransactions = allTransactions.filter(t => t.id !== transactionId);\n    await writeData(stockTransactionsFilePath, updatedTransactions);\n    \n    revalidatePath('/stores');\n    revalidatePath('/finance/chart-of-accounts');\n    return { success: true };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1419, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/stores/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCompanyProfile as '00b6be478acfdf6b7794a7b34be547b3606ebfd51c'} from 'ACTIONS_MODULE0'\nexport {saveCompanyProfile as '40c9350172a0cc49767c134a7e5ed44affe0683337'} from 'ACTIONS_MODULE0'\nexport {checkLicenseStatus as '008a29e84bd260b304f797613c7c39c01029f96950'} from 'ACTIONS_MODULE1'\nexport {getCurrencySettings as '00bf02fbdbf2069a58be66f4c215b7083c555f2e0f'} from 'ACTIONS_MODULE2'\nexport {getCombinedAccessControlData as '00484ec9aa59cb806ed9f49233b1daa442fefc4db8'} from 'ACTIONS_MODULE3'\nexport {getStores as '00337bc9d50a0fee1dcbbba421c50a176318824a9f'} from 'ACTIONS_MODULE4'\nexport {getTransactionHistory as '00a85791a9263f4c62a70736a3d3ba3acc98929e6e'} from 'ACTIONS_MODULE4'\nexport {getAggregatedStock as '00f48d28fba7234dd3db669df6462f5acac6cf5367'} from 'ACTIONS_MODULE4'\nexport {getProductsForSelect as '00f49101eb6ba63f37ac44115efcb2879c6728e42d'} from 'ACTIONS_MODULE4'\nexport {deleteStockTransaction as '4025ddf3c7fa1f5b8f1f7270611c4cb0fccd189900'} from 'ACTIONS_MODULE4'\nexport {deleteStore as '40407b5223f53d4db087ebcd056e566067c6210d43'} from 'ACTIONS_MODULE4'\nexport {transferStock as '4077edb68deca97984f6cfe2b2eae197c28d3712cd'} from 'ACTIONS_MODULE4'\nexport {getStockForStore as '4083aa8dbe47948ba080f8176cf852ad12710a3d1e'} from 'ACTIONS_MODULE4'\nexport {recordStockTransaction as '40b22c63b06bcdec074112767c268f793872040680'} from 'ACTIONS_MODULE4'\nexport {saveStore as '40e2d08fc3143601702469366b5245c8f27397061a'} from 'ACTIONS_MODULE4'\n"],"names":[],"mappings":";AAAA;AAEA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 1494, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/stores/stores-client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const StoresClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call StoresClient() from the server but StoresClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/stores/stores-client.tsx <module evaluation>\",\n    \"StoresClient\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1508, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/stores/stores-client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const StoresClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call StoresClient() from the server but StoresClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/stores/stores-client.tsx\",\n    \"StoresClient\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1522, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1530, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/stores/page.tsx"],"sourcesContent":["\nimport { getStores } from './actions';\nimport { StoresClient } from './stores-client';\n\n\nexport default async function StoresPage() {\n  const initialStores = await getStores();\n  return (\n    <StoresClient initialStores={initialStores} />\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;;;;AAGe,eAAe;IAC5B,MAAM,gBAAgB,MAAM,IAAA,4IAAS;IACrC,qBACE,8OAAC,yJAAY;QAAC,eAAe;;;;;;AAEjC","debugId":null}}]
}