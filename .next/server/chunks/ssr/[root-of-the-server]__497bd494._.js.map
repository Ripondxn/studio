{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/license.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { differenceInDays, addDays, format, parseISO } from 'date-fns';\n\nconst licenseFilePath = path.join(process.cwd(), 'license.json');\nconst TRIAL_PERIOD_DAYS = 30;\n\ntype LicenseInfo = {\n    trialStartDate: string;\n};\n\nexport type LicenseStatus = {\n    isActive: boolean;\n    isTrial: boolean;\n    daysRemaining: number;\n    expiryDate: string;\n};\n\nasync function readLicenseFile(): Promise<LicenseInfo | null> {\n    try {\n        await fs.access(licenseFilePath);\n        const data = await fs.readFile(licenseFilePath, 'utf-8');\n        // Basic validation in case the file is empty or corrupted\n        if (!data) return null;\n        return JSON.parse(data);\n    } catch (error) {\n        return null; // File doesn't exist or is unreadable\n    }\n}\n\nasync function createLicenseFile(): Promise<LicenseInfo> {\n    const trialStartDate = new Date().toISOString();\n    const newLicense: LicenseInfo = { trialStartDate };\n    await fs.writeFile(licenseFilePath, JSON.stringify(newLicense, null, 2), 'utf-8');\n    return newLicense;\n}\n\nexport async function checkLicenseStatus(): Promise<LicenseStatus> {\n    let license = await readLicenseFile();\n\n    if (!license) {\n        license = await createLicenseFile();\n    }\n    \n    const startDate = parseISO(license.trialStartDate);\n    const now = new Date();\n    const expiryDate = addDays(startDate, TRIAL_PERIOD_DAYS);\n    const daysRemaining = differenceInDays(expiryDate, now);\n\n    const isActive = daysRemaining >= 0;\n\n    return {\n        isActive,\n        isTrial: true, // For now, we only have a trial license\n        daysRemaining: Math.max(0, daysRemaining),\n        expiryDate: format(expiryDate, 'PPP'),\n    };\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;AAEA,MAAM,kBAAkB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AACjD,MAAM,oBAAoB;AAa1B,eAAe;IACX,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,iBAAiB;QAChD,0DAA0D;QAC1D,IAAI,CAAC,MAAM,OAAO;QAClB,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAO,OAAO;QACZ,OAAO,MAAM,sCAAsC;IACvD;AACJ;AAEA,eAAe;IACX,MAAM,iBAAiB,IAAI,OAAO,WAAW;IAC7C,MAAM,aAA0B;QAAE;IAAe;IACjD,MAAM,yGAAE,CAAC,SAAS,CAAC,iBAAiB,KAAK,SAAS,CAAC,YAAY,MAAM,IAAI;IACzE,OAAO;AACX;AAEO,eAAe;IAClB,IAAI,UAAU,MAAM;IAEpB,IAAI,CAAC,SAAS;QACV,UAAU,MAAM;IACpB;IAEA,MAAM,YAAY,IAAA,oJAAQ,EAAC,QAAQ,cAAc;IACjD,MAAM,MAAM,IAAI;IAChB,MAAM,aAAa,IAAA,kJAAO,EAAC,WAAW;IACtC,MAAM,gBAAgB,IAAA,oKAAgB,EAAC,YAAY;IAEnD,MAAM,WAAW,iBAAiB;IAElC,OAAO;QACH;QACA,SAAS;QACT,eAAe,KAAK,GAAG,CAAC,GAAG;QAC3B,YAAY,IAAA,gKAAM,EAAC,YAAY;IACnC;AACJ;;;IApBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/currency/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\n\nexport type CurrencySettings = {\n    currencyCode: string;\n};\n\nconst settingsFilePath = path.join(process.cwd(), 'src/app/admin/currency/settings.json');\n\nconst defaultSettings: CurrencySettings = {\n    currencyCode: 'AED'\n};\n\nexport async function getCurrencySettings(): Promise<CurrencySettings> {\n    try {\n        await fs.access(settingsFilePath);\n        const data = await fs.readFile(settingsFilePath, 'utf-8');\n        return { ...defaultSettings, ...JSON.parse(data) };\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return defaultSettings;\n        }\n        throw error;\n    }\n}\n\nconst currencySettingsSchema = z.object({\n    currencyCode: z.string().length(3, \"Currency code must be 3 characters long.\").toUpperCase(),\n});\n\nexport async function saveCurrencySettings(data: CurrencySettings) {\n    const validation = currencySettingsSchema.safeParse(data);\n\n    if (!validation.success) {\n        return { success: false, error: validation.error.errors[0].message };\n    }\n\n    try {\n        await fs.writeFile(settingsFilePath, JSON.stringify(validation.data, null, 2), 'utf-8');\n        revalidatePath('/', 'layout'); // Revalidate all pages\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save currency settings:', error);\n        return { success: false, error: 'Failed to save settings.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;;;;;;;AAMA,MAAM,mBAAmB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAElD,MAAM,kBAAoC;IACtC,cAAc;AAClB;AAEO,eAAe;IAClB,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,kBAAkB;QACjD,OAAO;YAAE,GAAG,eAAe;YAAE,GAAG,KAAK,KAAK,CAAC,KAAK;QAAC;IACrD,EAAE,OAAO,OAAO;QACZ,IAAI,AAAC,MAAgC,IAAI,KAAK,UAAU;YACpD,OAAO;QACX;QACA,MAAM;IACV;AACJ;AAEA,MAAM,yBAAyB,uKAAC,CAAC,MAAM,CAAC;IACpC,cAAc,uKAAC,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,4CAA4C,WAAW;AAC9F;AAEO,eAAe,qBAAqB,IAAsB;IAC7D,MAAM,aAAa,uBAAuB,SAAS,CAAC;IAEpD,IAAI,CAAC,WAAW,OAAO,EAAE;QACrB,OAAO;YAAE,SAAS;YAAO,OAAO,WAAW,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO;QAAC;IACvE;IAEA,IAAI;QACA,MAAM,yGAAE,CAAC,SAAS,CAAC,kBAAkB,KAAK,SAAS,CAAC,WAAW,IAAI,EAAE,MAAM,IAAI;QAC/E,IAAA,+IAAc,EAAC,KAAK,WAAW,uBAAuB;QACtD,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO;YAAE,SAAS;YAAO,OAAO;QAA2B;IAC/D;AACJ;;;IAhCsB;IAiBA;;AAjBA,+OAAA;AAiBA,+OAAA","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/access-control/permissions.ts"],"sourcesContent":["\nexport type PermissionAction = {\n  action: string;\n  description: string;\n  allowedRoles: string[];\n};\n\nexport type FeaturePermission = {\n  feature: string;\n  description: string;\n  actions: PermissionAction[];\n};\n\nexport const featurePermissions: FeaturePermission[] = [\n  {\n    feature: 'Properties',\n    description: 'Manage property listings, details, and associated units/rooms.',\n    actions: [\n      { action: 'view', description: 'View property list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit property information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a property', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Units',\n    description: 'Manage individual units within a property.',\n    actions: [\n      { action: 'view', description: 'View unit list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit unit information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a unit', allowedRoles: ['Super Admin'] },\n    ],\n  },\n   {\n    feature: 'Rent-A-Car',\n    description: 'Manage vehicle rental agreements.',\n    actions: [\n      { action: 'view', description: 'View rental agreements', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete rental agreements', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n   {\n    feature: 'Car Sales',\n    description: 'Manage vehicle buying and selling operations.',\n    actions: [\n      { action: 'view', description: 'View vehicle inventory and sales', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add, edit, and delete vehicle records', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Lease Contracts',\n    description: 'Manage lease agreements with landlords.',\n    actions: [\n      { action: 'view', description: 'View lease agreements', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'manage', description: 'Create, edit, and delete lease agreements', allowedRoles: ['Super Admin', 'Admin'] },\n    ]\n  },\n  {\n    feature: 'Project Management',\n    description: 'Manage all aspects of projects, including billing, sub-contractors, and resource allocation.',\n    actions: [\n      { action: 'view', description: 'View project list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'manage', description: 'Create, edit, and delete projects', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'manage_billing', description: 'Manage project progress billing and retention', allowedRoles: ['Super Admin', 'Accountant'] },\n    ],\n  },\n   {\n    feature: 'Vaults & Stores',\n    description: 'Manage inventory, stock levels, and store locations.',\n    actions: [\n      { action: 'view', description: 'View stores and stock levels', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete stores and manage stock transactions', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n    {\n    feature: 'Products & Services',\n    description: 'Manage the catalog of products and services offered.',\n    actions: [\n      { action: 'view', description: 'View products and services', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage', description: 'Add/Edit/Delete products and services', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'view_pricing', description: 'View cost and sale prices', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n    ],\n  },\n  {\n    feature: 'Asset Management',\n    description: 'Manage company assets, depreciation, and assignments.',\n    actions: [\n      { action: 'view', description: 'View asset list', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage', description: 'Add, edit, and assign assets', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete', description: 'Delete assets from the register', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Maintenance',\n    description: 'Manage maintenance tickets and service contracts.',\n    actions: [\n      { action: 'view_tickets', description: 'View maintenance tickets', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n      { action: 'manage_tickets', description: 'Create, edit, and update tickets', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'view_contracts', description: 'View service contracts', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage_contracts', description: 'Manage service contracts', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Workflow',\n    description: 'Manage document approval workflows.',\n    actions: [\n      { action: 'view', description: 'View workflow queue', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'manage', description: 'Approve or reject transactions', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Data Processing',\n    description: 'Extract data from documents using AI.',\n    actions: [\n      { action: 'access', description: 'Access document processing and data extraction features', allowedRoles: ['Super Admin', 'Admin', 'User'] },\n    ],\n  },\n   {\n    feature: 'Utilities',\n    description: 'Manage utility accounts and bill payments.',\n    actions: [\n      { action: 'view', description: 'View utility accounts', allowedRoles: ['Super Admin', 'Admin', 'Accountant', 'User'] },\n      { action: 'manage', description: 'Add, edit, and delete utility accounts', allowedRoles: ['Super Admin', 'Admin'] },\n    ],\n  },\n  {\n    feature: 'Landlords',\n    description: 'Manage landlord profiles and their associated contracts.',\n    actions: [\n      { action: 'view', description: 'View landlord list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant'] },\n      { action: 'edit', description: 'Edit landlord information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a landlord', allowedRoles: ['Super Admin'] },\n    ],\n  },\n    {\n    feature: 'Vendors',\n    description: 'Manage supplier and vendor profiles.',\n    actions: [\n      { action: 'view', description: 'View vendor list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit vendor information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a vendor', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Tenants',\n    description: 'Manage tenant profiles and their tenancy contracts.',\n    actions: [\n      { action: 'view', description: 'View tenant list and details', allowedRoles: ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit tenant information', allowedRoles: ['Super Admin', 'Admin', 'Property Manager'] },\n      { action: 'delete', description: 'Delete a tenant', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Customers',\n    description: 'Manage general customers for non-rental services.',\n    actions: [\n      { action: 'view', description: 'View customer list and details', allowedRoles: ['Super Admin', 'Admin', 'Accountant', 'User'] },\n      { action: 'edit', description: 'Edit customer information', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete', description: 'Delete a customer', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Finance',\n    description: 'Access to financial modules like banking, payments, and chart of accounts.',\n    actions: [\n      { action: 'view_banking', description: 'View Banking and Petty Cash', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'manage_banking', description: 'Add/Edit/Delete bank accounts', allowedRoles: ['Super Admin'] },\n      { action: 'view_payments', description: 'View payment and receipt history', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'record_payment', description: 'Record new payments or receipts', allowedRoles: ['Super Admin', 'Admin', 'Accountant'] },\n      { action: 'delete_payment', description: 'Delete financial transactions', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'User Management',\n    description: 'Control over user accounts and their roles.',\n    actions: [\n      { action: 'view', description: 'View user list', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'add_user', description: 'Add new users', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'edit_user', description: 'Edit user details and roles', allowedRoles: ['Super Admin', 'Admin'] },\n      { action: 'delete_user', description: 'Delete a user', allowedRoles: ['Super Admin'] },\n    ],\n  },\n  {\n    feature: 'Settings',\n    description: 'Access to administrative settings.',\n    actions: [\n        { action: 'access_control', description: 'Manage user roles and permissions', allowedRoles: ['Super Admin'] },\n        { action: 'communication', description: 'Manage communication (Email/SMS) settings', allowedRoles: ['Super Admin', 'Admin'] },\n        { action: 'backup', description: 'Manage data backup and restore', allowedRoles: ['Super Admin'] },\n        { action: 'external_storage', description: 'Configure external storage (e.g., Google Drive)', allowedRoles: ['Developer'] },\n        { action: 'notifications', description: 'Send system-wide notifications', allowedRoles: ['Super Admin', 'Admin'] },\n        { action: 'contract_continuity', description: 'Review and fix contract data issues', allowedRoles: ['Super Admin'] },\n    ]\n  }\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/access-control/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport { type FeaturePermission, featurePermissions } from './permissions';\nimport { type UserRole } from '../user-roles/schema';\nimport { type ModuleSettings } from './schema';\n\nconst permissionsFilePath = path.join(process.cwd(), 'src/app/admin/access-control/permissions.json');\nconst usersFilePath = path.join(process.cwd(), 'src/app/admin/user-roles/users.json');\nconst moduleSettingsFilePath = path.join(process.cwd(), 'src/app/admin/access-control/module-settings.json');\nconst userOverridesFilePath = path.join(process.cwd(), 'src/app/admin/access-control/user-overrides.json');\n\nasync function readData(filePath: string) {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            // Return a default structure that can be safely merged\n            if (filePath.endsWith('permissions.json')) return [];\n            if (filePath.endsWith('users.json')) return [];\n            if (filePath.endsWith('module-settings.json')) return { modules: [] }; \n            if (filePath.endsWith('user-overrides.json')) return [];\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function getPermissions(): Promise<FeaturePermission[]> {\n     const savedPermissions = await readData(permissionsFilePath);\n     // Merge saved permissions with the default structure to ensure all features are listed\n    const allPermissions = featurePermissions.map(feature => {\n        const savedFeature = savedPermissions.find((p: any) => p.feature === feature.feature);\n        const actions = feature.actions.map(action => {\n        const savedAction = savedFeature?.actions.find((a: any) => a.action === action.action);\n        return {\n            ...action,\n            allowedRoles: savedAction ? savedAction.allowedRoles : action.allowedRoles,\n        };\n        });\n        return {\n        ...feature,\n        actions,\n        };\n    });\n    return allPermissions;\n}\n\nexport async function savePermissions(permissions: FeaturePermission[]) {\n    try {\n        await fs.writeFile(permissionsFilePath, JSON.stringify(permissions, null, 2), 'utf-8');\n        revalidatePath('/admin/access-control');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save permissions:', error);\n        return { success: false, error: 'Failed to save permissions.' };\n    }\n}\n\nexport async function updatePermission(featureName: string, actionName: string, role: string, isChecked: boolean) {\n    const currentPermissions = await getPermissions();\n    const feature = currentPermissions.find(f => f.feature === featureName);\n    if (feature) {\n        const action = feature.actions.find(a => a.action === actionName);\n        if (action) {\n            if (isChecked) {\n                if (!action.allowedRoles.includes(role)) {\n                    action.allowedRoles.push(role);\n                }\n            } else {\n                action.allowedRoles = action.allowedRoles.filter(r => r !== role);\n            }\n        }\n    }\n    return await savePermissions(currentPermissions);\n}\n\n\nexport async function getRoles(): Promise<string[]> {\n    try {\n        const users: UserRole[] = await readData(usersFilePath);\n        const allRoles = users.map(u => u.role);\n        // Add default roles that might not be in use yet\n        const defaultRoles = ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User', 'Developer'];\n        const uniqueRoles = Array.from(new Set([...allRoles, ...defaultRoles]));\n        return uniqueRoles;\n    } catch (error) {\n        console.error(\"Failed to read user roles\", error);\n        return ['Super Admin', 'Admin', 'Property Manager', 'Accountant', 'User', 'Developer'];\n    }\n}\n\nexport type UserOverride = {\n    email: string;\n    allowedModules: string[];\n}\n\nexport async function getUserOverrides(): Promise<UserOverride[]> {\n    return (await readData(userOverridesFilePath)) as UserOverride[];\n}\n\nexport async function saveUserOverrides(overrides: UserOverride[]) {\n     try {\n        await fs.writeFile(userOverridesFilePath, JSON.stringify(overrides, null, 2), 'utf-8');\n        revalidatePath('/', 'layout');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save user overrides:', error);\n        return { success: false, error: 'Failed to save user overrides.' };\n    }\n}\n\n\nexport async function getCombinedAccessControlData() {\n    try {\n        const [permissions, moduleSettings, userOverrides] = await Promise.all([\n            getPermissions(),\n            readData(moduleSettingsFilePath) as Promise<ModuleSettings>,\n            getUserOverrides()\n        ]);\n        return { success: true, permissions, moduleSettings, userOverrides };\n    } catch(error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 954, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/payment/schema.ts"],"sourcesContent":["\n\nimport { z } from 'zod';\nimport { type Role } from '@/app/workflow/types';\n\nexport const invoiceAllocationSchema = z.object({\n  invoiceId: z.string(),\n  amount: z.number(),\n});\n\nexport const billAllocationSchema = z.object({\n  billId: z.string(),\n  amount: z.number(),\n});\n\nexport const approvalHistorySchema = z.object({\n  action: z.string(),\n  actorId: z.string(),\n  actorRole: z.string(), \n  timestamp: z.string(),\n  comments: z.string().optional(),\n});\n\nexport const paymentSchema = z.object({\n  id: z.string().optional(),\n  type: z.enum(['Receipt', 'Payment']),\n  date: z.string().min(1, \"Date is required.\"),\n  partyType: z.enum(['Tenant', 'Landlord', 'Vendor', 'Customer', 'Agent']),\n  partyName: z.string().min(1, \"Party name is required.\"),\n  amount: z.number().min(0.01, \"Amount must be greater than 0.\"),\n  paymentMethod: z.enum(['Cash', 'Cheque', 'Bank Transfer', 'Card']),\n  paymentFrom: z.enum(['Bank', 'Petty Cash']).default('Bank'),\n  bankAccountId: z.string().optional(),\n  expenseAccountId: z.string().optional(),\n  maintenanceTicketId: z.string().optional(),\n  utilityAccountId: z.string().optional(),\n  property: z.string().optional(),\n  unitCode: z.string().optional(),\n  floor: z.string().optional(),\n  roomCode: z.string().optional(),\n  referenceType: z.string().optional(),\n  referenceNo: z.string().optional(),\n  description: z.string().optional(),\n  contractNo: z.string().optional(),\n  remarks: z.string().optional(),\n  status: z.enum(['Paid', 'Received', 'Cancelled']),\n  agentCode: z.string().optional(),\n  createdByUser: z.string().optional(),\n  invoiceAllocations: z.array(invoiceAllocationSchema).optional(),\n  billAllocations: z.array(billAllocationSchema).optional(),\n  currentStatus: z.enum(['DRAFT', 'PENDING_ADMIN_APPROVAL', 'PENDING_SUPER_ADMIN_APPROVAL', 'POSTED', 'REJECTED']).optional(),\n  approvalHistory: z.array(approvalHistorySchema).optional(),\n});\n\nexport type Payment = z.infer<typeof paymentSchema>;\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;AAGO,MAAM,0BAA0B,uKAAC,CAAC,MAAM,CAAC;IAC9C,WAAW,uKAAC,CAAC,MAAM;IACnB,QAAQ,uKAAC,CAAC,MAAM;AAClB;AAEO,MAAM,uBAAuB,uKAAC,CAAC,MAAM,CAAC;IAC3C,QAAQ,uKAAC,CAAC,MAAM;IAChB,QAAQ,uKAAC,CAAC,MAAM;AAClB;AAEO,MAAM,wBAAwB,uKAAC,CAAC,MAAM,CAAC;IAC5C,QAAQ,uKAAC,CAAC,MAAM;IAChB,SAAS,uKAAC,CAAC,MAAM;IACjB,WAAW,uKAAC,CAAC,MAAM;IACnB,WAAW,uKAAC,CAAC,MAAM;IACnB,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;AAC/B;AAEO,MAAM,gBAAgB,uKAAC,CAAC,MAAM,CAAC;IACpC,IAAI,uKAAC,CAAC,MAAM,GAAG,QAAQ;IACvB,MAAM,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAW;KAAU;IACnC,MAAM,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,WAAW,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAU;QAAY;QAAU;QAAY;KAAQ;IACvE,WAAW,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,QAAQ,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM;IAC7B,eAAe,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAU;QAAiB;KAAO;IACjE,aAAa,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAa,EAAE,OAAO,CAAC;IACpD,eAAe,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAClC,kBAAkB,uKAAC,CAAC,MAAM,GAAG,QAAQ;IACrC,qBAAqB,uKAAC,CAAC,MAAM,GAAG,QAAQ;IACxC,kBAAkB,uKAAC,CAAC,MAAM,GAAG,QAAQ;IACrC,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,OAAO,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC1B,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,eAAe,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAClC,aAAa,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAChC,aAAa,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAChC,YAAY,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC/B,SAAS,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC5B,QAAQ,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAY;KAAY;IAChD,WAAW,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,eAAe,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAClC,oBAAoB,uKAAC,CAAC,KAAK,CAAC,yBAAyB,QAAQ;IAC7D,iBAAiB,uKAAC,CAAC,KAAK,CAAC,sBAAsB,QAAQ;IACvD,eAAe,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAS;QAA0B;QAAgC;QAAU;KAAW,EAAE,QAAQ;IACzH,iBAAiB,uKAAC,CAAC,KAAK,CAAC,uBAAuB,QAAQ;AAC1D","debugId":null}},
    {"offset": {"line": 1048, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase/admin-config.ts"],"sourcesContent":["\nimport * as admin from 'firebase-admin';\nimport { existsSync } from 'fs';\n\nconst projectId = process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID;\n\n// The recommended approach is to use Application Default Credentials (ADC).\n// Initialize without any arguments and it will automatically use ADC if available.\ntry {\n    if (!admin.apps.length) {\n        console.log(\"Attempting to initialize Firebase Admin with Application Default Credentials...\");\n        admin.initializeApp({ projectId });\n        console.log(\"Firebase Admin initialized successfully with Application Default Credentials.\");\n    }\n} catch (e) {\n    console.warn(\"Could not initialize with Application Default Credentials, trying service account path.\", e);\n    \n    // Fallback for local development outside of a GCP environment\n    const serviceAccountPath = process.env.SERVICE_ACCOUNT_JSON_PATH;\n\n    if (!serviceAccountPath) {\n        throw new Error(\n            'Firebase initialization failed. Application Default Credentials not found. ' +\n            'For local development, set the SERVICE_ACCOUNT_JSON_PATH environment variable to the path of your service account JSON file in your .env.local'\n        );\n    }\n\n    if (!existsSync(serviceAccountPath)) {\n        throw new Error(\n            `Firebase initialization failed. Service account file not found at path: ${serviceAccountPath}. ` +\n            'Please check the SERVICE_ACCOUNT_JSON_PATH in your .env.local file.'\n        );\n    }\n    \n    if (!admin.apps.length) {\n        console.log(`Attempting to initialize Firebase Admin with service account file: ${serviceAccountPath}`);\n        admin.initializeApp({\n            credential: admin.credential.cert(serviceAccountPath),\n            projectId: projectId,\n        });\n        console.log(\"Firebase Admin initialized successfully with service account file.\");\n    }\n}\n\nconst firestoreAdmin = admin.firestore();\n\nexport { firestoreAdmin };\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAEA,MAAM;AAEN,4EAA4E;AAC5E,mFAAmF;AACnF,IAAI;IACA,IAAI,CAAC,mIAAU,CAAC,MAAM,EAAE;QACpB,QAAQ,GAAG,CAAC;QACZ,4IAAmB,CAAC;YAAE;QAAU;QAChC,QAAQ,GAAG,CAAC;IAChB;AACJ,EAAE,OAAO,GAAG;IACR,QAAQ,IAAI,CAAC,2FAA2F;IAExG,8DAA8D;IAC9D,MAAM,qBAAqB,QAAQ,GAAG,CAAC,yBAAyB;IAEhE,IAAI,CAAC,oBAAoB;QACrB,MAAM,IAAI,MACN,gFACA;IAER;IAEA,IAAI,CAAC,IAAA,2GAAU,EAAC,qBAAqB;QACjC,MAAM,IAAI,MACN,CAAC,wEAAwE,EAAE,mBAAmB,EAAE,CAAC,GACjG;IAER;IAEA,IAAI,CAAC,mIAAU,CAAC,MAAM,EAAE;QACpB,QAAQ,GAAG,CAAC,CAAC,mEAAmE,EAAE,oBAAoB;QACtG,4IAAmB,CAAC;YAChB,YAAY,yIAAgB,CAAC,IAAI,CAAC;YAClC,WAAW;QACf;QACA,QAAQ,GAAG,CAAC;IAChB;AACJ;AAEA,MAAM,iBAAiB,wIAAe","debugId":null}},
    {"offset": {"line": 1092, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/customer/invoice/schema.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\nexport const invoiceItemSchema = z.object({\n  id: z.string(),\n  description: z.string().min(1, 'Description is required.'),\n  quantity: z.number().min(1, 'Quantity must be at least 1.'),\n  unitPrice: z.number().min(0, 'Unit price must be positive.'),\n  total: z.number(),\n});\n\nexport const invoiceSchema = z.object({\n  id: z.string(),\n  invoiceNo: z.string().min(1, 'Invoice number is required.'),\n  customerCode: z.string().min(1, 'Customer is required.'),\n  customerName: z.string().min(1, 'Customer name is required.'),\n  property: z.string().optional(),\n  unitCode: z.string().optional(),\n  roomCode: z.string().optional(),\n  invoiceDate: z.string().min(1, 'Invoice date is required.'),\n  dueDate: z.string().min(1, 'Due date is required.'),\n  vatRegNo: z.string().optional(),\n  items: z.array(invoiceItemSchema).min(1, 'At least one item is required.'),\n  subTotal: z.number(),\n  taxType: z.enum(['exclusive', 'inclusive']).default('exclusive'),\n  taxRate: z.number().optional().default(0),\n  tax: z.number(),\n  total: z.number(),\n  amountPaid: z.number().optional().default(0),\n  remainingBalance: z.number().optional(),\n  status: z.enum(['Draft', 'Sent', 'Paid', 'Overdue', 'Cancelled']),\n  notes: z.string().optional(),\n});\n\nexport const subscriptionInvoiceSchema = invoiceSchema.extend({\n  isSubscription: z.boolean().optional(),\n});\n\nexport type Invoice = z.infer<typeof invoiceSchema>;\nexport type InvoiceItem = z.infer<typeof invoiceItemSchema>;\n"],"names":[],"mappings":";;;;;;;;AACA;;AAEO,MAAM,oBAAoB,uKAAC,CAAC,MAAM,CAAC;IACxC,IAAI,uKAAC,CAAC,MAAM;IACZ,aAAa,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,UAAU,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,WAAW,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,OAAO,uKAAC,CAAC,MAAM;AACjB;AAEO,MAAM,gBAAgB,uKAAC,CAAC,MAAM,CAAC;IACpC,IAAI,uKAAC,CAAC,MAAM;IACZ,WAAW,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,cAAc,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,cAAc,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,aAAa,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,SAAS,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC3B,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,OAAO,uKAAC,CAAC,KAAK,CAAC,mBAAmB,GAAG,CAAC,GAAG;IACzC,UAAU,uKAAC,CAAC,MAAM;IAClB,SAAS,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAa;KAAY,EAAE,OAAO,CAAC;IACpD,SAAS,uKAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;IACvC,KAAK,uKAAC,CAAC,MAAM;IACb,OAAO,uKAAC,CAAC,MAAM;IACf,YAAY,uKAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;IAC1C,kBAAkB,uKAAC,CAAC,MAAM,GAAG,QAAQ;IACrC,QAAQ,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAS;QAAQ;QAAQ;QAAW;KAAY;IAChE,OAAO,uKAAC,CAAC,MAAM,GAAG,QAAQ;AAC5B;AAEO,MAAM,4BAA4B,cAAc,MAAM,CAAC;IAC5D,gBAAgB,uKAAC,CAAC,OAAO,GAAG,QAAQ;AACtC","debugId":null}},
    {"offset": {"line": 1147, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/customer/invoice/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { firestoreAdmin } from '@/lib/firebase/admin-config';\nimport { invoiceSchema, type Invoice } from './schema';\n\nasync function getNextInvoiceNumber(prefix: string) {\n    const querySnapshot = await firestoreAdmin.collection(\"invoices\").where(\"invoiceNo\", \">=\", prefix).where(\"invoiceNo\", \"<\", prefix + 'z').get();\n    let maxNum = 0;\n    querySnapshot.docs.forEach(doc => {\n        const match = doc.data().invoiceNo.match(new RegExp(`^${prefix}-(\\\\d+)$`));\n        if (match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `${prefix}-${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\nexport async function getInvoicesForCustomer(customerCode: string) {\n    const querySnapshot = await firestoreAdmin.collection(\"invoices\").where(\"customerCode\", \"==\", customerCode).get();\n    return querySnapshot.docs.map(doc => {\n        const data = doc.data() as Invoice;\n        return { ...data, id: doc.id, remainingBalance: data.total - (data.amountPaid || 0) };\n    });\n}\n\nexport async function getNextGeneralInvoiceNumber() {\n    return await getNextInvoiceNumber('INV');\n}\n\nexport async function getNextSubscriptionInvoiceNumber() {\n    return await getNextInvoiceNumber('SUB-INV');\n}\n\nexport async function saveInvoice(data: Omit<Invoice, 'amountPaid' | 'remainingBalance'> & { isAutoInvoiceNo?: boolean, isSubscription?: boolean }, createdBy: string) {\n    const { isAutoInvoiceNo, isSubscription, ...invoiceData } = data;\n    const validation = invoiceSchema.omit({id: true, amountPaid: true, remainingBalance: true}).safeParse(invoiceData);\n\n    if (!validation.success) {\n        console.error(\"Invoice Validation Error:\", validation.error.format());\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    try {\n        const isNewRecord = !data.id;\n        const validatedData = validation.data;\n        let savedInvoice: Invoice;\n\n        if (isNewRecord) {\n            let newInvoiceNo = validatedData.invoiceNo;\n            if (isAutoInvoiceNo) {\n                newInvoiceNo = isSubscription ? await getNextSubscriptionInvoiceNumber() : await getNextGeneralInvoiceNumber();\n            } else {\n                const querySnapshot = await firestoreAdmin.collection(\"invoices\").where(\"invoiceNo\", \"==\", newInvoiceNo).get();\n                if (!querySnapshot.empty) {\n                    return { success: false, error: `An invoice with number \"${newInvoiceNo}\" already exists.`};\n                }\n            }\n\n            const newInvoice: Invoice = {\n                ...validatedData,\n                invoiceNo: newInvoiceNo,\n                amountPaid: 0,\n                items: validatedData.items.map(item => ({...item, id: item.id || `item-${Date.now()}-${Math.random()}`})),\n                id: ''\n            };\n            const docRef = await firestoreAdmin.collection(\"invoices\").add(newInvoice);\n            savedInvoice = { ...newInvoice, id: docRef.id };\n            \n        } else {\n            const docRef = firestoreAdmin.collection(\"invoices\").doc(data.id as string);\n            await docRef.update(validatedData);\n            const updatedDoc = await docRef.get();\n            savedInvoice = { ...updatedDoc.data(), id: updatedDoc.id } as Invoice;\n        }\n\n        revalidatePath(`/tenancy/customer/add?code=${data.customerCode}`);\n        revalidatePath(`/tenancy/tenants/add?code=${data.customerCode}`);\n        return { success: true, data: savedInvoice };\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nexport async function saveSubscriptionInvoice(data: Omit<Invoice, 'amountPaid' | 'remainingBalance'> & { isAutoInvoiceNo?: boolean }, createdBy: string) {\n    return await saveInvoice({ ...data, isSubscription: true }, createdBy);\n}\n\n\nexport async function deleteInvoice(invoiceId: string) {\n    try {\n        const docRef = firestoreAdmin.collection(\"invoices\").doc(invoiceId);\n        const doc = await docRef.get();\n        if (!doc.exists) {\n            return { success: false, error: 'Invoice not found.' };\n        }\n        const customerCode = doc.data()?.customerCode;\n        await docRef.delete();\n        revalidatePath(`/tenancy/customer/add?code=${customerCode}`);\n        revalidatePath(`/tenancy/tenants/add?code=${customerCode}`);\n        return { success: true };\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nexport async function updateInvoiceStatus(invoiceId: string, status: Invoice['status']) {\n    try {\n        const docRef = firestoreAdmin.collection(\"invoices\").doc(invoiceId);\n        const doc = await docRef.get();\n        if (!doc.exists) {\n            return { success: false, error: 'Invoice not found to update status.' };\n        }\n        await docRef.update({ status });\n        revalidatePath(`/tenancy/customer/add?code=${doc.data()?.customerCode}`);\n        revalidatePath(`/tenancy/tenants/add?code=${doc.data()?.customerCode}`);\n        return { success: true };\n    } catch (error) {\n         return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nexport async function applyPaymentToInvoices(invoicePayments: { invoiceId: string; amount: number }[], customerCode: string) {\n    try {\n        const batch = firestoreAdmin.batch();\n        for (const payment of invoicePayments) {\n            const docRef = firestoreAdmin.collection(\"invoices\").doc(payment.invoiceId);\n            const doc = await docRef.get();\n            if (doc.exists) {\n                const invoice = doc.data() as Invoice;\n                const newAmountPaid = (invoice.amountPaid || 0) + payment.amount;\n                const remainingBalance = invoice.total - newAmountPaid;\n                const newStatus = remainingBalance <= 0.001 ? 'Paid' : invoice.status;\n                batch.update(docRef, { amountPaid: newAmountPaid, status: newStatus });\n            }\n        }\n        await batch.commit();\n\n        revalidatePath(`/tenancy/customer/add?code=${customerCode}`);\n        revalidatePath(`/tenancy/tenants/add?code=${customerCode}`);\n        return { success: true };\n    } catch (error) {\n         return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1381, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/cron/generate-invoices/route.ts"],"sourcesContent":["\n\nimport { NextResponse } from 'next/server';\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { format, startOfMonth, endOfMonth, isWithinInterval, parseISO, addMonths, getMonth, getYear, getDate } from 'date-fns';\nimport { type Tenant } from '@/app/tenancy/tenants/schema';\nimport { type Invoice } from '@/app/tenancy/customer/invoice/schema';\n// import { saveSubscriptionInvoice } from '@/app/tenancy/customer/invoice/actions';\nimport { getWorkflowSettings } from '@/app/admin/workflow-settings/actions';\n\nconst tenantsFilePath = path.join(process.cwd(), 'src/app/tenancy/tenants/tenants-data.json');\nconst invoicesFilePath = path.join(process.cwd(), 'src/app/tenancy/tenants/invoice/subscription-invoices-data.json');\n\nasync function readData<T>(filePath: string): Promise<T[]> {\n    try {\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function generateInvoices(forceRun = false) {\n  try {\n    // const workflowSettings = await getWorkflowSettings();\n    const today = new Date();\n\n    // if (!forceRun) {\n    //     if (!workflowSettings.automaticInvoiceGenerationEnabled) {\n    //       return { success: true, message: 'Automatic invoice generation is disabled. No invoices were created.' };\n    //     }\n    //     if (getDate(today) !== workflowSettings.invoiceGenerationDay) {\n    //         return { success: true, message: `Skipping invoice generation. Today is not day ${workflowSettings.invoiceGenerationDay}.`};\n    //     }\n    // }\n    \n    const tenants = await readData<{tenantData: Tenant}>(tenantsFilePath);\n    const existingInvoices = await readData<Invoice>(invoicesFilePath);\n\n    const activeSubscriptions = tenants.filter(t => t.tenantData.isSubscriptionActive && t.tenantData.subscriptionAmount > 0);\n    \n    const createdFor: string[] = [];\n\n    for (const tenant of activeSubscriptions) {\n        // for (let i = 0; i < workflowSettings.monthsToGenerate; i++) {\n            const targetMonthDate = addMonths(today, 1);\n            const targetMonthKey = format(targetMonthDate, 'yyyy-MM');\n\n            const hasInvoiceForTargetMonth = existingInvoices.some(inv => \n                inv.customerCode === tenant.tenantData.code &&\n                format(parseISO(inv.invoiceDate), 'yyyy-MM') === targetMonthKey\n            );\n            \n            if (!hasInvoiceForTargetMonth) {\n                const tenantData = tenant.tenantData;\n                const subscriptionAmount = tenantData.subscriptionAmount || 0;\n                \n                const newInvoiceData: Omit<Invoice, 'id' | 'amountPaid'> = {\n                    invoiceNo: '', // Will be generated by saveInvoice\n                    customerCode: tenantData.code,\n                    customerName: tenantData.name,\n                    property: tenantData.property || '',\n                    unitCode: tenantData.unitCode || '',\n                    roomCode: tenantData.roomCode || '',\n                    invoiceDate: format(targetMonthDate, 'yyyy-MM-dd'),\n                    dueDate: format(endOfMonth(targetMonthDate), 'yyyy-MM-dd'),\n                    items: [{ \n                        id: `item-${Date.now()}`, \n                        description: `${tenantData.subscriptionStatus} Subscription for ${format(targetMonthDate, 'MMMM yyyy')}`, \n                        quantity: 1, \n                        unitPrice: subscriptionAmount, \n                        total: subscriptionAmount \n                    }],\n                    subTotal: subscriptionAmount,\n                    tax: 0,\n                    taxType: 'exclusive',\n                    taxRate: 0,\n                    total: subscriptionAmount,\n                    notes: `Automatically generated subscription invoice for ${format(targetMonthDate, 'MMMM yyyy')}.`,\n                    status: 'Sent', // Assume invoices are sent immediately\n                };\n\n                // await saveSubscriptionInvoice({ ...newInvoiceData, isAutoInvoiceNo: true }, 'Cron Job');\n                createdFor.push(`${tenantData.name} (for ${format(targetMonthDate, 'MMM yyyy')})`);\n            }\n        // }\n    }\n    \n    const message = createdFor.length > 0 \n        ? `Created ${createdFor.length} new invoices for: ${createdFor.join(', ')}.`\n        : 'No new invoices needed at this time.';\n        \n    return { success: true, message };\n\n  } catch (error) {\n    console.error('Cron job for invoice generation failed:', error);\n    throw new Error('Failed to generate invoices.');\n  }\n}\n\n\nexport async function GET(request: Request) {\n    try {\n        const result = await generateInvoices();\n        return NextResponse.json(result);\n    } catch(e: any) {\n        return NextResponse.json({ success: false, error: e.message }, { status: 500 });\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1493, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/workflow-settings/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { generateInvoices } from '@/app/api/cron/generate-invoices/route';\n\n\nexport type WorkflowSettings = {\n    approvalProcessEnabled: boolean;\n    automaticInvoiceGenerationEnabled: boolean;\n    invoiceGenerationDay: number;\n    monthsToGenerate: number;\n};\n\nconst settingsFilePath = path.join(process.cwd(), 'src/app/admin/workflow-settings/settings.json');\n\nconst defaultSettings: WorkflowSettings = {\n    approvalProcessEnabled: true,\n    automaticInvoiceGenerationEnabled: true,\n    invoiceGenerationDay: 1,\n    monthsToGenerate: 1,\n};\n\nexport async function getWorkflowSettings(): Promise<WorkflowSettings> {\n    try {\n        await fs.access(settingsFilePath);\n        const data = await fs.readFile(settingsFilePath, 'utf-8');\n        return { ...defaultSettings, ...JSON.parse(data) };\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return defaultSettings;\n        }\n        throw error;\n    }\n}\n\nexport async function saveWorkflowSettings(data: WorkflowSettings) {\n    try {\n        await fs.writeFile(settingsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to save workflow settings:', error);\n        return { success: false, error: 'Failed to save settings.' };\n    }\n}\n\nexport async function runInvoiceGeneration() {\n    try {\n        // Directly call the logic from the cron route\n        const result = await generateInvoices(true); // Pass true to force run for simulation\n        return { success: true, message: result.message };\n    } catch (error) {\n        console.error('Manual invoice generation failed:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;AAGA;AACA;AACA;;;;;;AAUA,MAAM,mBAAmB,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAElD,MAAM,kBAAoC;IACtC,wBAAwB;IACxB,mCAAmC;IACnC,sBAAsB;IACtB,kBAAkB;AACtB;AAEO,eAAe;IAClB,IAAI;QACA,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,kBAAkB;QACjD,OAAO;YAAE,GAAG,eAAe;YAAE,GAAG,KAAK,KAAK,CAAC,KAAK;QAAC;IACrD,EAAE,OAAO,OAAO;QACZ,IAAI,AAAC,MAAgC,IAAI,KAAK,UAAU;YACpD,OAAO;QACX;QACA,MAAM;IACV;AACJ;AAEO,eAAe,qBAAqB,IAAsB;IAC7D,IAAI;QACA,MAAM,yGAAE,CAAC,SAAS,CAAC,kBAAkB,KAAK,SAAS,CAAC,MAAM,MAAM,IAAI;QACpE,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO;YAAE,SAAS;YAAO,OAAO;QAA2B;IAC/D;AACJ;AAEO,eAAe;IAClB,IAAI;QACA,8CAA8C;QAC9C,MAAM,SAAS,MAAM,IAAA,8KAAgB,EAAC,OAAO,wCAAwC;QACrF,OAAO;YAAE,SAAS;YAAM,SAAS,OAAO,OAAO;QAAC;IACpD,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO;YAAE,SAAS;YAAO,OAAO,AAAC,MAAgB,OAAO,IAAI;QAA4B;IAC5F;AACJ;;;IAhCsB;IAaA;IAUA;;AAvBA,+OAAA;AAaA,+OAAA;AAUA,+OAAA","debugId":null}},
    {"offset": {"line": 1575, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/workflow/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { type Payment } from '@/app/finance/payment/schema';\nimport type { Role, Status } from './types';\nimport { type BankAccount } from '@/app/finance/banking/schema';\nimport { type Account } from '@/app/finance/chart-of-accounts/schema';\n\n\nconst paymentsFilePath = path.join(process.cwd(), 'src/app/finance/payment/payments-data.json');\nconst bankAccountsFilePath = path.join(process.cwd(), 'src/app/finance/banking/accounts-data.json');\nconst pettyCashFilePath = path.join(process.cwd(), 'src/app/finance/banking/petty-cash.json');\nconst accountsFilePath = path.join(process.cwd(), 'src/app/finance/chart-of-accounts/accounts.json');\nconst invoicesFilePath = path.join(process.cwd(), 'src/app/tenancy/customer/invoice/invoices-data.json');\nconst billsFilePath = path.join(process.cwd(), 'src/app/vendors/bill/bills-data.json');\n\n\nasync function readData(filePath: string): Promise<any[]> {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeData(filePath: string, data: any) {\n    await fs.writeFile(filePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\n\nasync function readPayments(): Promise<Payment[]> {\n    return await readData(paymentsFilePath);\n}\nasync function writePayments(data: Payment[]) {\n    await writeData(paymentsFilePath, data);\n}\n\nasync function readBankAccounts(): Promise<BankAccount[]> {\n    return await readData(bankAccountsFilePath);\n}\nasync function writeBankAccounts(data: BankAccount[]) {\n    await writeData(bankAccountsFilePath, data);\n}\n\nasync function readPettyCash(): Promise<{ balance: number }> {\n    const data = await readData(pettyCashFilePath);\n    if (!data || (Array.isArray(data) && data.length === 0)) {\n        return { balance: 0 };\n    }\n    return data as { balance: number };\n}\n\nasync function writePettyCash(data: { balance: number }) {\n    await fs.writeFile(pettyCashFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\n\nexport async function applyFinancialImpact(payment: Payment) {\n    const { type, amount, bankAccountId, paymentFrom, partyType, partyName, expenseAccountId } = payment;\n    const allAccounts: Account[] = await readData(accountsFilePath);\n    const accountsPayableIndex = allAccounts.findIndex(a => a.code === '2110'); // Accounts Payable\n    const ownersEquityAccountIndex = allAccounts.findIndex(a => a.code === '3110'); // Owner's Equity\n\n    // Update Cash/Bank balances\n    if (paymentFrom === 'Petty Cash') {\n        const pettyCash = await readPettyCash();\n        if (type === 'Payment') {\n            pettyCash.balance -= amount;\n        } else { // Receipt\n            pettyCash.balance += amount;\n        }\n        await writePettyCash(pettyCash);\n    } else if (bankAccountId) {\n        const allBankAccounts = await readBankAccounts();\n        const accountIndex = allBankAccounts.findIndex(acc => acc.id === bankAccountId);\n        if (accountIndex !== -1) {\n            if (type === 'Payment') {\n                allBankAccounts[accountIndex].balance -= amount;\n            } else { // Receipt\n                allBankAccounts[accountIndex].balance += amount;\n            }\n            await writeBankAccounts(allBankAccounts);\n        }\n    }\n    \n    // Update Chart of Accounts based on transaction type\n    if (partyName === 'Owner') {\n        if (ownersEquityAccountIndex !== -1) {\n            if (type === 'Payment') { // Withdrawal\n                allAccounts[ownersEquityAccountIndex].balance -= amount;\n            } else { // Contribution\n                allAccounts[ownersEquityAccountIndex].balance += amount;\n            }\n        }\n    } else if (type === 'Payment' && expenseAccountId) {\n        const expenseAccountIndex = allAccounts.findIndex(a => a.code === expenseAccountId);\n        if(expenseAccountIndex !== -1) {\n            allAccounts[expenseAccountIndex].balance += amount;\n        }\n    } else if (type === 'Receipt') {\n        // Assuming non-equity receipts are rental income for simplicity\n        const revenueAccountIndex = allAccounts.findIndex(a => a.code === '4110');\n        if (revenueAccountIndex !== -1) {\n            allAccounts[revenueAccountIndex].balance += amount;\n        }\n    }\n\n    // Update Accounts Payable for vendor transactions\n    if (partyType === 'Vendor') {\n        if (accountsPayableIndex !== -1) {\n             if (type === 'Payment') {\n                allAccounts[accountsPayableIndex].balance -= amount;\n            } else { // Receipt from a vendor (refund)\n                allAccounts[accountsPayableIndex].balance -= amount;\n            }\n        }\n    }\n    \n     await writeData(accountsFilePath, allAccounts);\n}\n\n\ntype WorkflowAction = 'SUBMIT' | 'APPROVE' | 'REJECT' | 'ADD_COMMENT';\n\nconst workflowActionSchema = z.object({\n    transactionId: z.string(),\n    actorId: z.string(),\n    actorRole: z.string(),\n    comment: z.string().optional(),\n});\n\n\nconst performStateTransition = (transaction: Payment, action: WorkflowAction, currentUserRole: Role): Status => {\n    let newStatus: Status = transaction.currentStatus || 'DRAFT';\n\n    switch (action) {\n        case 'SUBMIT':\n            if (transaction.currentStatus === 'DRAFT' || transaction.currentStatus === 'REJECTED') {\n                newStatus = 'PENDING_ADMIN_APPROVAL';\n            }\n            break;\n        case 'APPROVE':\n            if (transaction.currentStatus === 'PENDING_ADMIN_APPROVAL' && currentUserRole === 'Admin') {\n                newStatus = 'PENDING_SUPER_ADMIN_APPROVAL';\n            } else if (transaction.currentStatus === 'PENDING_SUPER_ADMIN_APPROVAL' && currentUserRole === 'Super Admin') {\n                newStatus = 'POSTED';\n            }\n            break;\n        case 'REJECT':\n            if (transaction.currentStatus === 'PENDING_ADMIN_APPROVAL' && currentUserRole === 'Admin') {\n                newStatus = 'REJECTED';\n            } else if (transaction.currentStatus === 'PENDING_SUPER_ADMIN_APPROVAL' && currentUserRole === 'Super Admin') {\n                newStatus = 'REJECTED';\n            }\n            break;\n        default:\n            break;\n    }\n    return newStatus;\n};\n\nconst getHistoryActionText = (action: WorkflowAction, newStatus: Status, previousStatus: Status, role: Role): string => {\n     switch (action) {\n        case 'SUBMIT': return 'Submitted for Approval';\n        case 'APPROVE':\n            if (newStatus === 'POSTED') return 'Final Approval & Posted';\n            return `Approved by ${role}`;\n        case 'REJECT': return `Rejected by ${role}`;\n        case 'ADD_COMMENT': return 'Comment Added';\n        default: return 'Action Performed';\n    }\n}\n\n\nasync function updateTransactionWorkflow(\n    transactionId: string,\n    action: WorkflowAction,\n    actorId: string,\n    actorRole: Role,\n    comment?: string\n) {\n    try {\n        const allPayments = await readPayments();\n        const transactionIndex = allPayments.findIndex(t => t.id === transactionId);\n\n        if (transactionIndex === -1) {\n            return { success: false, error: 'Transaction not found.' };\n        }\n\n        const transaction = allPayments[transactionIndex];\n        const previousStatus = transaction.currentStatus || 'DRAFT';\n        const newStatus = performStateTransition(transaction, action, actorRole);\n        const historyActionText = getHistoryActionText(action, newStatus, previousStatus, actorRole);\n\n        const newHistoryEntry = {\n            action: historyActionText,\n            actorId: actorId,\n            actorRole: actorRole,\n            timestamp: new Date().toISOString(),\n            comments: comment || '',\n        };\n        \n        allPayments[transactionIndex] = {\n            ...transaction,\n            currentStatus: newStatus,\n            approvalHistory: [...(transaction.approvalHistory || []), newHistoryEntry],\n        };\n        \n        if (newStatus === 'POSTED' && previousStatus !== 'POSTED') {\n            await applyFinancialImpact(allPayments[transactionIndex]);\n        }\n\n\n        await writePayments(allPayments);\n        revalidatePath('/workflow');\n        revalidatePath('/finance/banking');\n        revalidatePath('/finance/chart-of-accounts');\n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n\n\nexport async function submitTransaction(params: z.infer<typeof workflowActionSchema>) {\n    const validation = workflowActionSchema.safeParse(params);\n    if (!validation.success) return { success: false, error: \"Invalid input\" };\n    const { transactionId, actorId, actorRole, comment } = validation.data;\n    return await updateTransactionWorkflow(transactionId, 'SUBMIT', actorId, actorRole as Role, comment);\n}\n\nexport async function approveTransaction(params: z.infer<typeof workflowActionSchema>) {\n     const validation = workflowActionSchema.safeParse(params);\n    if (!validation.success) return { success: false, error: \"Invalid input\" };\n    const { transactionId, actorId, actorRole, comment } = validation.data;\n    return await updateTransactionWorkflow(transactionId, 'APPROVE', actorId, actorRole as Role, comment);\n}\n\nexport async function rejectTransaction(params: z.infer<typeof workflowActionSchema>) {\n     const validation = workflowActionSchema.safeParse(params);\n    if (!validation.success) return { success: false, error: \"Invalid input\" };\n    const { transactionId, actorId, actorRole, comment } = validation.data;\n    return await updateTransactionWorkflow(transactionId, 'REJECT', actorId, actorRole as Role, comment);\n}\n\nexport async function addCommentToTransaction(params: z.infer<typeof workflowActionSchema>) {\n    const validation = workflowActionSchema.safeParse(params);\n    if (!validation.success) return { success: false, error: \"Invalid input\" };\n    const { transactionId, actorId, actorRole, comment } = validation.data;\n    return await updateTransactionWorkflow(transactionId, 'ADD_COMMENT', actorId as Role, actorRole as Role, comment);\n}\n\nexport async function reverseFinancialImpact(payment: Payment) {\n    if (payment.currentStatus !== 'POSTED') return; \n\n    if (payment.paymentFrom === 'Petty Cash') {\n        const pettyCash = await readPettyCash();\n        if (payment.type === 'Payment') {\n            pettyCash.balance += payment.amount;\n        } else {\n            pettyCash.balance -= payment.amount;\n        }\n        await writePettyCash(pettyCash);\n    } else if (payment.bankAccountId) {\n        const allBankAccounts = await readBankAccounts();\n        const accountIndex = allBankAccounts.findIndex(acc => acc.id === payment.bankAccountId);\n        if (accountIndex !== -1) {\n            if (payment.type === 'Payment') {\n                allBankAccounts[accountIndex].balance += payment.amount;\n            } else {\n                allBankAccounts[accountIndex].balance -= payment.amount;\n            }\n            await writeBankAccounts(allBankAccounts);\n        }\n    }\n\n    const allAccounts: Account[] = await readData(accountsFilePath);\n    const { type, amount, expenseAccountId, partyType, partyName } = payment;\n    \n    if (partyName === 'Owner') {\n        const ownersEquityAccountIndex = allAccounts.findIndex(a => a.code === '3110');\n        if (ownersEquityAccountIndex !== -1) {\n            if (type === 'Payment') { // Withdrawal\n                allAccounts[ownersEquityAccountIndex].balance += amount;\n            } else { // Contribution\n                allAccounts[ownersEquityAccountIndex].balance -= amount;\n            }\n        }\n    } else if (type === 'Payment' && expenseAccountId) {\n        const expenseAccountIndex = allAccounts.findIndex(a => a.code === expenseAccountId);\n        if(expenseAccountIndex !== -1) {\n            allAccounts[expenseAccountIndex].balance -= amount;\n        }\n    } else if (type === 'Receipt') {\n        const revenueAccountIndex = allAccounts.findIndex(a => a.code === '4110');\n        if (revenueAccountIndex !== -1) {\n            allAccounts[revenueAccountIndex].balance -= amount;\n        }\n    }\n\n    if (partyType === 'Vendor') {\n        const accountsPayableIndex = allAccounts.findIndex(a => a.code === '2110');\n        if (accountsPayableIndex !== -1) {\n             if (type === 'Payment') {\n                allAccounts[accountsPayableIndex].balance += amount;\n            } else { // Refund from vendor\n                allAccounts[accountsPayableIndex].balance += amount;\n            }\n        }\n    }\n\n    await writeData(accountsFilePath, allAccounts);\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1909, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/finance/payment/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { paymentSchema, type Payment } from './schema';\nimport { type BankAccount } from '@/app/finance/banking/schema';\nimport { startOfMonth, endOfMonth, isWithinInterval, parseISO, isBefore } from 'date-fns';\nimport { applyPaymentToInvoices } from '@/app/tenancy/customer/invoice/actions';\nimport { type Contract as TenancyContract } from '@/app/tenancy/contract/schema';\nimport { type LeaseContract } from '@/app/lease/contract/schema';\nimport { type Invoice } from '@/app/tenancy/customer/invoice/schema';\nimport { type Bill } from '@/app/vendors/bill/schema';\nimport { type Cheque } from '../cheque-deposit/schema';\nimport { getWorkflowSettings } from '@/app/admin/workflow-settings/actions';\nimport { applyFinancialImpact, reverseFinancialImpact } from '@/app/workflow/actions';\nimport { type ReceiptBook } from '../book-management/schema';\n\n\nconst paymentsFilePath = path.join(process.cwd(), 'src/app/finance/payment/payments-data.json');\nconst invoicesFilePath = path.join(process.cwd(), 'src/app/tenancy/customer/invoice/invoices-data.json');\nconst billsFilePath = path.join(process.cwd(), 'src/app/vendors/bill/bills-data.json');\nconst receiptBooksFilePath = path.join(process.cwd(), 'src/app/finance/book-management/receipt-books-data.json');\nconst tenancyContractsFilePath = path.join(process.cwd(), 'src/app/tenancy/contract/contracts-data.json');\nconst leaseContractsFilePath = path.join(process.cwd(), 'src/app/lease/contract/contracts-data.json');\n\n\nasync function readData(filePath: string) {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeData(filePath: string, data: any) {\n    await fs.writeFile(filePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\n\nasync function readPayments(): Promise<Payment[]> {\n    return await readData(paymentsFilePath);\n}\nasync function writePayments(data: Payment[]) {\n    await fs.writeFile(paymentsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nasync function readInvoices(): Promise<Invoice[]> {\n    return await readData(invoicesFilePath);\n}\nasync function writeInvoices(data: Invoice[]) {\n    await fs.writeFile(invoicesFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nasync function readBills(): Promise<Bill[]> {\n    return await readData(billsFilePath);\n}\nasync function writeBills(data: Bill[]) {\n    await fs.writeFile(billsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nasync function applyPaymentToBills(billPayments: { billId: string; amount: number }[], vendorCode: string) {\n    try {\n        const allBills = await readBills();\n        let utilityAccountId: string | undefined;\n\n        for (const payment of billPayments) {\n            const index = allBills.findIndex(b => b.id === payment.billId);\n            if (index !== -1) {\n                allBills[index].amountPaid = (allBills[index].amountPaid || 0) + payment.amount;\n                const remainingBalance = allBills[index].total - allBills[index].amountPaid;\n                \n                if (remainingBalance <= 0.001) {\n                    allBills[index].status = 'Paid';\n                } else if (allBills[index].status === 'Draft' || allBills[index].status === 'Overdue') {\n                    allBills[index].status = 'Sent';\n                }\n                \n                // Carry over the utilityAccountId if it exists on the bill\n                if (allBills[index].utilityAccountId) {\n                    utilityAccountId = allBills[index].utilityAccountId;\n                }\n            }\n        }\n\n        await writeBills(allBills);\n        revalidatePath(`/vendors/add?code=${vendorCode}`);\n        return { success: true, utilityAccountId };\n    } catch (error) {\n         return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function getPayments(user: { email: string; role: string; name?: string; }) {\n    const allPayments = await readPayments();\n    \n    // Filter out cancelled payments from the main view\n    const activePayments = allPayments.filter(p => p.status !== 'Cancelled');\n    \n    if (user.role === 'Admin' || user.role === 'Super Admin') {\n        return activePayments.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    }\n    \n    const userPayments = activePayments.filter(p => p.createdByUser === user.name);\n\n    return userPayments.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n}\n\nasync function updateReceiptBookUsage(receiptNo: string) {\n    try {\n        const books = await readData(receiptBooksFilePath) as ReceiptBook[];\n        const [bookNo] = receiptNo.split('-');\n        if (!bookNo) return;\n\n        const bookIndex = books.findIndex(b => b.bookNo === bookNo);\n        if (bookIndex !== -1) {\n            books[bookIndex].leafsUsed = (books[bookIndex].leafsUsed || 0) + 1;\n             if (books[bookIndex].leafsUsed >= books[bookIndex].noOfLeafs) {\n                books[bookIndex].status = 'Finished';\n            }\n            await writeData(receiptBooksFilePath, books);\n            revalidatePath('/finance/book-management');\n        }\n    } catch (error) {\n        console.error(`Failed to update receipt book for receipt #${receiptNo}`, error);\n    }\n}\n\n\nexport async function addPayment(data: z.infer<typeof paymentSchema>) {\n    const validation = paymentSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data format.' };\n    }\n    \n    const paymentData = validation.data;\n\n    try {\n        const allPayments = await readPayments();\n        \n        if (paymentData.referenceNo && paymentData.referenceType !== 'Other') {\n            const isDuplicate = allPayments.some(p => \n                p.referenceNo === paymentData.referenceNo &&\n                p.status !== 'Cancelled'\n            );\n            if (isDuplicate) {\n                return { success: false, error: `A payment for reference \"${paymentData.referenceNo}\" already exists.` };\n            }\n        }\n        \n        const workflowSettings = await getWorkflowSettings();\n        const initialStatus = workflowSettings.approvalProcessEnabled ? 'DRAFT' : 'POSTED';\n        const newId = paymentData.id || `PAY-${Date.now()}`;\n\n        const newPayment: Payment = {\n            ...paymentData,\n            id: newId,\n            currentStatus: initialStatus,\n        };\n        \n        if (newPayment.type === 'Receipt' && newPayment.invoiceAllocations && newPayment.invoiceAllocations.length > 0) {\n            await applyPaymentToInvoices(newPayment.invoiceAllocations, newPayment.partyName);\n        }\n\n        if (newPayment.type === 'Payment' && newPayment.billAllocations && newPayment.billAllocations.length > 0) {\n            const billResult = await applyPaymentToBills(newPayment.billAllocations, newPayment.partyName);\n            if (billResult.utilityAccountId) {\n                newPayment.utilityAccountId = billResult.utilityAccountId;\n            }\n        }\n        \n        // If it's a DRAFT, the approval history will be added upon submission.\n        if (initialStatus === 'POSTED') {\n            newPayment.approvalHistory = [{\n                action: 'Created & Auto-Posted',\n                actorId: paymentData.createdByUser || 'System',\n                actorRole: 'User',\n                timestamp: new Date().toISOString(),\n                comments: 'Directly recorded transaction.',\n            }];\n            await applyFinancialImpact(newPayment);\n        }\n        \n        if (newPayment.referenceType === 'Receipt Book' && newPayment.referenceNo) {\n            await updateReceiptBookUsage(newPayment.referenceNo);\n        }\n        \n        allPayments.push(newPayment);\n        await writePayments(allPayments);\n        \n        revalidateAllPaths(newPayment);\n        return { success: true, data: newPayment };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nexport async function cancelPayment(paymentId: string) {\n    try {\n        const allPayments = await readPayments();\n        const paymentIndex = allPayments.findIndex(p => p.id === paymentId);\n\n        if (paymentIndex === -1) {\n            return { success: false, error: 'Payment not found.' };\n        }\n        \n        const paymentToCancel = allPayments[paymentIndex];\n\n        if(paymentToCancel.status === 'Cancelled') {\n            return { success: false, error: 'Payment is already cancelled.'};\n        }\n        \n        if(paymentToCancel.currentStatus === 'POSTED') {\n           await reverseFinancialImpact(paymentToCancel);\n        }\n        \n        allPayments[paymentIndex].status = 'Cancelled';\n        await writePayments(allPayments);\n\n        revalidateAllPaths(paymentToCancel);\n        return { success: true };\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nexport async function restorePayment(paymentId: string) {\n    try {\n        const allPayments = await readPayments();\n        const paymentIndex = allPayments.findIndex(p => p.id === paymentId);\n\n        if (paymentIndex === -1) {\n            return { success: false, error: 'Payment not found.' };\n        }\n        \n        const paymentToRestore = allPayments[paymentIndex];\n\n        if(paymentToRestore.status !== 'Cancelled') {\n            return { success: false, error: 'Payment is not cancelled.'};\n        }\n        \n        if(paymentToRestore.currentStatus === 'POSTED') {\n           await applyFinancialImpact(paymentToRestore);\n        }\n        \n        // Restore to a sensible previous state\n        paymentToRestore.status = paymentToRestore.type === 'Payment' ? 'Paid' : 'Received';\n        await writePayments(allPayments);\n\n        revalidateAllPaths(paymentToRestore);\n        return { success: true };\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n// Keeping this function for hard deletes (e.g. of draft transactions) if needed later\nexport async function deletePayment(paymentId: string) {\n    try {\n        const allPayments = await readPayments();\n        const paymentToDelete = allPayments.find(p => p.id === paymentId);\n\n        if (!paymentToDelete) {\n            return { success: false, error: 'Payment not found.' };\n        }\n        \n        if(paymentToDelete.currentStatus === 'POSTED') {\n            await reverseFinancialImpact(paymentToDelete);\n        }\n        \n        const updatedPayments = allPayments.filter(p => p.id !== paymentId);\n        await writePayments(updatedPayments);\n\n       revalidateAllPaths(paymentToDelete);\n\n        return { success: true };\n    } catch (error) {\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\n\nfunction revalidateAllPaths(payment: Payment) {\n    revalidatePath('/finance/payment');\n    revalidatePath('/finance/banking');\n    revalidatePath('/finance/chart-of-accounts');\n    revalidatePath('/vendors/agents');\n    revalidatePath('/workflow');\n    revalidatePath(`/tenancy/customer/add?code=${payment.partyName}`);\n    revalidatePath(`/vendors/add?code=${payment.partyName}`);\n}\n\nexport async function getPartyNameLookups(): Promise<Record<string, string>> {\n    // This function can be moved to a central lookup file to avoid duplication\n    // For now, keeping it here to fix the immediate issue.\n    const tenants: {tenantData: any}[] = await readData(path.join(process.cwd(), 'src/app/tenancy/tenants/tenants-data.json'));\n    const landlords: {landlordData: any}[] = await readData(path.join(process.cwd(), 'src/app/landlord/landlords-data.json'));\n    const vendors: {vendorData: any}[] = await readData(path.join(process.cwd(), 'src/app/vendors/vendors-data.json'));\n    const agents: any[] = await readData(path.join(process.cwd(), 'src/app/vendors/agents/agents-data.json'));\n    const customers: {customerData: any}[] = await readData(path.join(process.cwd(), 'src/app/tenancy/customer/customers-data.json'));\n\n    const lookups: Record<string, string> = {};\n\n    tenants.forEach(t => {\n        if(t.tenantData.code) lookups[t.tenantData.code] = t.tenantData.name;\n    });\n    landlords.forEach(l => {\n        if(l.landlordData.code) lookups[l.landlordData.code] = l.landlordData.name;\n    });\n    vendors.forEach(v => {\n        if(v.vendorData.code) lookups[v.vendorData.code] = v.vendorData.name;\n    });\n     agents.forEach(a => {\n        if(a.code) lookups[a.code] = a.name;\n    });\n    customers.forEach(c => {\n        if(c.customerData.code) lookups[c.customerData.code] = c.customerData.name;\n    });\n\n    return lookups;\n}\n\n\nexport async function getSummary() {\n    const payments = await readPayments();\n    const now = new Date();\n    const startOfThisMonth = startOfMonth(now);\n    const endOfThisMonth = endOfMonth(now);\n\n    const summary = {\n        totalReceivedThisMonth: 0,\n        totalPaidThisMonth: 0,\n    };\n\n    for (const payment of payments) {\n        if(payment.currentStatus !== 'POSTED') continue; \n\n        const paymentDate = parseISO(payment.date);\n        if (isWithinInterval(paymentDate, { start: startOfThisMonth, end: endOfThisMonth })) {\n            if (payment.type === 'Receipt') {\n                summary.totalReceivedThisMonth += payment.amount;\n            } else if (payment.type === 'Payment') {\n                summary.totalPaidThisMonth += payment.amount;\n            }\n        }\n    }\n    \n    return summary;\n}\n\nexport async function getNextPaymentVoucherNumber() {\n    const payments = await readPayments();\n    const paymentVouchers = payments.filter(p => p.type === 'Payment');\n    if (paymentVouchers.length === 0) {\n        return 'PV-00001';\n    }\n    const lastVoucherNo = paymentVouchers.reduce((max, p) => {\n        const currentNum = parseInt(p.voucherNo.split('-')[1], 10);\n        return currentNum > max ? currentNum : max;\n    }, 0);\n    return `PV-${(lastVoucherNo + 1).toString().padStart(5, '0')}`;\n}\n\nexport async function getReferences(partyType: string, partyName: string, referenceType: string, paymentType: string, collectorName?: string) {\n    if (!partyType || !partyName || !referenceType) return [];\n    \n    const allPayments = await readPayments();\n    const paidRefs = new Set(allPayments.filter(p => p.status !== 'Cancelled').map(p => p.referenceNo));\n    \n    let references: { value: string, label: string, amount?: number, propertyCode?: string, unitCode?: string, roomCode?: string, partitionCode?: string, book?: any }[] = [];\n    \n    if (paymentType === 'Receipt') {\n        if (referenceType === 'Tenancy Contract') {\n            const contracts = await readData(tenancyContractsFilePath);\n            references = contracts\n                .filter((c: TenancyContract) => c.tenantCode === partyName)\n                .map((c: TenancyContract) => ({\n                    value: c.contractNo,\n                    label: `Contract: ${c.contractNo} (Property: ${c.property})`,\n                    amount: c.totalRent,\n                    propertyCode: c.property,\n                    unitCode: c.unitCode,\n                    roomCode: c.roomCode,\n                }));\n        } else if (referenceType === 'Invoice') {\n            const invoices = await readData(invoicesFilePath);\n            references = invoices\n                .filter((i: Invoice) => i.customerCode === partyName && i.status !== 'Paid' && i.status !== 'Cancelled')\n                .map((i: Invoice) => ({\n                    value: i.invoiceNo,\n                    label: `Invoice: ${i.invoiceNo} (Due: ${i.dueDate}, Bal: ${i.total - (i.amountPaid || 0)})`,\n                    amount: i.total - (i.amountPaid || 0),\n                    propertyCode: i.property,\n                    unitCode: i.unitCode,\n                    roomCode: i.roomCode,\n                }));\n        } else if (referenceType === 'Receipt Book') {\n            const books = await readData(receiptBooksFilePath);\n            books.forEach((book: ReceiptBook) => {\n                if(book.status === 'Active' && (!book.assignedTo || book.assignedTo === collectorName)) {\n                     for (let i = book.receiptStartNo; i <= book.receiptEndNo; i++) {\n                        const receiptNo = `${book.bookNo}-${i}`;\n                        if (!paidRefs.has(receiptNo)) {\n                            references.push({\n                                value: receiptNo,\n                                label: `Book: ${book.bookNo}, Receipt: ${i}`,\n                                book: book,\n                            });\n                        }\n                    }\n                }\n            });\n        }\n    } else { // Payment\n        if (referenceType === 'Lease Contract') {\n             const contracts = await readData(leaseContractsFilePath);\n             references = contracts\n                .filter((c: LeaseContract) => c.landlordCode === partyName)\n                .map((c: LeaseContract) => ({\n                    value: c.contractNo,\n                    label: `Lease: ${c.contractNo} (Property: ${c.property})`,\n                    amount: c.totalRent,\n                    propertyCode: c.property,\n                }));\n        } else if (referenceType === 'Bill') {\n            const bills = await readData(billsFilePath);\n            references = bills\n                .filter((b: Bill) => b.vendorCode === partyName && b.status !== 'Paid' && b.status !== 'Cancelled')\n                .map((b: Bill) => ({\n                    value: b.billNo,\n                    label: `Bill: ${b.billNo} (Due: ${b.dueDate}, Bal: ${b.total - (b.amountPaid || 0)})`,\n                    amount: b.total - (b.amountPaid || 0),\n                    propertyCode: b.property,\n                    unitCode: b.unitCode,\n                    roomCode: b.roomCode,\n                }));\n        }\n    }\n    \n    return references;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2374, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/workflow/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCompanyProfile as '00b6be478acfdf6b7794a7b34be547b3606ebfd51c'} from 'ACTIONS_MODULE0'\nexport {saveCompanyProfile as '40c9350172a0cc49767c134a7e5ed44affe0683337'} from 'ACTIONS_MODULE0'\nexport {checkLicenseStatus as '008a29e84bd260b304f797613c7c39c01029f96950'} from 'ACTIONS_MODULE1'\nexport {getCurrencySettings as '00bf02fbdbf2069a58be66f4c215b7083c555f2e0f'} from 'ACTIONS_MODULE2'\nexport {getCombinedAccessControlData as '00484ec9aa59cb806ed9f49233b1daa442fefc4db8'} from 'ACTIONS_MODULE3'\nexport {getPayments as '40c1f5a296264d9ae6886751e698393d67781cc609'} from 'ACTIONS_MODULE4'\nexport {getPartyNameLookups as '005d8c10ef7dc431c39b0717c7fb71a290ea36b7b7'} from 'ACTIONS_MODULE4'\nexport {deletePayment as '40bf7b83aadd69dd72d817b755f99ee278568979fd'} from 'ACTIONS_MODULE4'\nexport {approveTransaction as '408b6ef6fc8d09194066701fa2edd4ea8f9305defb'} from 'ACTIONS_MODULE5'\nexport {rejectTransaction as '40c95dd5b507e2eb7d80a18ecfb45b4f1808addef8'} from 'ACTIONS_MODULE5'\nexport {submitTransaction as '4047f1be9f4ec23f6c3699a601835a82156d8eb5e4'} from 'ACTIONS_MODULE5'\nexport {addCommentToTransaction as '40979727ef980c7aba95e802e0d29daccf4b768563'} from 'ACTIONS_MODULE5'\n"],"names":[],"mappings":";AAAA;AAEA;AACA;AACA;AACA;AAGA","debugId":null}},
    {"offset": {"line": 2442, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/workflow/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/workflow/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/workflow/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2456, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/workflow/page.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/workflow/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/workflow/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2470, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}