{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/utilities/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { utilityAccountSchema, type UtilityAccount } from './schema';\nimport { type Payment } from '../finance/payment/schema';\nimport { type UserRole } from '../admin/user-roles/schema';\nimport { saveBill } from '../vendors/bill/actions';\n\nconst accountsFilePath = path.join(process.cwd(), 'src/app/utilities/accounts-data.json');\nconst paymentsFilePath = path.join(process.cwd(), 'src/app/finance/payment/payments-data.json');\n\nasync function readAccounts(): Promise<UtilityAccount[]> {\n    try {\n        await fs.access(accountsFilePath);\n        const data = await fs.readFile(accountsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await fs.writeFile(accountsFilePath, JSON.stringify([], null, 2), 'utf-8');\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeAccounts(data: UtilityAccount[]) {\n    await fs.writeFile(accountsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nasync function readPayments() {\n     try {\n        const data = await fs.readFile(paymentsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function getAccounts(): Promise<UtilityAccount[]> {\n    const accounts = await readAccounts();\n    const payments = await readPayments();\n\n    const paymentMap = new Map<string, number>();\n    payments.forEach((p: any) => {\n        if (p.utilityAccountId && p.currentStatus === 'POSTED') {\n            const currentTotal = paymentMap.get(p.utilityAccountId) || 0;\n            paymentMap.set(p.utilityAccountId, currentTotal + p.amount);\n        }\n    });\n\n    return accounts.map(acc => ({\n        ...acc,\n        totalPaid: paymentMap.get(acc.id) || 0,\n    }));\n}\n\nexport async function saveUtilityAccount(\n    data: Omit<UtilityAccount, 'id'|'totalPaid'> & { id?: string, billAmount?: number, billDate?: string, recordFirstBill?: boolean }, \n    currentUser: UserRole\n) {\n    const validationSchema = utilityAccountSchema.omit({ id: true, totalPaid: true }).extend({\n        billAmount: z.coerce.number().optional(),\n        billDate: z.string().optional(),\n        recordFirstBill: z.boolean().optional(),\n    });\n\n    const validation = validationSchema.safeParse(data);\n    if (!validation.success) {\n        console.error(\"Validation Error:\", validation.error.format());\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    const allAccounts = await readAccounts();\n    const { recordFirstBill, billAmount, billDate, ...validatedData } = validation.data;\n    let savedAccount: UtilityAccount;\n\n    if (data.id) { // Update\n        const index = allAccounts.findIndex(a => a.id === data.id);\n        if (index === -1) return { success: false, error: 'Account not found.' };\n        allAccounts[index] = { ...allAccounts[index], ...validatedData };\n        savedAccount = allAccounts[index];\n    } else { // Create\n        const newAccount: UtilityAccount = { ...validatedData, id: `UTIL-${Date.now()}` };\n        allAccounts.push(newAccount);\n        savedAccount = newAccount;\n    }\n    await writeAccounts(allAccounts);\n\n    // If an initial bill is included, record it.\n    if (recordFirstBill && billAmount && billAmount > 0 && billDate) {\n        await recordBillForAccount({\n            accountId: savedAccount.id,\n            amount: billAmount,\n            billDate: billDate,\n            dueDate: billDate,\n            billNo: `BILL-${savedAccount.accountNumber}-${billDate}`,\n            notes: 'Initial bill recorded with account creation.'\n        });\n    }\n\n    revalidatePath('/utilities');\n    return { success: true };\n}\n\nexport async function deleteUtilityAccount(id: string) {\n    const allAccounts = await readAccounts();\n    const updatedAccounts = allAccounts.filter(a => a.id !== id);\n    if (allAccounts.length === updatedAccounts.length) {\n        return { success: false, error: 'Account not found.' };\n    }\n    await writeAccounts(updatedAccounts);\n    revalidatePath('/utilities');\n    return { success: true };\n}\n\nexport async function recordBillForAccount(data: { accountId: string; amount: number; billDate: string; dueDate?: string; billNo: string; notes?: string }) {\n    const accounts = await readAccounts();\n    const account = accounts.find(a => a.id === data.accountId);\n    if (!account) {\n        return { success: false, error: 'Utility account not found.' };\n    }\n\n    if (!account.vendorCode) {\n        return { success: false, error: `Utility account is not linked to a vendor. Please edit the account to link a vendor first.`};\n    }\n    \n    const billData = {\n      vendorCode: account.vendorCode,\n      vendorName: account.provider,\n      billNo: data.billNo,\n      billDate: data.billDate,\n      dueDate: data.dueDate || data.billDate,\n      status: 'Sent' as const,\n      property: account.propertyCode,\n      unitCode: account.unitCode,\n      utilityAccountId: account.id, // Pass the utility account ID here\n      notes: data.notes,\n      items: [{\n          id: `item-${Date.now()}`,\n          description: `${account.utilityType} bill for account ${account.accountNumber}`,\n          quantity: 1,\n          unitPrice: data.amount,\n          total: data.amount,\n          expenseAccountId: '5130' // Utilities\n      }],\n      subTotal: data.amount,\n      tax: 0,\n      total: data.amount\n    };\n\n    const result = await saveBill(billData, false, false);\n\n    if (result.success) {\n        revalidatePath('/utilities');\n        revalidatePath('/vendors/add');\n        revalidatePath('/vendors');\n        return { success: true };\n    } else {\n        return { success: false, error: result.error || 'Failed to create bill.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAgHsB,uBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,mLAAyB;AAE7C,MAAM,qBAAqB,sLAA4B;AAEvD,MAAM,oBAAoB,qLAA2B;AAErD,MAAM,mCAAqB,mNAAgB,CAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,sLAA4B;QAC3B,WAAW,IAAA,yHAAE,EACX,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,mBAAmB,WAAW,GAAG,sLAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,mNAAgB,CAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,sLAA4B;gBAC3B,KAAK;gBACL,WAAW,IAAA,yHAAE,EACX,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,sLAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,mNAAgB,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oLAA0B;QACzB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,oLAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,mNAAgB,CAG7C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,0LAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,uBAAuB,WAAW,GAChC,0LAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,IAAA,oJAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,qLAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,IAAA,oJAAc,EAAC;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,qLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/utilities/columns.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { ColumnDef } from '@tanstack/react-table';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';\nimport { MoreHorizontal, Edit, Trash2, DollarSign } from 'lucide-react';\nimport { type UtilityAccount } from './schema';\nimport { deleteUtilityAccount } from './actions';\nimport { useToast } from '@/hooks/use-toast';\nimport { useRouter } from 'next/navigation';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { useCurrency } from '@/context/currency-context';\n\nexport const columns = ({ onEdit, onRecordBill }: { onEdit: (account: UtilityAccount) => void; onRecordBill: (account: UtilityAccount) => void; }): ColumnDef<UtilityAccount>[] => {\n  \n    const ActionsCell = ({ row }: { row: { original: UtilityAccount } }) => {\n        const { toast } = useToast();\n        const router = useRouter();\n        const [isDeleting, setIsDeleting] = useState(false);\n        const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n        const account = row.original;\n\n        const handleDelete = async () => {\n            setIsDeleting(true);\n            const result = await deleteUtilityAccount(account.id);\n            if(result.success) {\n                toast({ title: 'Success', description: 'Utility account deleted.' });\n                router.refresh();\n            } else {\n                 toast({ variant: 'destructive', title: 'Error', description: result.error });\n            }\n            setIsDeleting(false);\n            setIsDeleteDialogOpen(false);\n        }\n        \n        return (\n            <>\n                 <AlertDialog open={isDeleteDialogOpen} onOpenChange={setIsDeleteDialogOpen}>\n                    <AlertDialogContent>\n                        <AlertDialogHeader>\n                            <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n                            <AlertDialogDescription>This action will permanently delete the utility account.</AlertDialogDescription>\n                        </AlertDialogHeader>\n                        <AlertDialogFooter>\n                            <AlertDialogCancel>Cancel</AlertDialogCancel>\n                            <AlertDialogAction onClick={handleDelete} disabled={isDeleting} className=\"bg-destructive hover:bg-destructive/90\">\n                                {isDeleting ? 'Deleting...' : 'Delete'}\n                            </AlertDialogAction>\n                        </AlertDialogFooter>\n                    </AlertDialogContent>\n                </AlertDialog>\n                <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                            <span className=\"sr-only\">Open menu</span>\n                            <MoreHorizontal className=\"h-4 w-4\" />\n                        </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align=\"end\">\n                        <DropdownMenuItem onSelect={() => onRecordBill(account)}>\n                            <DollarSign className=\"mr-2 h-4 w-4\" /> Record Bill\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onSelect={() => onEdit(account)}>\n                            <Edit className=\"mr-2 h-4 w-4\" /> Edit\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onSelect={() => setIsDeleteDialogOpen(true)} className=\"text-destructive\">\n                            <Trash2 className=\"mr-2 h-4 w-4\" /> Delete\n                        </DropdownMenuItem>\n                    </DropdownMenuContent>\n                </DropdownMenu>\n            </>\n        )\n    }\n\n\n    return [\n    {\n        accessorKey: 'utilityType',\n        header: 'Utility Type',\n    },\n    {\n        accessorKey: 'provider',\n        header: 'Provider',\n    },\n    {\n        accessorKey: 'accountNumber',\n        header: 'Account Number',\n    },\n    {\n        accessorKey: 'propertyCode',\n        header: 'Property',\n    },\n     {\n        accessorKey: 'unitCode',\n        header: 'Unit',\n        cell: ({ row }) => row.original.unitCode || <span className=\"text-muted-foreground\">N/A</span>\n    },\n     {\n        accessorKey: 'totalPaid',\n        header: () => <div className=\"text-right\">Total Paid</div>,\n        cell: function Cell({ row }) {\n            const { formatCurrency } = useCurrency();\n            const amount = row.original.totalPaid || 0;\n            return <div className=\"text-right font-medium\">{formatCurrency(amount)}</div>;\n        },\n    },\n    {\n        accessorKey: 'status',\n        header: 'Status',\n        cell: ({ row }) => <Badge variant={row.original.status === 'Active' ? 'default' : 'secondary'}>{row.original.status}</Badge>,\n    },\n    {\n        id: 'actions',\n        cell: ActionsCell,\n    }\n    ]\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,6DACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,mNAAgB,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 615, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/utilities/data-table.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport {\n  ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n  getPaginationRowModel,\n  getFilteredRowModel,\n  ColumnFiltersState,\n} from '@tanstack/react-table';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\nimport { FileText, FileSpreadsheet, Printer } from 'lucide-react';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useCurrency } from '@/context/currency-context';\nimport { type UtilityAccount } from './schema';\n\ndeclare module 'jspdf' {\n    interface jsPDF {\n      autoTable: (options: any) => jsPDF;\n    }\n}\n\ninterface DataTableProps<TData extends UtilityAccount, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n}\n\nexport function DataTable<TData extends UtilityAccount, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n  const printRef = React.useRef<HTMLDivElement>(null);\n  const { formatCurrency } = useCurrency();\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    getFilteredRowModel: getFilteredRowModel(),\n    state: {\n      columnFilters,\n    }\n  });\n  \n  const handlePrint = () => {\n    const printContent = printRef.current?.innerHTML;\n    if (printContent) {\n        const printWindow = window.open('', '', 'height=600,width=800');\n        if (printWindow) {\n            printWindow.document.write('<html><head><title>Utility Accounts</title>');\n            printWindow.document.write('<style>body { font-family: sans-serif; } table { width: 100%; border-collapse: collapse; } th, td { border: 1px solid #ddd; padding: 8px; } h1 { text-align: center; } .no-print { display: none; } </style>');\n            printWindow.document.write('</head><body>');\n            printWindow.document.write('<h1>Utility Accounts</h1>');\n            printWindow.document.write(printContent);\n            printWindow.document.write('</body></html>');\n            printWindow.document.close();\n            printWindow.print();\n        }\n    }\n  };\n\n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n    const tableData = table.getFilteredRowModel().rows.map(row => row.original);\n\n    doc.text(\"Utility Accounts Report\", 14, 16);\n    (doc as any).autoTable({\n        head: [['Utility Type', 'Provider', 'Account Number', 'Property', 'Unit', 'Total Paid', 'Status']],\n        body: tableData.map(acc => [\n            acc.utilityType,\n            acc.provider,\n            acc.accountNumber,\n            acc.propertyCode,\n            acc.unitCode || 'N/A',\n            formatCurrency(acc.totalPaid || 0),\n            acc.status,\n        ]),\n        startY: 20,\n    });\n    doc.save('utility-accounts.pdf');\n  };\n\n  const handleExportExcel = () => {\n    const dataToExport = table.getFilteredRowModel().rows.map(row => {\n        const acc = row.original as any;\n        return {\n            'Utility Type': acc.utilityType,\n            'Provider': acc.provider,\n            'Account Number': acc.accountNumber,\n            'Property': acc.propertyCode,\n            'Unit': acc.unitCode || 'N/A',\n            'Total Paid': acc.totalPaid || 0,\n            'Status': acc.status,\n        }\n    });\n\n    const ws = XLSX.utils.json_to_sheet(dataToExport);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Utility Accounts\");\n    XLSX.writeFile(wb, \"utility-accounts.xlsx\");\n  };\n\n  return (\n    <div>\n        <div className=\"flex justify-end mb-4 no-print gap-2\">\n            <Button variant=\"outline\" size=\"sm\" onClick={handlePrint}><Printer className=\"mr-2 h-4 w-4\" /> Print</Button>\n            <Button variant=\"outline\" size=\"sm\" onClick={handleExportPDF}><FileText className=\"mr-2 h-4 w-4\" /> PDF</Button>\n            <Button variant=\"outline\" size=\"sm\" onClick={handleExportExcel}><FileSpreadsheet className=\"mr-2 h-4 w-4\" /> Excel</Button>\n        </div>\n        <div ref={printRef}>\n            <div className=\"rounded-md border\">\n            <Table>\n                <TableHeader>\n                {table.getHeaderGroups().map((headerGroup) => (\n                    <TableRow key={headerGroup.id}>\n                    {headerGroup.headers.map((header) => {\n                        return (\n                        <TableHead key={header.id}>\n                            {header.isPlaceholder\n                            ? null\n                            : flexRender(\n                                header.column.columnDef.header,\n                                header.getContext()\n                                )}\n                        </TableHead>\n                        );\n                    })}\n                    </TableRow>\n                ))}\n                </TableHeader>\n                <TableBody>\n                {table.getRowModel().rows?.length ? (\n                    table.getRowModel().rows.map((row) => (\n                    <TableRow\n                        key={row.id}\n                        data-state={row.getIsSelected() && 'selected'}\n                    >\n                        {row.getVisibleCells().map((cell) => (\n                        <TableCell key={cell.id}>\n                            {flexRender(\n                            cell.column.columnDef.cell,\n                            cell.getContext()\n                            )}\n                        </TableCell>\n                        ))}\n                    </TableRow>\n                    ))\n                ) : (\n                    <TableRow>\n                    <TableCell\n                        colSpan={columns.length}\n                        className=\"h-24 text-center\"\n                    >\n                        No utility accounts found.\n                    </TableCell>\n                    </TableRow>\n                )}\n                </TableBody>\n            </Table>\n            </div>\n      </div>\n        <div className=\"flex items-center justify-end space-x-2 py-4 no-print\">\n            <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n            >\n            Previous\n            </Button>\n            <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n            >\n            Next\n            </Button>\n        </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 908, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/utilities/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { utilityAccountSchema, type UtilityAccount } from './schema';\nimport { type Payment } from '../finance/payment/schema';\nimport { type UserRole } from '../admin/user-roles/schema';\nimport { saveBill } from '../vendors/bill/actions';\n\nconst accountsFilePath = path.join(process.cwd(), 'src/app/utilities/accounts-data.json');\nconst paymentsFilePath = path.join(process.cwd(), 'src/app/finance/payment/payments-data.json');\n\nasync function readAccounts(): Promise<UtilityAccount[]> {\n    try {\n        await fs.access(accountsFilePath);\n        const data = await fs.readFile(accountsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await fs.writeFile(accountsFilePath, JSON.stringify([], null, 2), 'utf-8');\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeAccounts(data: UtilityAccount[]) {\n    await fs.writeFile(accountsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nasync function readPayments() {\n     try {\n        const data = await fs.readFile(paymentsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function getAccounts(): Promise<UtilityAccount[]> {\n    const accounts = await readAccounts();\n    const payments = await readPayments();\n\n    const paymentMap = new Map<string, number>();\n    payments.forEach((p: any) => {\n        if (p.utilityAccountId && p.currentStatus === 'POSTED') {\n            const currentTotal = paymentMap.get(p.utilityAccountId) || 0;\n            paymentMap.set(p.utilityAccountId, currentTotal + p.amount);\n        }\n    });\n\n    return accounts.map(acc => ({\n        ...acc,\n        totalPaid: paymentMap.get(acc.id) || 0,\n    }));\n}\n\nexport async function saveUtilityAccount(\n    data: Omit<UtilityAccount, 'id'|'totalPaid'> & { id?: string, billAmount?: number, billDate?: string, recordFirstBill?: boolean }, \n    currentUser: UserRole\n) {\n    const validationSchema = utilityAccountSchema.omit({ id: true, totalPaid: true }).extend({\n        billAmount: z.coerce.number().optional(),\n        billDate: z.string().optional(),\n        recordFirstBill: z.boolean().optional(),\n    });\n\n    const validation = validationSchema.safeParse(data);\n    if (!validation.success) {\n        console.error(\"Validation Error:\", validation.error.format());\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    const allAccounts = await readAccounts();\n    const { recordFirstBill, billAmount, billDate, ...validatedData } = validation.data;\n    let savedAccount: UtilityAccount;\n\n    if (data.id) { // Update\n        const index = allAccounts.findIndex(a => a.id === data.id);\n        if (index === -1) return { success: false, error: 'Account not found.' };\n        allAccounts[index] = { ...allAccounts[index], ...validatedData };\n        savedAccount = allAccounts[index];\n    } else { // Create\n        const newAccount: UtilityAccount = { ...validatedData, id: `UTIL-${Date.now()}` };\n        allAccounts.push(newAccount);\n        savedAccount = newAccount;\n    }\n    await writeAccounts(allAccounts);\n\n    // If an initial bill is included, record it.\n    if (recordFirstBill && billAmount && billAmount > 0 && billDate) {\n        await recordBillForAccount({\n            accountId: savedAccount.id,\n            amount: billAmount,\n            billDate: billDate,\n            dueDate: billDate,\n            billNo: `BILL-${savedAccount.accountNumber}-${billDate}`,\n            notes: 'Initial bill recorded with account creation.'\n        });\n    }\n\n    revalidatePath('/utilities');\n    return { success: true };\n}\n\nexport async function deleteUtilityAccount(id: string) {\n    const allAccounts = await readAccounts();\n    const updatedAccounts = allAccounts.filter(a => a.id !== id);\n    if (allAccounts.length === updatedAccounts.length) {\n        return { success: false, error: 'Account not found.' };\n    }\n    await writeAccounts(updatedAccounts);\n    revalidatePath('/utilities');\n    return { success: true };\n}\n\nexport async function recordBillForAccount(data: { accountId: string; amount: number; billDate: string; dueDate?: string; billNo: string; notes?: string }) {\n    const accounts = await readAccounts();\n    const account = accounts.find(a => a.id === data.accountId);\n    if (!account) {\n        return { success: false, error: 'Utility account not found.' };\n    }\n\n    if (!account.vendorCode) {\n        return { success: false, error: `Utility account is not linked to a vendor. Please edit the account to link a vendor first.`};\n    }\n    \n    const billData = {\n      vendorCode: account.vendorCode,\n      vendorName: account.provider,\n      billNo: data.billNo,\n      billDate: data.billDate,\n      dueDate: data.dueDate || data.billDate,\n      status: 'Sent' as const,\n      property: account.propertyCode,\n      unitCode: account.unitCode,\n      utilityAccountId: account.id, // Pass the utility account ID here\n      notes: data.notes,\n      items: [{\n          id: `item-${Date.now()}`,\n          description: `${account.utilityType} bill for account ${account.accountNumber}`,\n          quantity: 1,\n          unitPrice: data.amount,\n          total: data.amount,\n          expenseAccountId: '5130' // Utilities\n      }],\n      subTotal: data.amount,\n      tax: 0,\n      total: data.amount\n    };\n\n    const result = await saveBill(billData, false, false);\n\n    if (result.success) {\n        revalidatePath('/utilities');\n        revalidatePath('/vendors/add');\n        revalidatePath('/vendors');\n        return { success: true };\n    } else {\n        return { success: false, error: result.error || 'Failed to create bill.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IA8CsB,cAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 920, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,0KAAoB;AAEnC,MAAM,gBAAgB,6KAAuB;AAE7C,MAAM,eAAe,4KAAsB;AAE3C,MAAM,cAAc,2KAAqB;AAEzC,MAAM,8BAAgB,mNAAgB,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,6KAAuB;QACtB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,6KAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,mNAAgB,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,6KAAuB;gBACtB,KAAK;gBACL,WAAW,IAAA,yHAAE,EACX,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,2KAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,iMAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,6KAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,2KAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,mNAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,iLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1060, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,IAAA,yHAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1088, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,IAAA,uKAAG,EACvB;AAGF,MAAM,sBAAQ,mNAAgB,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,yKAAmB;QAClB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,yKAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1119, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/utilities/schema.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\nexport const utilityAccountSchema = z.object({\n  id: z.string(),\n  utilityType: z.enum(['Water & Electricity', 'Internet', 'Telephone']),\n  provider: z.string().min(1, 'Provider is required.'),\n  accountNumber: z.string().min(1, 'Account number is required.'),\n  propertyCode: z.string().min(1, 'A property must be linked.'),\n  unitCode: z.string().optional(),\n  vendorCode: z.string().optional(),\n  status: z.enum(['Active', 'Inactive']),\n  notes: z.string().optional(),\n  totalPaid: z.number().optional().default(0),\n});\n\nexport type UtilityAccount = z.infer<typeof utilityAccountSchema>;\n"],"names":[],"mappings":";;;;AACA;;AAEO,MAAM,uBAAuB,uKAAC,CAAC,MAAM,CAAC;IAC3C,IAAI,uKAAC,CAAC,MAAM;IACZ,aAAa,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAuB;QAAY;KAAY;IACpE,UAAU,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,eAAe,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACjC,cAAc,uKAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,UAAU,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,YAAY,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC/B,QAAQ,uKAAC,CAAC,IAAI,CAAC;QAAC;QAAU;KAAW;IACrC,OAAO,uKAAC,CAAC,MAAM,GAAG,QAAQ;IAC1B,WAAW,uKAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;AAC3C","debugId":null}},
    {"offset": {"line": 1148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/utilities/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { utilityAccountSchema, type UtilityAccount } from './schema';\nimport { type Payment } from '../finance/payment/schema';\nimport { type UserRole } from '../admin/user-roles/schema';\nimport { saveBill } from '../vendors/bill/actions';\n\nconst accountsFilePath = path.join(process.cwd(), 'src/app/utilities/accounts-data.json');\nconst paymentsFilePath = path.join(process.cwd(), 'src/app/finance/payment/payments-data.json');\n\nasync function readAccounts(): Promise<UtilityAccount[]> {\n    try {\n        await fs.access(accountsFilePath);\n        const data = await fs.readFile(accountsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await fs.writeFile(accountsFilePath, JSON.stringify([], null, 2), 'utf-8');\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeAccounts(data: UtilityAccount[]) {\n    await fs.writeFile(accountsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nasync function readPayments() {\n     try {\n        const data = await fs.readFile(paymentsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function getAccounts(): Promise<UtilityAccount[]> {\n    const accounts = await readAccounts();\n    const payments = await readPayments();\n\n    const paymentMap = new Map<string, number>();\n    payments.forEach((p: any) => {\n        if (p.utilityAccountId && p.currentStatus === 'POSTED') {\n            const currentTotal = paymentMap.get(p.utilityAccountId) || 0;\n            paymentMap.set(p.utilityAccountId, currentTotal + p.amount);\n        }\n    });\n\n    return accounts.map(acc => ({\n        ...acc,\n        totalPaid: paymentMap.get(acc.id) || 0,\n    }));\n}\n\nexport async function saveUtilityAccount(\n    data: Omit<UtilityAccount, 'id'|'totalPaid'> & { id?: string, billAmount?: number, billDate?: string, recordFirstBill?: boolean }, \n    currentUser: UserRole\n) {\n    const validationSchema = utilityAccountSchema.omit({ id: true, totalPaid: true }).extend({\n        billAmount: z.coerce.number().optional(),\n        billDate: z.string().optional(),\n        recordFirstBill: z.boolean().optional(),\n    });\n\n    const validation = validationSchema.safeParse(data);\n    if (!validation.success) {\n        console.error(\"Validation Error:\", validation.error.format());\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    const allAccounts = await readAccounts();\n    const { recordFirstBill, billAmount, billDate, ...validatedData } = validation.data;\n    let savedAccount: UtilityAccount;\n\n    if (data.id) { // Update\n        const index = allAccounts.findIndex(a => a.id === data.id);\n        if (index === -1) return { success: false, error: 'Account not found.' };\n        allAccounts[index] = { ...allAccounts[index], ...validatedData };\n        savedAccount = allAccounts[index];\n    } else { // Create\n        const newAccount: UtilityAccount = { ...validatedData, id: `UTIL-${Date.now()}` };\n        allAccounts.push(newAccount);\n        savedAccount = newAccount;\n    }\n    await writeAccounts(allAccounts);\n\n    // If an initial bill is included, record it.\n    if (recordFirstBill && billAmount && billAmount > 0 && billDate) {\n        await recordBillForAccount({\n            accountId: savedAccount.id,\n            amount: billAmount,\n            billDate: billDate,\n            dueDate: billDate,\n            billNo: `BILL-${savedAccount.accountNumber}-${billDate}`,\n            notes: 'Initial bill recorded with account creation.'\n        });\n    }\n\n    revalidatePath('/utilities');\n    return { success: true };\n}\n\nexport async function deleteUtilityAccount(id: string) {\n    const allAccounts = await readAccounts();\n    const updatedAccounts = allAccounts.filter(a => a.id !== id);\n    if (allAccounts.length === updatedAccounts.length) {\n        return { success: false, error: 'Account not found.' };\n    }\n    await writeAccounts(updatedAccounts);\n    revalidatePath('/utilities');\n    return { success: true };\n}\n\nexport async function recordBillForAccount(data: { accountId: string; amount: number; billDate: string; dueDate?: string; billNo: string; notes?: string }) {\n    const accounts = await readAccounts();\n    const account = accounts.find(a => a.id === data.accountId);\n    if (!account) {\n        return { success: false, error: 'Utility account not found.' };\n    }\n\n    if (!account.vendorCode) {\n        return { success: false, error: `Utility account is not linked to a vendor. Please edit the account to link a vendor first.`};\n    }\n    \n    const billData = {\n      vendorCode: account.vendorCode,\n      vendorName: account.provider,\n      billNo: data.billNo,\n      billDate: data.billDate,\n      dueDate: data.dueDate || data.billDate,\n      status: 'Sent' as const,\n      property: account.propertyCode,\n      unitCode: account.unitCode,\n      utilityAccountId: account.id, // Pass the utility account ID here\n      notes: data.notes,\n      items: [{\n          id: `item-${Date.now()}`,\n          description: `${account.utilityType} bill for account ${account.accountNumber}`,\n          quantity: 1,\n          unitPrice: data.amount,\n          total: data.amount,\n          expenseAccountId: '5130' // Utilities\n      }],\n      subTotal: data.amount,\n      tax: 0,\n      total: data.amount\n    };\n\n    const result = await saveBill(billData, false, false);\n\n    if (result.success) {\n        revalidatePath('/utilities');\n        revalidatePath('/vendors/add');\n        revalidatePath('/vendors');\n        return { success: true };\n    } else {\n        return { success: false, error: result.error || 'Failed to create bill.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAgEsB,qBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 1160, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/lookups/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { type Tenant } from '@/app/tenancy/tenants/schema';\nimport { type Landlord } from '@/app/landlord/schema';\nimport { type Vendor } from '@/app/vendors/schema';\nimport { type Agent } from '@/app/vendors/agents/schema';\nimport { type Customer } from '@/app/tenancy/customer/schema';\nimport { type BankAccount } from '@/app/finance/banking/schema';\nimport { type Property } from '@/app/property/properties/list/schema';\nimport { type Unit } from '@/app/property/units/schema';\nimport { type Room } from '@/app/property/rooms/schema';\nimport { type Partition } from '@/app/property/partitions/schema';\nimport { type ReceiptBook } from '@/app/finance/book-management/schema';\nimport { type Product } from '@/app/products/schema';\nimport { type MaintenanceTicket } from '@/app/maintenance/ticket-issue/schema';\nimport { type Account } from '@/app/finance/chart-of-accounts/schema';\n\n\nasync function readData<T>(filePath: string, defaultValue: T[] = []): Promise<T[]> {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await fs.writeFile(filePath, JSON.stringify(defaultValue, null, 2), 'utf-8');\n            return defaultValue;\n        }\n        throw error;\n    }\n}\n\nexport async function getLookups() {\n    const tenantsData: {tenantData: Tenant}[] = await readData(path.join(process.cwd(), 'src/app/tenancy/tenants/tenants-data.json'));\n    const landlordsData: {landlordData: Landlord}[] = await readData(path.join(process.cwd(), 'src/app/landlord/landlords-data.json'));\n    const vendorsData: {vendorData: Vendor}[] = await readData(path.join(process.cwd(), 'src/app/vendors/vendors-data.json'));\n    const agentsData: Agent[] = await readData(path.join(process.cwd(), 'src/app/vendors/agents/agents-data.json'));\n    const customersData: {customerData: Customer}[] = await readData(path.join(process.cwd(), 'src/app/tenancy/customer/customers-data.json'));\n    const bankAccountsData: BankAccount[] = await readData(path.join(process.cwd(), 'src/app/finance/banking/accounts-data.json'));\n    const usersData: any[] = await readData(path.join(process.cwd(), 'src/app/admin/user-roles/users.json'));\n    const receiptBooksData: ReceiptBook[] = await readData(path.join(process.cwd(), 'src/app/finance/book-management/receipt-books-data.json'));\n    const propertiesData: {propertyData: Property}[] = await readData(path.join(process.cwd(), 'src/app/property/properties/list/properties-data.json'));\n    const unitsData: Unit[] = await readData(path.join(process.cwd(), 'src/app/property/units/units-data.json'));\n    const roomsData: Room[] = await readData(path.join(process.cwd(), 'src/app/property/rooms/rooms-data.json'));\n    const productsData: Product[] = await readData(path.join(process.cwd(), 'src/app/products/products-data.json'));\n    const maintenanceTicketsData: MaintenanceTicket[] = await readData(path.join(process.cwd(), 'src/app/maintenance/ticket-issue/tickets-data.json'));\n    const expenseAccountsData: Account[] = await readData(path.join(process.cwd(), 'src/app/finance/chart-of-accounts/accounts.json'));\n\n\n    return {\n        tenants: tenantsData.map(t => ({ value: t.tenantData.code, label: t.tenantData.name })),\n        landlords: landlordsData.map(l => ({ value: l.landlordData.code, label: l.landlordData.name })),\n        vendors: vendorsData.map(v => ({ value: v.vendorData.code, label: v.vendorData.name })),\n        agents: agentsData.map(a => ({ value: a.code, label: a.name })),\n        customers: customersData.map(c => ({ value: c.customerData.code, label: c.customerData.name })),\n        bankAccounts: bankAccountsData.map(b => ({ value: b.id, label: `${b.accountName} (${b.bankName})`})),\n        users: usersData.map((u: any) => ({ value: u.name, label: u.name })),\n        receiptBooks: receiptBooksData,\n        properties: propertiesData.map(p => ({ value: p.propertyData.code, label: p.propertyData.name })),\n        units: unitsData.map(u => ({ value: u.unitCode, label: u.unitCode, propertyCode: u.propertyCode })),\n        rooms: roomsData.map(r => ({ value: r.roomCode, label: r.roomCode, propertyCode: r.propertyCode, unitCode: r.unitCode })),\n        products: productsData,\n        maintenanceTickets: maintenanceTicketsData\n            .filter(t => t.status !== 'Completed' && t.status !== 'Cancelled')\n            .map(t => ({ value: t.id, label: `${t.ticketNo} - ${t.issueType}` })),\n        expenseAccounts: expenseAccountsData\n            .filter(acc => acc.type === 'Expense' && !acc.isGroup)\n            .map(acc => ({ value: acc.code, label: `${acc.name} (${acc.code})` })),\n    }\n}\n\n\nexport async function getExpenseAccounts(): Promise<{ value: string; label: string }[]> {\n    const accounts: Account[] = await readData(path.join(process.cwd(), 'src/app/finance/chart-of-accounts/accounts.json'));\n    return accounts\n        .filter(acc => acc.type === 'Expense' && !acc.isGroup)\n        .map(acc => ({ value: acc.code, label: `${acc.name} (${acc.code})` }));\n}\n\n"],"names":[],"mappings":";;;;;;;IAoCsB,aAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 1172, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tenancy/contract/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { contractSchema, type Contract } from './schema';\nimport { type Unit } from '@/app/property/units/schema';\nimport { type Floor } from '@/app/property/floors/schema';\nimport { type Room } from '@/app/property/rooms/schema';\nimport { type Tenant } from '@/app/tenancy/tenants/schema';\nimport { addCheque } from '@/app/finance/cheque-deposit/actions';\nimport { differenceInDays, parseISO, addDays } from 'date-fns';\nimport { getUnits } from '@/app/property/units/actions';\nimport { getRooms } from '@/app/property/rooms/actions';\n\n\nconst contractsFilePath = path.join(process.cwd(), 'src/app/tenancy/contract/contracts-data.json');\nconst propertiesFilePath = path.join(process.cwd(), 'src/app/property/properties/list/properties-data.json');\nconst tenantsFilePath = path.join(process.cwd(), 'src/app/tenancy/tenants/tenants-data.json');\n\n\nasync function readData(filePath: string) {\n    try {\n        await fs.access(filePath);\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function readContracts(): Promise<Contract[]> {\n    try {\n        await fs.access(contractsFilePath);\n        const data = await fs.readFile(contractsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeContracts(data: Contract[]) {\n    await fs.writeFile(contractsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nexport async function getAllContracts() {\n    return await readContracts();\n}\n\n\nasync function createChequesFromContract(contract: Contract) {\n    if (contract.paymentMode !== 'cheque' || !contract.paymentSchedule) {\n        return;\n    }\n\n    for (const installment of contract.paymentSchedule) {\n        if (installment.chequeNo) {\n            await addCheque({\n                chequeNo: installment.chequeNo,\n                chequeDate: installment.dueDate,\n                amount: installment.amount,\n                bankName: installment.bankName || '',\n                status: 'In Hand',\n                type: 'Incoming',\n                partyType: 'Tenant',\n                partyName: contract.tenantCode,\n                property: contract.property,\n                unitCode: contract.unitCode,\n                roomCode: contract.roomCode,\n                contractNo: contract.contractNo,\n                remarks: `Installment ${installment.installment}`,\n            });\n        }\n    }\n}\n\nexport async function saveContractData(data: Omit<Contract, 'id'> & { id?: string, isAutoContractNo?: boolean }, isNewRecord: boolean) {\n    const { isAutoContractNo, ...contractData } = data;\n    const validation = contractSchema.omit({id: true}).safeParse(contractData);\n\n    if (!validation.success) {\n        const errors = validation.error.errors.map(e => e.message).join(', ');\n        return { success: false, error: errors };\n    }\n\n    try {\n        const allContracts = await readContracts();\n        const validatedData = validation.data;\n        \n        let savedContract: Contract;\n        \n        if (isNewRecord) {\n             let newContractNo = validatedData.contractNo;\n             if (isAutoContractNo || !newContractNo) {\n                newContractNo = await getNextContractNumber();\n             } else {\n                const contractExists = allContracts.some(c => c.contractNo === newContractNo);\n                if (contractExists) {\n                    return { success: false, error: `A contract with number \"${newContractNo}\" already exists.`};\n                }\n             }\n\n             const newContract: Contract = {\n                ...validatedData,\n                contractNo: newContractNo,\n                id: `CON-${Date.now()}`,\n            };\n            allContracts.push(newContract);\n            savedContract = newContract;\n        } else {\n            const index = allContracts.findIndex(c => c.id === data.id);\n            if (index !== -1) {\n                allContracts[index] = { ...allContracts[index], ...validatedData };\n                savedContract = allContracts[index];\n            } else {\n                 return { success: false, error: `Contract with ID \"${data.id}\" not found.` };\n            }\n        }\n        \n        await writeContracts(allContracts);\n        \n        await createChequesFromContract(savedContract);\n        \n        revalidatePath('/tenancy/contracts');\n        revalidatePath('/finance/cheque-deposit');\n        revalidatePath(`/tenancy/contract?id=${data.id}`);\n        return { success: true, data: savedContract };\n\n    } catch (error) {\n        console.error('Failed to save contract:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nasync function getNextContractNumber() {\n    const allContracts = await readContracts();\n    let maxNum = 0;\n    allContracts.forEach(c => {\n        const match = c.contractNo.match(/^TC-(\\d+)$/);\n        if (match) {\n            const num = parseInt(match[1], 10);\n            if (num > maxNum) {\n                maxNum = num;\n            }\n        }\n    });\n    return `TC-${(maxNum + 1).toString().padStart(4, '0')}`;\n}\n\nexport async function findContract(query: { unitCode?: string, tenantName?: string, contractId?: string }): Promise<{ success: boolean; data?: Contract; error?: string }> {\n    try {\n        const allContracts = await readContracts();\n        let foundContract: Contract | undefined;\n\n        if (query.contractId === 'new') {\n            const newContractNo = await getNextContractNumber();\n            return { success: true, data: { ...initialContractState, contractNo: newContractNo } };\n        }\n        \n        if (query.contractId) {\n            foundContract = allContracts.find(c => c.id === query.contractId);\n        } else if (query.unitCode) {\n            foundContract = allContracts.find(c => c.unitCode === query.unitCode);\n        } else if (query.tenantName) {\n            foundContract = allContracts.find(c => c.tenantName.toLowerCase() === query.tenantName.toLowerCase());\n        }\n\n        if (foundContract) {\n            return { success: true, data: foundContract };\n        } else {\n            return { success: false, error: 'Contract not found.' };\n        }\n    } catch (error) {\n        console.error('Failed to find contract:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred' };\n    }\n}\n\n\nconst initialContractState: Contract = {\n    id: '',\n    contractNo: '',\n    contractDate: '',\n    unitCode: '',\n    roomCode: '',\n    property: '',\n    tenantCode: '',\n    tenantName: '',\n    mobile: '',\n    email: '',\n    address: '',\n    startDate: '',\n    endDate: '',\n    totalRent: 0,\n    paymentMode: 'cash',\n    status: 'New',\n    terminationDate: '',\n    rentBasedOn: 'Monthly',\n    paymentFrequency: 'Monthly',\n    numberOfPayments: 1,\n    gracePeriod: 0,\n    paymentSchedule: [],\n    terms: '',\n    tawtheeqRegistrationNo: '',\n    tawtheeqStatus: 'Not Registered',\n    tawtheeqRegistrationDate: '',\n};\n\nexport async function deleteContract(contractId: string) {\n    try {\n        const allContracts = await readContracts();\n        const updatedContracts = allContracts.filter(c => c.id !== contractId);\n\n        if (allContracts.length === updatedContracts.length) {\n            return { success: false, error: 'Contract not found.' };\n        }\n        \n        await writeContracts(updatedContracts);\n        revalidatePath('/tenancy/contracts');\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to delete contract:', error);\n        return { success: false, error: (error as Error).message || 'An unknown error occurred.' };\n    }\n}\n\nasync function readProperties() {\n    try {\n        const data = await fs.readFile(propertiesFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (e) {\n        return [];\n    }\n}\n\nasync function readTenants(): Promise<{tenantData: Tenant}[]> {\n    try {\n        const data = await fs.readFile(tenantsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (e) {\n        return [];\n    }\n}\n\n\nexport async function getContractLookups() {\n    const properties = await readProperties();\n    const tenants = await readTenants();\n    const units = await getUnits();\n    const rooms = await getRooms();\n\n    return {\n        properties: properties.map((p: any) => ({ value: (p.propertyData || p).code, label: (p.propertyData || p).name })),\n        tenants: tenants.map((t: any) => ({ value: t.tenantData.code, label: t.tenantData.name, ...t.tenantData })),\n        units: units.map(u => ({...u, value: u.unitCode, label: u.unitCode })),\n        rooms: rooms.map(r => ({...r, value: r.roomCode, label: r.roomCode })),\n    }\n}\n\nexport async function getUnitsForProperty(propertyCode: string) {\n    const allUnits = await getUnits();\n    return allUnits\n        .filter(u => u.propertyCode === propertyCode && u.occupancyStatus !== 'Occupied')\n        .map((u: any) => ({ ...u, value: u.unitCode, label: u.unitCode }));\n}\n\nexport async function getRoomsForUnit(propertyCode: string, unitCode: string) {\n    const allRooms = await getRooms();\n    return allRooms\n        .filter(r => r.propertyCode === propertyCode && r.unitCode === unitCode && r.occupancyStatus === 'Vacant')\n        .map((r: any) => ({ ...r, value: r.roomCode, label: r.roomCode }));\n}\n\nexport async function getUnitDetails(unitCode: string) {\n    const allUnits = await getUnits();\n    const unit = allUnits.find(u => u.unitCode === unitCode);\n\n    if (!unit) {\n        return { success: false, error: 'Unit not found' };\n    }\n    \n    return { \n        success: true, \n        data: {\n            totalRent: unit.annualRent,\n        }\n    };\n}\n\nexport async function getRoomDetails(roomCode: string) {\n    const allRooms = await getRooms();\n    const room = allRooms.find(r => r.roomCode === roomCode);\n    if (!room) {\n        return { success: false, error: 'Room not found' };\n    }\n    return { success: true, data: room };\n}\n\nexport async function getTenantForProperty(propertyCode: string, unitCode: string, roomCode?: string) {\n    try {\n        const contracts: Contract[] = await fs.readFile(contractsFilePath, 'utf-8').then(JSON.parse);\n        \n        const activeContract = contracts.find(c =>\n            c.property === propertyCode &&\n            c.unitCode === unitCode &&\n            (roomCode ? c.roomCode === roomCode : true) && // Match room if provided\n            (c.status === 'New' || c.status === 'Renew')\n        );\n\n        if (activeContract) {\n            return { success: true, tenantName: activeContract.tenantName };\n        }\n        return { success: false, error: 'No active tenant found for this location.' };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n\nconst moveTenantSchema = z.object({\n    contractId: z.string(),\n    newPropertyCode: z.string(),\n    newUnitCode: z.string(),\n    newRoomCode: z.string().optional(),\n    moveDate: z.string(),\n});\n\nexport async function moveTenant(data: z.infer<typeof moveTenantSchema>) {\n    const validation = moveTenantSchema.safeParse(data);\n    if (!validation.success) {\n        return { success: false, error: 'Invalid data provided.' };\n    }\n\n    const { contractId, newPropertyCode, newUnitCode, newRoomCode, moveDate } = validation.data;\n\n    try {\n        const allContracts = await readContracts();\n        const contractIndex = allContracts.findIndex(c => c.id === contractId);\n\n        if (contractIndex === -1) {\n            return { success: false, error: 'Active contract not found for this tenant.' };\n        }\n\n        const contract = allContracts[contractIndex];\n        const oldLocation = `${contract.property}/${contract.unitCode}${contract.roomCode ? '/'+contract.roomCode : ''}`;\n        const newLocation = `${newPropertyCode}/${newUnitCode}${newRoomCode ? '/'+newRoomCode : ''}`;\n\n        contract.property = newPropertyCode;\n        contract.unitCode = newUnitCode;\n        contract.roomCode = newRoomCode;\n\n        contract.paymentSchedule.push({\n            installment: 0, \n            dueDate: moveDate,\n            amount: 0,\n            status: 'paid', \n            chequeNo: 'MOVEMENT',\n            bankName: `Moved from ${oldLocation} to ${newLocation}`,\n        });\n        \n        allContracts[contractIndex] = contract;\n\n        await writeContracts(allContracts);\n\n        revalidatePath('/tenancy/tenants/add');\n        revalidatePath('/property/properties');\n        revalidatePath('/property/units/vacant');\n        \n        return { success: true };\n\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n\nexport async function getLatestContractForTenant(tenantCode: string): Promise<{ success: boolean; data?: Contract; error?: string }> {\n    if (!tenantCode) {\n        return { success: false, error: \"Tenant code is required.\" };\n    }\n    try {\n        const allContracts = await readContracts();\n        const tenantContracts = allContracts.filter(c => c.tenantCode === tenantCode);\n        if (tenantContracts.length === 0) {\n            return { success: false, error: 'No contracts found for this tenant.' };\n        }\n        tenantContracts.sort((a, b) => new Date(b.endDate).getTime() - new Date(a.endDate).getTime());\n        return { success: true, data: tenantContracts[0] };\n    } catch (error) {\n        return { success: false, error: (error as Error).message };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IA4QsB,sBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 1184, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/command.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\ninterface CommandDialogProps extends DialogProps {}\n\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none aria-selected:bg-accent aria-selected:text-accent-foreground data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAEA;AAEA;AACA;AAEA;AACA;AARA;;;;;;;AAUA,MAAM,wBAAU,mNAAgB,CAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iJAAgB;QACf,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,QAAQ,WAAW,GAAG,iJAAgB,CAAC,WAAW;AAIlD,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAAE,GAAG,OAA2B;IAC/D,qBACE,8OAAC,4IAAM;QAAE,GAAG,KAAK;kBACf,cAAA,8OAAC,mJAAa;YAAC,WAAU;sBACvB,cAAA,8OAAC;gBAAQ,WAAU;0BAChB;;;;;;;;;;;;;;;;AAKX;AAEA,MAAM,6BAAe,mNAAgB,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;QAAkC,sBAAmB;;0BAClE,8OAAC,gNAAM;gBAAC,WAAU;;;;;;0BAClB,8OAAC,iJAAgB,CAAC,KAAK;gBACrB,KAAK;gBACL,WAAW,IAAA,yHAAE,EACX,0JACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAKf,aAAa,WAAW,GAAG,iJAAgB,CAAC,KAAK,CAAC,WAAW;AAE7D,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iJAAgB,CAAC,IAAI;QACpB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,mDAAmD;QAChE,GAAG,KAAK;;;;;;AAIb,YAAY,WAAW,GAAG,iJAAgB,CAAC,IAAI,CAAC,WAAW;AAE3D,MAAM,6BAAe,mNAAgB,CAGnC,CAAC,OAAO,oBACR,8OAAC,iJAAgB,CAAC,KAAK;QACrB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;;;;;;AAIb,aAAa,WAAW,GAAG,iJAAgB,CAAC,KAAK,CAAC,WAAW;AAE7D,MAAM,6BAAe,mNAAgB,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iJAAgB,CAAC,KAAK;QACrB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,0NACA;QAED,GAAG,KAAK;;;;;;AAIb,aAAa,WAAW,GAAG,iJAAgB,CAAC,KAAK,CAAC,WAAW;AAE7D,MAAM,iCAAmB,mNAAgB,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iJAAgB,CAAC,SAAS;QACzB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,wBAAwB;QACrC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,iJAAgB,CAAC,SAAS,CAAC,WAAW;AAErE,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iJAAgB,CAAC,IAAI;QACpB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2OACA;QAED,GAAG,KAAK;;;;;;AAIb,YAAY,WAAW,GAAG,iJAAgB,CAAC,IAAI,CAAC,WAAW;AAE3D,MAAM,kBAAkB,CAAC,EACvB,SAAS,EACT,GAAG,OACmC;IACtC,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,yDACA;QAED,GAAG,KAAK;;;;;;AAGf;AACA,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1344, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,2KAAqB;AAErC,MAAM,iBAAiB,8KAAwB;AAE/C,MAAM,+BAAiB,mNAAgB,CAGrC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,6KAAuB;kBACtB,cAAA,8OAAC,8KAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,IAAA,yHAAE,EACX,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,8KAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1386, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/combobox.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport { Check, ChevronsUpDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"\nimport { Input } from \"./input\"\n\ntype ComboboxProps = {\n    options?: { value: string; label: string }[];\n    value: string;\n    onSelect: (value: string, label?: string) => void;\n    placeholder?: string;\n    disabled?: boolean;\n}\n\nexport function Combobox({ options = [], value, onSelect, placeholder, disabled }: ComboboxProps) {\n  const [open, setOpen] = React.useState(false)\n  const [inputValue, setInputValue] = React.useState(\"\")\n\n  const selectedOption = options.find((option) => \n    (option.value?.toLowerCase() === value?.toLowerCase())\n  );\n  \n  React.useEffect(() => {\n    setInputValue(selectedOption?.label || value || '')\n  }, [value, selectedOption])\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"outline\"\n          role=\"combobox\"\n          aria-expanded={open}\n          className=\"w-full justify-between font-normal\"\n          disabled={disabled}\n        >\n          <span className=\"truncate\">\n            {selectedOption?.label || value || placeholder || \"Select option...\"}\n          </span>\n          <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[--radix-popover-trigger-width] p-0\">\n        <Command>\n          <CommandInput \n            placeholder=\"Search or enter new...\"\n            value={inputValue}\n            onValueChange={setInputValue}\n           />\n          <CommandList>\n            <CommandEmpty onSelect={() => {\n                onSelect(inputValue, inputValue)\n                setOpen(false)\n            }}>\n                <div \n                    className=\"py-2 px-4 text-sm cursor-pointer hover:bg-accent\"\n                    onClick={() => {\n                         onSelect(inputValue, inputValue)\n                         setOpen(false)\n                    }}\n                >\n                    Add new: \"{inputValue}\"\n                </div>\n            </CommandEmpty>\n            <CommandGroup>\n              {options.map((option, index) => (\n                <CommandItem\n                  key={`${option.value}-${index}`}\n                  value={option.label}\n                  onSelect={(currentLabel) => {\n                    const selected = options.find(opt => opt.label.toLowerCase() === currentLabel.toLowerCase())\n                    onSelect(selected?.value || currentLabel, selected?.label || currentLabel)\n                    setOpen(false)\n                  }}\n                >\n                  <Check\n                    className={cn(\n                      \"mr-2 h-4 w-4\",\n                      value === option.value ? \"opacity-100\" : \"opacity-0\"\n                    )}\n                  />\n                  {option.label}\n                </CommandItem>\n              ))}\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  )\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAAA;AAEA;AACA;AACA;AAQA;AAfA;;;;;;;;AA8BO,SAAS,SAAS,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAiB;IAC9F,MAAM,CAAC,MAAM,QAAQ,GAAG,iNAAc,CAAC;IACvC,MAAM,CAAC,YAAY,cAAc,GAAG,iNAAc,CAAC;IAEnD,MAAM,iBAAiB,QAAQ,IAAI,CAAC,CAAC,SAClC,OAAO,KAAK,EAAE,kBAAkB,OAAO;IAG1C,kNAAe,CAAC;QACd,cAAc,gBAAgB,SAAS,SAAS;IAClD,GAAG;QAAC;QAAO;KAAe;IAE1B,qBACE,8OAAC,8IAAO;QAAC,MAAM;QAAM,cAAc;;0BACjC,8OAAC,qJAAc;gBAAC,OAAO;0BACrB,cAAA,8OAAC,4IAAM;oBACL,SAAQ;oBACR,MAAK;oBACL,iBAAe;oBACf,WAAU;oBACV,UAAU;;sCAEV,8OAAC;4BAAK,WAAU;sCACb,gBAAgB,SAAS,SAAS,eAAe;;;;;;sCAEpD,8OAAC,gPAAc;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAG9B,8OAAC,qJAAc;gBAAC,WAAU;0BACxB,cAAA,8OAAC,8IAAO;;sCACN,8OAAC,mJAAY;4BACX,aAAY;4BACZ,OAAO;4BACP,eAAe;;;;;;sCAEjB,8OAAC,kJAAW;;8CACV,8OAAC,mJAAY;oCAAC,UAAU;wCACpB,SAAS,YAAY;wCACrB,QAAQ;oCACZ;8CACI,cAAA,8OAAC;wCACG,WAAU;wCACV,SAAS;4CACJ,SAAS,YAAY;4CACrB,QAAQ;wCACb;;4CACH;4CACc;4CAAW;;;;;;;;;;;;8CAG9B,8OAAC,mJAAY;8CACV,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,8OAAC,kJAAW;4CAEV,OAAO,OAAO,KAAK;4CACnB,UAAU,CAAC;gDACT,MAAM,WAAW,QAAQ,IAAI,CAAC,CAAA,MAAO,IAAI,KAAK,CAAC,WAAW,OAAO,aAAa,WAAW;gDACzF,SAAS,UAAU,SAAS,cAAc,UAAU,SAAS;gDAC7D,QAAQ;4CACV;;8DAEA,8OAAC,6MAAK;oDACJ,WAAW,+HACT,gBACA,UAAU,OAAO,KAAK,GAAG,gBAAgB;;;;;;gDAG5C,OAAO,KAAK;;2CAdR,GAAG,OAAO,KAAK,CAAC,CAAC,EAAE,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBjD","debugId":null}},
    {"offset": {"line": 1552, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAKA,MAAM,yBAAW,mNAAgB,CAC/B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EACX,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1579, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,mNAAgB,CAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,0KAAqB;QACpB,WAAW,IAAA,yHAAE,EACX,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,2KAAsB;YACrB,WAAW,IAAA,yHAAE,EACX;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,0KAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1614, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,mNAAgB,CAIhC,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,6KAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,IAAA,yHAAE,EACX,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,6KAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1644, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/utilities/add-utility-account-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';\nimport { Loader2 } from 'lucide-react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { utilityAccountSchema, type UtilityAccount } from './schema';\nimport { saveUtilityAccount } from './actions';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { getLookups as getGeneralLookups } from '@/app/lookups/actions';\nimport { getUnitsForProperty } from '@/app/tenancy/contract/actions';\nimport { Combobox } from '@/components/ui/combobox';\nimport { type Unit } from '@/app/property/units/schema';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Switch } from '@/components/ui/switch';\nimport { Separator } from '@/components/ui/separator';\nimport type { UserRole } from '@/app/admin/user-roles/schema';\n\nconst formSchema = utilityAccountSchema.omit({ id: true, totalPaid: true }).extend({\n    recordFirstBill: z.boolean().optional(),\n    billAmount: z.coerce.number().optional(),\n    billDate: z.string().optional(),\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\ninterface AddUtilityAccountDialogProps {\n  isOpen: boolean;\n  setIsOpen: (open: boolean) => void;\n  account?: UtilityAccount;\n  onSuccess: () => void;\n  propertyCode?: string;\n  currentUser: UserRole | null;\n}\n\nexport function AddUtilityAccountDialog({ isOpen, setIsOpen, account, onSuccess, propertyCode, currentUser }: AddUtilityAccountDialogProps) {\n  const [isSaving, setIsSaving] = useState(false);\n  const { toast } = useToast();\n  const [lookups, setLookups] = useState<{properties: {value: string, label: string}[], units: Unit[], vendors: {value: string, label: string}[]}>({properties: [], units: [], vendors: []});\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    watch,\n    setValue,\n    formState: { errors },\n  } = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      recordFirstBill: false,\n    }\n  });\n\n  const watchedPropertyCode = watch('propertyCode', propertyCode);\n  const recordFirstBill = watch('recordFirstBill');\n  const selectedVendorCode = watch('vendorCode');\n\n  useEffect(() => {\n    async function fetchLookups() {\n        if(isOpen) {\n            const data = await getGeneralLookups();\n            setLookups(prev => ({...prev, properties: data.properties || [], vendors: data.vendors || []}));\n            \n            if(propertyCode) {\n                 const unitsResult = await getUnitsForProperty(propertyCode);\n                 setLookups(prev => ({...prev, units: unitsResult as Unit[] || []}));\n            }\n        }\n    }\n    fetchLookups();\n  }, [isOpen, propertyCode]);\n  \n  useEffect(() => {\n    async function fetchUnits() {\n        if (watchedPropertyCode) {\n             const unitsResult = await getUnitsForProperty(watchedPropertyCode);\n             setLookups(prev => ({...prev, units: unitsResult as Unit[] || []}));\n        }\n    }\n    if (watchedPropertyCode && watchedPropertyCode !== propertyCode) {\n      fetchUnits();\n    }\n  }, [watchedPropertyCode, propertyCode]);\n  \n  useEffect(() => {\n    if (selectedVendorCode) {\n        const vendor = lookups.vendors.find(v => v.value === selectedVendorCode);\n        if (vendor) {\n            setValue('provider', vendor.label);\n        }\n    }\n  }, [selectedVendorCode, lookups.vendors, setValue]);\n\n  useEffect(() => {\n    if (isOpen) {\n        reset(account ? { ...account, recordFirstBill: false } : {\n            utilityType: 'Water & Electricity',\n            provider: '',\n            accountNumber: '',\n            propertyCode: propertyCode || '',\n            unitCode: '',\n            vendorCode: '',\n            status: 'Active',\n            notes: '',\n            recordFirstBill: false,\n            billAmount: 0,\n            billDate: '',\n        });\n    }\n  }, [isOpen, account, reset, propertyCode]);\n\n  const onSubmit = async (data: FormData) => {\n    if (!currentUser) {\n      toast({ variant: 'destructive', title: 'Error', description: 'User not found. Please log in again.' });\n      return;\n    }\n    setIsSaving(true);\n    const result = await saveUtilityAccount({ ...data, id: account?.id }, currentUser);\n    if (result.success) {\n      toast({\n        title: account ? 'Account Updated' : 'Account Added',\n        description: `Utility account has been saved successfully.`,\n      });\n      onSuccess();\n      setIsOpen(false);\n    } else {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: result.error,\n      });\n    }\n    setIsSaving(false);\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogContent className=\"sm:max-w-md\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <DialogHeader>\n            <DialogTitle>{account ? 'Edit Utility Account' : 'Add New Utility Account'}</DialogTitle>\n            <DialogDescription>\n                Fill in the details for the new utility account.\n            </DialogDescription>\n            </DialogHeader>\n            <div className=\"grid gap-4 py-4\">\n                <div className=\"space-y-2\">\n                    <Label>Utility Type</Label>\n                    <Controller name=\"utilityType\" control={control} render={({ field }) => (\n                        <Select onValueChange={field.onChange} value={field.value}><SelectTrigger><SelectValue/></SelectTrigger><SelectContent>\n                            <SelectItem value=\"Water & Electricity\">Water & Electricity</SelectItem>\n                            <SelectItem value=\"Internet\">Internet</SelectItem>\n                            <SelectItem value=\"Telephone\">Telephone</SelectItem>\n                        </SelectContent></Select>\n                    )} />\n                </div>\n                 <div className=\"space-y-2\">\n                    <Label htmlFor=\"vendorCode\">Provider (Vendor)</Label>\n                    <Controller name=\"vendorCode\" control={control} render={({ field }) => (\n                        <Combobox options={lookups.vendors} value={field.value || ''} onSelect={field.onChange} placeholder=\"Select Vendor\" />\n                    )} />\n                     {errors.vendorCode && <p className=\"text-destructive text-xs mt-1\">{errors.vendorCode.message}</p>}\n                </div>\n                <div className=\"space-y-2\">\n                    <Label htmlFor=\"provider\">Provider Name</Label>\n                    <Input id=\"provider\" {...register('provider')} disabled />\n                </div>\n                <div className=\"space-y-2\">\n                    <Label htmlFor=\"accountNumber\">Account Number</Label>\n                    <Input id=\"accountNumber\" {...register('accountNumber')} />\n                     {errors.accountNumber && <p className=\"text-destructive text-xs mt-1\">{errors.accountNumber.message}</p>}\n                </div>\n                <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                        <Label>Property</Label>\n                        <Controller name=\"propertyCode\" control={control} render={({ field }) => (\n                            <Combobox options={lookups.properties} value={field.value || ''} onSelect={field.onChange} placeholder=\"Select Property\" disabled={!!propertyCode} />\n                        )} />\n                        {errors.propertyCode && <p className=\"text-destructive text-xs mt-1\">{errors.propertyCode.message}</p>}\n                    </div>\n                     <div className=\"space-y-2\">\n                        <Label>Unit (Optional)</Label>\n                         <Controller name=\"unitCode\" control={control} render={({ field }) => (\n                            <Combobox options={lookups.units.map(u => ({value: u.unitCode, label: u.unitCode}))} value={field.value || ''} onSelect={field.onChange} placeholder=\"Select Unit\" disabled={!watchedPropertyCode}/>\n                        )} />\n                    </div>\n                </div>\n                 {!account && (\n                    <>\n                        <Separator className=\"my-2\" />\n                        <div className=\"space-y-4\">\n                            <div className=\"flex items-center space-x-2\">\n                                <Controller\n                                    name=\"recordFirstBill\"\n                                    control={control}\n                                    render={({ field }) => (\n                                        <Switch\n                                            id=\"recordFirstBill\"\n                                            checked={field.value}\n                                            onCheckedChange={field.onChange}\n                                        />\n                                    )}\n                                />\n                                <Label htmlFor=\"recordFirstBill\">Record first bill for this account?</Label>\n                            </div>\n                            {recordFirstBill && (\n                                <div className=\"grid grid-cols-2 gap-4 p-4 border rounded-md\">\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"billAmount\">Bill Amount</Label>\n                                        <Input id=\"billAmount\" type=\"number\" {...register('billAmount')} />\n                                    </div>\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"billDate\">Bill Date</Label>\n                                        <Input id=\"billDate\" type=\"date\" {...register('billDate')} />\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </>\n                )}\n                 <div className=\"space-y-2\">\n                    <Label>Notes</Label>\n                    <Textarea {...register('notes')} />\n                </div>\n            </div>\n            <DialogFooter>\n                <DialogClose asChild>\n                    <Button type=\"button\" variant=\"outline\">Cancel</Button>\n                </DialogClose>\n                <Button type=\"submit\" disabled={isSaving}>\n                    {isSaving && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                    {account ? 'Save Changes' : 'Add Account'}\n                </Button>\n            </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2330, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/utilities/actions.ts"],"sourcesContent":["\n\n'use server';\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { utilityAccountSchema, type UtilityAccount } from './schema';\nimport { type Payment } from '../finance/payment/schema';\nimport { type UserRole } from '../admin/user-roles/schema';\nimport { saveBill } from '../vendors/bill/actions';\n\nconst accountsFilePath = path.join(process.cwd(), 'src/app/utilities/accounts-data.json');\nconst paymentsFilePath = path.join(process.cwd(), 'src/app/finance/payment/payments-data.json');\n\nasync function readAccounts(): Promise<UtilityAccount[]> {\n    try {\n        await fs.access(accountsFilePath);\n        const data = await fs.readFile(accountsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            await fs.writeFile(accountsFilePath, JSON.stringify([], null, 2), 'utf-8');\n            return [];\n        }\n        throw error;\n    }\n}\n\nasync function writeAccounts(data: UtilityAccount[]) {\n    await fs.writeFile(accountsFilePath, JSON.stringify(data, null, 2), 'utf-8');\n}\n\nasync function readPayments() {\n     try {\n        const data = await fs.readFile(paymentsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return [];\n        }\n        throw error;\n    }\n}\n\nexport async function getAccounts(): Promise<UtilityAccount[]> {\n    const accounts = await readAccounts();\n    const payments = await readPayments();\n\n    const paymentMap = new Map<string, number>();\n    payments.forEach((p: any) => {\n        if (p.utilityAccountId && p.currentStatus === 'POSTED') {\n            const currentTotal = paymentMap.get(p.utilityAccountId) || 0;\n            paymentMap.set(p.utilityAccountId, currentTotal + p.amount);\n        }\n    });\n\n    return accounts.map(acc => ({\n        ...acc,\n        totalPaid: paymentMap.get(acc.id) || 0,\n    }));\n}\n\nexport async function saveUtilityAccount(\n    data: Omit<UtilityAccount, 'id'|'totalPaid'> & { id?: string, billAmount?: number, billDate?: string, recordFirstBill?: boolean }, \n    currentUser: UserRole\n) {\n    const validationSchema = utilityAccountSchema.omit({ id: true, totalPaid: true }).extend({\n        billAmount: z.coerce.number().optional(),\n        billDate: z.string().optional(),\n        recordFirstBill: z.boolean().optional(),\n    });\n\n    const validation = validationSchema.safeParse(data);\n    if (!validation.success) {\n        console.error(\"Validation Error:\", validation.error.format());\n        return { success: false, error: 'Invalid data format.' };\n    }\n\n    const allAccounts = await readAccounts();\n    const { recordFirstBill, billAmount, billDate, ...validatedData } = validation.data;\n    let savedAccount: UtilityAccount;\n\n    if (data.id) { // Update\n        const index = allAccounts.findIndex(a => a.id === data.id);\n        if (index === -1) return { success: false, error: 'Account not found.' };\n        allAccounts[index] = { ...allAccounts[index], ...validatedData };\n        savedAccount = allAccounts[index];\n    } else { // Create\n        const newAccount: UtilityAccount = { ...validatedData, id: `UTIL-${Date.now()}` };\n        allAccounts.push(newAccount);\n        savedAccount = newAccount;\n    }\n    await writeAccounts(allAccounts);\n\n    // If an initial bill is included, record it.\n    if (recordFirstBill && billAmount && billAmount > 0 && billDate) {\n        await recordBillForAccount({\n            accountId: savedAccount.id,\n            amount: billAmount,\n            billDate: billDate,\n            dueDate: billDate,\n            billNo: `BILL-${savedAccount.accountNumber}-${billDate}`,\n            notes: 'Initial bill recorded with account creation.'\n        });\n    }\n\n    revalidatePath('/utilities');\n    return { success: true };\n}\n\nexport async function deleteUtilityAccount(id: string) {\n    const allAccounts = await readAccounts();\n    const updatedAccounts = allAccounts.filter(a => a.id !== id);\n    if (allAccounts.length === updatedAccounts.length) {\n        return { success: false, error: 'Account not found.' };\n    }\n    await writeAccounts(updatedAccounts);\n    revalidatePath('/utilities');\n    return { success: true };\n}\n\nexport async function recordBillForAccount(data: { accountId: string; amount: number; billDate: string; dueDate?: string; billNo: string; notes?: string }) {\n    const accounts = await readAccounts();\n    const account = accounts.find(a => a.id === data.accountId);\n    if (!account) {\n        return { success: false, error: 'Utility account not found.' };\n    }\n\n    if (!account.vendorCode) {\n        return { success: false, error: `Utility account is not linked to a vendor. Please edit the account to link a vendor first.`};\n    }\n    \n    const billData = {\n      vendorCode: account.vendorCode,\n      vendorName: account.provider,\n      billNo: data.billNo,\n      billDate: data.billDate,\n      dueDate: data.dueDate || data.billDate,\n      status: 'Sent' as const,\n      property: account.propertyCode,\n      unitCode: account.unitCode,\n      utilityAccountId: account.id, // Pass the utility account ID here\n      notes: data.notes,\n      items: [{\n          id: `item-${Date.now()}`,\n          description: `${account.utilityType} bill for account ${account.accountNumber}`,\n          quantity: 1,\n          unitPrice: data.amount,\n          total: data.amount,\n          expenseAccountId: '5130' // Utilities\n      }],\n      subTotal: data.amount,\n      tax: 0,\n      total: data.amount\n    };\n\n    const result = await saveBill(billData, false, false);\n\n    if (result.success) {\n        revalidatePath('/utilities');\n        revalidatePath('/vendors/add');\n        revalidatePath('/vendors');\n        return { success: true };\n    } else {\n        return { success: false, error: result.error || 'Failed to create bill.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IA2HsB,uBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 2342, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/utilities/record-bill-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { z } from 'zod';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { format } from 'date-fns';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';\nimport { Loader2 } from 'lucide-react';\nimport { type UtilityAccount } from './schema';\nimport { recordBillForAccount } from './actions';\nimport type { UserRole } from '@/app/admin/user-roles/schema';\n\nconst formSchema = z.object({\n  amount: z.coerce.number().min(0.01, 'Amount must be positive'),\n  billDate: z.string().min(1, 'Bill date is required.'),\n  dueDate: z.string().optional(),\n  billNo: z.string().min(1, 'Bill number is required'),\n  notes: z.string().optional(),\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\ninterface RecordBillDialogProps {\n  isOpen: boolean;\n  setIsOpen: (open: boolean) => void;\n  account: UtilityAccount;\n  onSuccess: () => void;\n}\n\nexport function RecordBillDialog({ isOpen, setIsOpen, account, onSuccess }: RecordBillDialogProps) {\n  const [isSaving, setIsSaving] = useState(false);\n  const { toast } = useToast();\n  \n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n  });\n\n  useEffect(() => {\n    if(isOpen) {\n        reset({ billDate: format(new Date(), 'yyyy-MM-dd'), dueDate: format(new Date(), 'yyyy-MM-dd'), amount: 0, billNo: '', notes: '' });\n    }\n  }, [isOpen, reset]);\n\n  const onSubmit = async (data: FormData) => {\n    setIsSaving(true);\n    const result = await recordBillForAccount({ accountId: account.id, ...data });\n    if(result.success) {\n        toast({title: 'Bill Recorded', description: 'A new bill has been created and sent for approval.'});\n        onSuccess();\n        setIsOpen(false);\n    } else {\n        toast({variant: 'destructive', title: 'Error', description: result.error});\n    }\n    setIsSaving(false);\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogContent>\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <DialogHeader>\n                <DialogTitle>Record Utility Bill</DialogTitle>\n                <DialogDescription>\n                    Enter the details from the bill for {account.provider} - {account.accountNumber}.\n                </DialogDescription>\n            </DialogHeader>\n             <div className=\"grid gap-4 py-4\">\n                <div className=\"space-y-2\">\n                    <Label htmlFor=\"billNo\">Bill / Invoice Number</Label>\n                    <Input id=\"billNo\" {...register('billNo')} />\n                    {errors.billNo && <p className=\"text-destructive text-xs mt-1\">{errors.billNo.message}</p>}\n                </div>\n                 <div className=\"grid grid-cols-2 gap-4\">\n                     <div className=\"space-y-2\">\n                        <Label htmlFor=\"billDate\">Bill Date</Label>\n                        <Input id=\"billDate\" type=\"date\" {...register('billDate')} />\n                        {errors.billDate && <p className=\"text-destructive text-xs mt-1\">{errors.billDate.message}</p>}\n                    </div>\n                     <div className=\"space-y-2\">\n                        <Label htmlFor=\"dueDate\">Due Date</Label>\n                        <Input id=\"dueDate\" type=\"date\" {...register('dueDate')} />\n                    </div>\n                 </div>\n                 <div className=\"space-y-2\">\n                    <Label htmlFor=\"amount\">Amount</Label>\n                    <Input id=\"amount\" type=\"number\" {...register('amount')} />\n                    {errors.amount && <p className=\"text-destructive text-xs mt-1\">{errors.amount.message}</p>}\n                </div>\n            </div>\n            <DialogFooter>\n                <DialogClose asChild>\n                    <Button type=\"button\" variant=\"outline\">Cancel</Button>\n                </DialogClose>\n                <Button type=\"submit\" disabled={isSaving}>\n                    {isSaving && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                    Record Bill\n                </Button>\n            </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2665, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/utilities/utility-client.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { columns } from './columns';\nimport { DataTable } from './data-table';\nimport { type UtilityAccount } from './schema';\nimport { getAccounts } from './actions';\nimport { Button } from '@/components/ui/button';\nimport { Plus, FileText, FileSpreadsheet, Printer } from 'lucide-react';\nimport { AddUtilityAccountDialog } from './add-utility-account-dialog';\nimport { RecordBillDialog } from './record-bill-dialog';\nimport { type UserRole } from '@/app/admin/user-roles/schema';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { getLookups } from '@/app/lookups/actions';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport * as XLSX from 'xlsx';\nimport { format } from 'date-fns';\nimport { useCurrency } from '@/context/currency-context';\n\nexport function UtilityClient({ initialAccounts }: { initialAccounts: UtilityAccount[] }) {\n  const [accounts, setAccounts] = useState(initialAccounts);\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n  const [isBillDialogOpen, setIsBillDialogOpen] = useState(false);\n  const [selectedAccount, setSelectedAccount] = useState<UtilityAccount | undefined>(undefined);\n  const [currentUser, setCurrentUser] = useState<UserRole | null>(null);\n  const [filters, setFilters] = useState({\n    utilityType: '',\n    provider: '',\n    propertyCode: '',\n    unitCode: '',\n    accountNumber: '',\n  });\n  const [lookups, setLookups] = useState<{properties: {value: string, label: string}[], units: {value: string, label: string, propertyCode: string}[]}>({properties: [], units: []});\n\n   useEffect(() => {\n    const userProfile = sessionStorage.getItem('userProfile');\n    if(userProfile) {\n      setCurrentUser(JSON.parse(userProfile));\n    }\n    \n    getLookups().then(data => {\n        setLookups(prev => ({...prev, properties: data.properties, units: data.units}));\n    });\n  }, []);\n\n  const refreshAccounts = async () => {\n    const updatedAccounts = await getAccounts();\n    setAccounts(updatedAccounts);\n  };\n  \n  const handleEdit = (account: UtilityAccount) => {\n    setSelectedAccount(account);\n    setIsAddDialogOpen(true);\n  };\n  \n  const handleRecordBill = (account: UtilityAccount) => {\n    setSelectedAccount(account);\n    setIsBillDialogOpen(true);\n  };\n\n  useEffect(() => {\n    setAccounts(initialAccounts);\n  }, [initialAccounts]);\n\n  const handleFilterChange = (key: keyof typeof filters, value: string) => {\n    setFilters(prev => ({ ...prev, [key]: value }));\n  };\n\n  const filteredAccounts = useMemo(() => {\n    return accounts.filter(acc => {\n      return (\n        (filters.utilityType ? acc.utilityType === filters.utilityType : true) &&\n        (filters.provider ? acc.provider.toLowerCase().includes(filters.provider.toLowerCase()) : true) &&\n        (filters.propertyCode ? acc.propertyCode === filters.propertyCode : true) &&\n        (filters.unitCode ? acc.unitCode === filters.unitCode : true) &&\n        (filters.accountNumber ? acc.accountNumber.toLowerCase().includes(filters.accountNumber.toLowerCase()) : true)\n      );\n    });\n  }, [accounts, filters]);\n  \n  const uniqueProviders = [...new Set(accounts.map(a => a.provider).filter(Boolean))];\n  const uniqueUtilityTypes = [...new Set(accounts.map(a => a.utilityType).filter(Boolean))];\n\n\n  return (\n    <div className=\"container mx-auto py-10\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold font-headline\">Utility Management</h1>\n          <p className=\"text-muted-foreground\">\n            Track and manage utility accounts and their payments.\n          </p>\n        </div>\n        <Button onClick={() => { setSelectedAccount(undefined); setIsAddDialogOpen(true); }}>\n          <Plus className=\"mr-2 h-4 w-4\" /> Add Utility Account\n        </Button>\n      </div>\n\n       <Card className=\"mb-6 no-print\">\n            <CardHeader>\n                <CardTitle>Filters & Actions</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n                 <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4\">\n                    <div className=\"space-y-2\">\n                        <Label>Utility Type</Label>\n                        <Select value={filters.utilityType} onValueChange={(value) => handleFilterChange('utilityType', value === 'all' ? '' : value)}>\n                            <SelectTrigger><SelectValue placeholder=\"All Types\"/></SelectTrigger>\n                            <SelectContent>\n                                <SelectItem value=\"all\">All Types</SelectItem>\n                                {uniqueUtilityTypes.map(type => <SelectItem key={type} value={type}>{type}</SelectItem>)}\n                            </SelectContent>\n                        </Select>\n                    </div>\n                     <div className=\"space-y-2\">\n                        <Label>Provider</Label>\n                        <Select value={filters.provider} onValueChange={(value) => handleFilterChange('provider', value === 'all' ? '' : value)}>\n                            <SelectTrigger><SelectValue placeholder=\"All Providers\"/></SelectTrigger>\n                            <SelectContent>\n                                <SelectItem value=\"all\">All Providers</SelectItem>\n                                {uniqueProviders.map(p => <SelectItem key={p} value={p}>{p}</SelectItem>)}\n                            </SelectContent>\n                        </Select>\n                    </div>\n                    <div className=\"space-y-2\">\n                        <Label>Property</Label>\n                         <Select value={filters.propertyCode} onValueChange={(value) => handleFilterChange('propertyCode', value === 'all' ? '' : value)}>\n                            <SelectTrigger><SelectValue placeholder=\"All Properties\"/></SelectTrigger>\n                            <SelectContent>\n                                <SelectItem value=\"all\">All Properties</SelectItem>\n                                {lookups.properties.map(p => <SelectItem key={p.value} value={p.value}>{p.label}</SelectItem>)}\n                            </SelectContent>\n                        </Select>\n                    </div>\n                    <div className=\"space-y-2\">\n                        <Label>Unit</Label>\n                         <Select value={filters.unitCode} onValueChange={(value) => handleFilterChange('unitCode', value === 'all' ? '' : value)} disabled={!filters.propertyCode}>\n                            <SelectTrigger><SelectValue placeholder=\"All Units\"/></SelectTrigger>\n                            <SelectContent>\n                                <SelectItem value=\"all\">All Units</SelectItem>\n                                {lookups.units.filter(u => u.propertyCode === filters.propertyCode).map(u => <SelectItem key={u.value} value={u.value}>{u.label}</SelectItem>)}\n                            </SelectContent>\n                        </Select>\n                    </div>\n                    <div className=\"space-y-2\">\n                        <Label>Account Number</Label>\n                        <Input placeholder=\"Filter by account...\" value={filters.accountNumber} onChange={e => handleFilterChange('accountNumber', e.target.value)} />\n                    </div>\n                 </div>\n            </CardContent>\n        </Card>\n\n      <DataTable columns={columns({ onEdit: handleEdit, onRecordBill: handleRecordBill })} data={filteredAccounts} />\n      <AddUtilityAccountDialog \n        isOpen={isAddDialogOpen} \n        setIsOpen={setIsAddDialogOpen}\n        onSuccess={refreshAccounts}\n        account={selectedAccount}\n        currentUser={currentUser}\n      />\n      {selectedAccount && (\n         <RecordBillDialog\n            isOpen={isBillDialogOpen}\n            setIsOpen={setIsBillDialogOpen}\n            onSuccess={refreshAccounts}\n            account={selectedAccount}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}