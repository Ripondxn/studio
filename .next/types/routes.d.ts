// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin/access-control" | "/admin/backup" | "/admin/communication" | "/admin/company-profile" | "/admin/contract-continuity" | "/admin/currency" | "/admin/developer-credit" | "/admin/external-storage" | "/admin/license" | "/admin/notification" | "/admin/payment-gateway" | "/admin/profile" | "/admin/reset-data" | "/admin/user-roles" | "/admin/workflow-settings" | "/assets" | "/car-sales" | "/data-extractor" | "/data-processing/batch-data-extractor" | "/data-processing/single-data-extractor" | "/document-processor" | "/finance/banking" | "/finance/chart-of-accounts" | "/finance/cheque-deposit" | "/finance/cheque-management" | "/finance/cheque-print" | "/finance/daily-checkout" | "/finance/due-payments" | "/finance/expense" | "/finance/journal-entries" | "/finance/payment" | "/finance/payment/add" | "/finance/pdc-cheque" | "/finance/receipt-vouchers" | "/finance/receipt-vouchers/add" | "/finance/receipt-vouchers/add-single" | "/human-resource/employees" | "/human-resource/employees/add" | "/human-resource/employees/history" | "/intelligent-pricing" | "/landlord" | "/landlord/add" | "/lease/contract" | "/lease/contracts" | "/lease/termination" | "/login" | "/maintenance/contracts" | "/maintenance/contracts/add" | "/maintenance/ticket-issue" | "/pay" | "/products" | "/project-management/projects" | "/property/floors/list" | "/property/properties" | "/property/properties/add" | "/property/properties/list" | "/property/rooms/list" | "/property/units/list" | "/property/units/vacant" | "/rent-a-car" | "/reports" | "/reports/property-overview" | "/reports/rental-payment-tracking" | "/stores" | "/tenancy/contract" | "/tenancy/contracts" | "/tenancy/customer" | "/tenancy/customer/add" | "/tenancy/movement-history" | "/tenancy/tenants" | "/tenancy/tenants/add" | "/tenancy/termination" | "/utilities" | "/vault" | "/vault/add" | "/vault/edit/[id]" | "/vendors" | "/vendors/add" | "/vendors/agents" | "/vendors/agents/add" | "/workflow" | "/workflow/document-approval"
type AppRouteHandlerRoutes = "/api/backup/create" | "/api/backup/restore" | "/api/cron/generate-invoices" | "/api/upload"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin/access-control": {}
  "/admin/backup": {}
  "/admin/communication": {}
  "/admin/company-profile": {}
  "/admin/contract-continuity": {}
  "/admin/currency": {}
  "/admin/developer-credit": {}
  "/admin/external-storage": {}
  "/admin/license": {}
  "/admin/notification": {}
  "/admin/payment-gateway": {}
  "/admin/profile": {}
  "/admin/reset-data": {}
  "/admin/user-roles": {}
  "/admin/workflow-settings": {}
  "/api/backup/create": {}
  "/api/backup/restore": {}
  "/api/cron/generate-invoices": {}
  "/api/upload": {}
  "/assets": {}
  "/car-sales": {}
  "/data-extractor": {}
  "/data-processing/batch-data-extractor": {}
  "/data-processing/single-data-extractor": {}
  "/document-processor": {}
  "/finance/banking": {}
  "/finance/chart-of-accounts": {}
  "/finance/cheque-deposit": {}
  "/finance/cheque-management": {}
  "/finance/cheque-print": {}
  "/finance/daily-checkout": {}
  "/finance/due-payments": {}
  "/finance/expense": {}
  "/finance/journal-entries": {}
  "/finance/payment": {}
  "/finance/payment/add": {}
  "/finance/pdc-cheque": {}
  "/finance/receipt-vouchers": {}
  "/finance/receipt-vouchers/add": {}
  "/finance/receipt-vouchers/add-single": {}
  "/human-resource/employees": {}
  "/human-resource/employees/add": {}
  "/human-resource/employees/history": {}
  "/intelligent-pricing": {}
  "/landlord": {}
  "/landlord/add": {}
  "/lease/contract": {}
  "/lease/contracts": {}
  "/lease/termination": {}
  "/login": {}
  "/maintenance/contracts": {}
  "/maintenance/contracts/add": {}
  "/maintenance/ticket-issue": {}
  "/pay": {}
  "/products": {}
  "/project-management/projects": {}
  "/property/floors/list": {}
  "/property/properties": {}
  "/property/properties/add": {}
  "/property/properties/list": {}
  "/property/rooms/list": {}
  "/property/units/list": {}
  "/property/units/vacant": {}
  "/rent-a-car": {}
  "/reports": {}
  "/reports/property-overview": {}
  "/reports/rental-payment-tracking": {}
  "/stores": {}
  "/tenancy/contract": {}
  "/tenancy/contracts": {}
  "/tenancy/customer": {}
  "/tenancy/customer/add": {}
  "/tenancy/movement-history": {}
  "/tenancy/tenants": {}
  "/tenancy/tenants/add": {}
  "/tenancy/termination": {}
  "/utilities": {}
  "/vault": {}
  "/vault/add": {}
  "/vault/edit/[id]": { "id": string; }
  "/vendors": {}
  "/vendors/add": {}
  "/vendors/agents": {}
  "/vendors/agents/add": {}
  "/workflow": {}
  "/workflow/document-approval": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
